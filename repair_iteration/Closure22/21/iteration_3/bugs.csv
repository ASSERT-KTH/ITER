bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffects    ||    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
2	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
3	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
4	[BUG]  [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
5	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
6	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
7	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
8	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
9	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
10	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
11	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
12	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [CE]  class,  interface,  or  enum  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
13	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
14	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
15	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level!=  level)  {	  if(protectSideEffectFreeCode    &&    level!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
16	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode!=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode!=  level)  {	  if(protectSideEffectFreeCode    &&    level!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
17	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  guardSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  guardSideEffects())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  guardSideEffects())  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
18	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
19	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
20	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  guardSideEffects()  &&  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
21	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  <  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  <  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  <  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
22	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  guardSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
23	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
24	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
25	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
26	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
27	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  &&  level!=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level!=  level)  {	  if(!protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
28	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level  ==  level)  {	  if(!protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
29	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
30	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&!protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&!protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&!protectSideEffectFreeCode)  {	  if(!protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
31	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_ERROR)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
32	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_ERROR)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
33	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_FAILURE)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
34	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
35	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_WARNING)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_WARNING)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USELESS_CODE_WARNING)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
36	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level  -  1);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level  -  1);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  SHOW_SIDE_EFfectFreeCode);  [CE]  class,  interface,  or  enum  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  SHOW_SIDE_EFfectFreeCode);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  SHOW_SIDE_EFfectFreeCode);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
43	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
44	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
45	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
46	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  security);  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  security);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  security);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
47	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
48	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
49	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
50	[BUG]  [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
51	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
52	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
53	[BUG]  [BUGGY]  if(protectSideEffectfreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectfreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectfreeCode  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffects()    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
54	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
55	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
56	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
57	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
58	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
59	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
60	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
61	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
62	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
63	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
64	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
65	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
66	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
67	[BUG]  [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
68	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  PROTECTOR_FN)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  PROTECTOR_FN)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  PROTECTOR_FN)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
69	[BUG]  [BUGGY]  if(protectSideEffectfreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectfreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectfreeCode  &&  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffects    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
70	[BUG]  [BUGGY]  if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffects    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
71	[BUG]  [BUGGY]  if(protectSideEffectfreeCode  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectfreeCode  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectfreeCode  &&  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
72	[BUG]  [BUGGY]  if(protectSideEffects  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffects    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
73	[BUG]  [BUGGY]  if(protectSideEffectFreeCode()  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode()  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode()  &&  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
74	[BUG]  [BUGGY]  if(protectSideEffectFreeCode()  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode()  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode()  &&  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
75	[BUG]  [BUGGY]  if(protectSideEffectFreeCode()  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode()  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode()  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
76	[BUG]  [BUGGY]  if(protectSideEffectFreeCode()  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode()  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode()  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
77	[BUG]  [BUGGY]  if(protectSideEffectFreeCode()  &&  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode()  &&  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode()  &&  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
78	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode())  {	  if(protectSideEffectFreeCode())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
79	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
80	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
81	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
82	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
83	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  this,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  this,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  this,  level);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externals,  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externals,  this);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
86	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  Level.WARNING);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  Level.WARNING);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  Level.WARNING);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
87	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externes,  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externes,  this);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
88	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
89	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
90	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
91	[BUG]  [BUGGY]  if(!protectSideEffects  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffects  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffects  &&  level!=  USELESS_CODE_ERROR)  {	  if(!protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
92	[BUG]  [BUGGY]  if(!protectSideEffects  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffects  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffects  &&  level  ==  USELESS_CODE_ERROR)  {	  if(!protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
93	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
94	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
95	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
96	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {	  if(level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
97	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
98	[BUG]  [BUGGY]  if(protectSideEffectFreeCode,  level  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode,  level  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode,  level  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
99	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
100	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
101	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
102	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
103	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
104	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_BLOCK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
105	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_BLOCK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
106	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_BLOCK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
107	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_BLOCK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
108	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_BLOCK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
109	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_BLOCK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
110	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externals,  level);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
111	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  Traversal.traverse(compiler,  root,  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	Traversal.traverse(compiler,  root,  this);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
112	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  roots,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  roots,  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  roots,  this);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
113	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
114	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
115	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
116	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
117	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode)  {  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode)  {  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  }	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
118	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
119	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  level)  {	  if(protectSideEffectFreeCode    &&    level    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
120	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode  ==  level)  {	  if(protectSideEffectFreeCode    &&    level    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
121	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  <  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  <  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  <  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
122	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
123	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
124	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
125	[BUG]  [BUGGY]  if(protectSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffects()    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
126	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
127	[BUG]  [BUGGY]  if(level.isEmpty()  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level.isEmpty()  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level.isEmpty()  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
128	[BUG]  [BUGGY]  if(level.isConstructor()  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level.isConstructor()  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level.isConstructor()  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
129	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
130	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
131	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
132	[BUG]  [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
133	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {	  if(!protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
134	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {	  if(!protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
135	[BUG]  [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >=  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >=  USELESS_CODE_ERROR  ||  level  ==  protectSideEffectFreeCode)  {	  if(!protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
136	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
137	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode())  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
138	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffects())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffects())  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
139	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
140	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectFreeCode())  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
141	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectfreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectfreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffectfreeCode)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
142	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffectFreeCode())  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffectFreeCode())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffectFreeCode())  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
143	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level  >=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  &&  level  >=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level  >=  level)  {	  if(!protectSideEffectFreeCode    &&    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
144	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
145	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
146	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
147	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  roots,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  roots,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  roots,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
148	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  Traversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	Traversal.traverse(compiler,  root,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
149	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  level!=  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  level!=  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  level!=  protectSideEffectFreeCode)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
150	[BUG]  [BUGGY]  if(level  ==  level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
151	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level!=  protectSideEffectFreeCode)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
152	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
153	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  level)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
154	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >=  level)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
155	[BUG]  [BUGGY]  if(protectSideEffects  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffects    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
156	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
157	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
158	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
159	[BUG]  [BUGGY]  if(level!=  level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
160	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  level!=  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  level!=  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  level!=  protectSideEffectFreeCode)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
161	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level!=  protectSideEffectFreeCode)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
162	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >=  level)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
163	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >>  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >>  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >>  level)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
164	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  ==  level)  {	  if(level    ||    protectSideEffectFreeCodeSWITCH_ERROR!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
165	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode!=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode!=  level)  {	  if(level    ||    protectSideEffectFreeCodeSWITCH_ERROR!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
166	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  protectSideEffectFreeCode)  {	  if(level    ||    protectSideEffectFreeCodeSWITCH_ERROR!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
167	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  >=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  >=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  >=  level)  {	  if(level    ||    protectSideEffectFreeCodeSWITCH_ERROR!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
168	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&!protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&!protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&!protectSideEffectFreeCode)  {	  if(!protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
169	[BUG]  [BUGGY]  if(level  ==  level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
170	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
171	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
172	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  level  ==  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  level  ==  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  level  ==  protectSideEffectFreeCode)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
173	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
174	[BUG]  [BUGGY]  if(level!=  level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
175	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
176	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  level  ==  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  level  ==  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  level  ==  protectSideEffectFreeCode)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
177	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
178	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  protectSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  protectSideEffects())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  protectSideEffects())  {	  if(protectSideEffectFreeCode    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
179	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
180	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
181	[BUG]  [BUGGY]  if(protectSideEffects()  ||  protectSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects()  ||  protectSideEffects())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  ||  protectSideEffects())  {	  if(protectSideEffectFreeCode    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
182	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  <  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  <  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  <  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
183	[BUG]  [BUGGY]  if(protectSideEffects()  ||  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects()  ||  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  ||  protectSideEffectFreeCode)  {	  if(protectSideEffectFreeCode    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
184	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
185	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
186	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
187	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externals,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externals,  new  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
188	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  level,  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
189	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
190	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externes,  level);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
191	[BUG]  [BUGGY]  Traversal.traverse(compiler,  externs,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  Traversal.traverse(compiler,  externs,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	Traversal.traverse(compiler,  externs,  level);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
192	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
193	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ||  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ||  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ||  level)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
194	[BUG]  [BUGGY]  if(protectSideEffectfreeCode  ||  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectfreeCode  ||  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectfreeCode  ||  level)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
195	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
196	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  ||  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  ||  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  ||  level)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
197	[BUG]  [BUGGY]  if(protectSideEffects()  &&  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects()  &&  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  &&  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffects()    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
198	[BUG]  [BUGGY]  if(protectSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffects()    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
199	[BUG]  [BUGGY]  if(protectSideEffectfreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectfreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectfreeCode  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects()    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
200	[BUG]  [BUGGY]  if(level  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  level!=  USELESS_CODE_ERROR)  {	  if(level    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
201	[BUG]  [BUGGY]  if(level  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  >=  USELESS_CODE_ERROR)  {	  if(level    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
202	[BUG]  [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR,  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR,  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level!=  USELESS_CODE_ERROR,  protectSideEffectFreeCode)  {	  if(level    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
203	[BUG]  [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(level    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
204	[BUG]  [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
205	[BUG]  [BUGGY]  if(level!=  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
206	[BUG]  [BUGGY]  if(level!=  CheckSideEffects.USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckSideEffects.USE_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckSideEffects.USE_CODE_ERROR)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
207	[BUG]  [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_FAILURE)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
208	[BUG]  [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level!=  CheckSideEffects.USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level!=  CheckSideEffects.USE_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level!=  CheckSideEffects.USE_CODE_ERROR)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
209	[BUG]  [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USELESS_CODE_ERROR)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
210	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
211	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
212	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
213	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
214	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >  level)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
215	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  protectSideEffects()  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
216	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
217	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripEffects());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
218	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
219	[BUG]  [BUGGY]  if(level  +  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  +  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  +  level!=  USELESS_CODE_ERROR)  {	  if(level    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
220	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  protectSideEffectFreeCode)  {	  if(level    ||    protectSideEffectFreeCodeSWITCH_ERROR!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
221	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
222	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_BLOCK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
223	[BUG]  [BUGGY]  if(protectSideEffects  &&  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects  &&  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  &&  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffects    ||    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
224	[BUG]  [BUGGY]  if(protectSideEffectfreeCode  &&  guardSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectfreeCode  &&  guardSideEffects())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectfreeCode  &&  guardSideEffects())  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
225	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  [Delete]  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  [Delete]  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  [Delete]  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
226	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
227	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
228	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
229	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {	  if(level    ==    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
230	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
231	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    >    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
232	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
233	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffects())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffects())  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
234	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
235	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectionSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectionSideEffectFreeCode  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectionSideEffectFreeCode  ==  level)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode    ==    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
236	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  null);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  null);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
237	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  CheckLevel());  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  CheckLevel());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  CheckLevel());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
238	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
239	[BUG]  [BUGGY]  if(level  >=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
240	[BUG]  [BUGGY]  if(level.getType()  ==  Token.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level.getType()  ==  Token.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level.getType()  ==  Token.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
241	[BUG]  [BUGGY]  if(Level.USELESS_CODE_ERROR!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(Level.USELESS_CODE_ERROR!=  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(Level.USELESS_CODE_ERROR!=  level)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
242	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
243	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  >  level)  {	  if(level!=    USELESS_CODE_ERROR    &&    protectSideEffectFreeCode!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
244	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  externs);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  externs);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  externs);	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
245	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripEffects());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
246	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
247	[BUG]  [BUGGY]  if(level.equals(USELESS_CODE_ERROR))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level.equals(USELESS_CODE_ERROR))  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level.equals(USELESS_CODE_ERROR))  {	  if(level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
248	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
249	[BUG]  [BUGGY]  if(level  &&  protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
250	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USE_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USE_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level!=    level)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
251	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
252	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  CheckLevel());  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  CheckLevel());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  new  CheckLevel());	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
253	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level  +  1);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
254	[BUG]  [BUGGY]  if(level  >=  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >=  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >=  CheckSideEffects.USE_CODE_ERROR  ||  level  ==  CheckSideEffects.USE_CODE_ERROR)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
255	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode)  {  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode)  {  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);  }	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
256	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
257	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  ProtectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  ProtectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  ProtectSideEffectFreeCode)  {	  if(!protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
258	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    ||    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
259	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  this,  level);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
260	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.WARNING);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.WARNING);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  Level.WARNING);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
261	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.SEVERE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.SEVERE_ERROR);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  Level.SEVERE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
262	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USENESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USENESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  ==  CheckLevel.USENESS_CODE_ERROR)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
263	[BUG]  [BUGGY]  if(level  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  &&  level  ==  USELESS_CODE_ERROR)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
264	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_FreeCode)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
265	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
266	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
267	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
268	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripStandardEffects());  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripStandardEffects());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripStandardEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
269	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
270	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {	  if(level    >    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
271	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
272	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
273	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
274	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode)  {	  if(level    ||    protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
275	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
276	[BUG]  [BUGGY]  if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {	  if(protectSideEffects    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
277	[BUG]  [BUGGY]  if(protectSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffects()    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
278	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  this,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  Traversal.traverse(compiler,  root,  this,  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	Traversal.traverse(compiler,  root,  this,  level);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
279	[BUG]  [BUGGY]  if(protectSideEffects  ||  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects  ||  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  ||  level  >  USELESS_CODE_ERROR)  {	  if(protectSideEffects    ||    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
280	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  >=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  >=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  level  >=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
281	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
282	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {	  if(level    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
283	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  &&  level  >  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level  >  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode    &&    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
284	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode    &&    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
285	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
286	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR  ||  guardSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR  ||  guardSideEffects())  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  <  USELESS_CODE_ERROR  ||  guardSideEffects())  {	  if(protectSideEffectFreeCode    ||    guardSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
287	[BUG]  [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(level    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
288	[BUG]  [BUGGY]  if(protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffects()    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
289	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  protectSideEffectFreeCode);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  protectSideEffectFreeCode);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  protectSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
290	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  protectiveSideEffectFreeCode);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  protectiveSideEffectFreeCode);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  protectiveSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
291	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {	  if(level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
292	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtections());  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtections());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtections());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
293	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  new  StripProtection(),  level);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  externals,  new  StripProtection(),  level);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externals,  new  StripProtection(),  level);	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
294	[BUG]  [BUGGY]  if(protectSideEffectsFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(protectSideEffectsFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectsFreeCode  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects()    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
295	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  protectSideEffectFreeCode);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  protectSideEffectFreeCode);  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  level,  protectSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
296	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CheckLevel());  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CheckLevel());  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  CheckLevel());	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
297	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  &&  protectSideEffectFreeCode)  {	  if(level    ==    CheckLevel.USELESS_CODE_ERROR    ||    protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
298	[BUG]  [BUGGY]  if(level.getType()  ==  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level.getType()  ==  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level.getType()  ==  CheckLevel.USELESS_CODE_ERROR)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
299	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level!=  CheckLevel.USELESS_CODE_FAILURE)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
300	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level  >=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level  >=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR  ||  level  >=  CheckLevel.USELESS_CODE_ERROR)  {	  if(level!=    CheckLevel.USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
301	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {	  if(level    ||    protectSideEffectFreeCode    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
302	[BUG]  [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  <  USELESS_CODE_ERROR  ||  protectSideEffectFreeCode  ==  level)  {	  if(level    ||    protectSideEffectFreeCode    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
303	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH  ||  level  ==  USELESS_CODE_ERROR)  {	  if(level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
304	[BUG]  [BUGGY]  if(level  ==  CheckLevel.STRICT  ||!protectSideEffects)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.STRICT  ||!protectSideEffects)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.STRICT  ||!protectSideEffects)  {	  if(!protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
305	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||!protectSideEffects)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||!protectSideEffects)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||!protectSideEffects)  {	  if(!protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
306	[BUG]  [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  >=  CheckSideEffects.USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  >=  CheckSideEffects.USE_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckSideEffects.USE_CODE_ERROR  ||  level  >=  CheckSideEffects.USE_CODE_ERROR)  {	  if(level    ==    CheckSideEffects.USE_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
307	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
308	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);            [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(!protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
