bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	6	2	add
2	[BUG]  [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	6	2	add
3	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    pos  =  findWrapPos(text,  width,  nextLineTabStop);		compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	add
4	[BUG]  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    pos  =  findWrapPos(text,  width,  nextLineTabStop);		compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);		compilable	  [FE]  ComparisonFailure  	6	2	add
6	[BUG]  [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);		compilable	  [FE]  ComparisonFailure  	6	2	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	6	2	add
8	[BUG]  [BUGGY]    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	6	2	add
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    sb.append(rtrim(text.substring(0,  pos)));		compilable	  [FE]  ComparisonFailure  	6	2	add
10	[BUG]  [BUGGY]    sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(rtrim(text.substring(0,  pos)));		compilable	  [FE]  ComparisonFailure  	6	2	add
11	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop);	final  String  padding  =  createPadding(nextLineTabStop);  	non-compiled	[CE]  incompatible  types	5	None	replace
12	[BUG]  [BUGGY]  final  String  padding  =  createPadding(width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  final  String  padding  =  createPadding(width,  nextLineTabStop);  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(width,  nextLineTabStop);	final  String  padding  =  createPadding(nextLineTabStop);  	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	5	None	replace
13	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  final  String  padding  =  findWrapPos(text,  width);  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width);	final  String  padding  =  createPadding(nextLineTabStop);  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	5	None	replace
14	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  final  String  padding  =  createPadding(width);  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	final  String  padding  =  createPadding(width);	final  String  padding  =  createPadding(nextLineTabStop);  	compilable	timeout	5	1	replace
15	[BUG]  [BUGGY]  final  String  padding  =  createPadding(width);  timeout  [FE]          ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  final  String  padding  =  createPadding(width);  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(width);	final  String  padding  =  createPadding(nextLineTabStop);  	compilable	timeout	5	1	replace
16	[BUG]  [BUGGY]  final  int  padding  =  createPadding(nextLineTabStop);  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  final  int  padding  =  createPadding(nextLineTabStop);  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(nextLineTabStop);	final  String  padding  =  createPadding(nextLineTabStop);  	non-compiled	[CE]  incompatible  types	5	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append('n');  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    sb.append('n');		compilable	  [FE]  ComparisonFailure  	6	2	add
18	[BUG]  [BUGGY]    sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append('n');  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append('n');		compilable	  [FE]  ComparisonFailure  	6	2	add
19	[BUG]  [BUGGY]    sb.append(getWrappedText());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(getWrappedText());  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(getWrappedText());		non-compiled	[CE]  cannot  find  symbol	6	None	add
20	[BUG]  [BUGGY]  sb.append(createPadding(nextLineTabStop);  [CE]  ')'  expected  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  sb.append(createPadding(nextLineTabStop);  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(nextLineTabStop);	final  String  padding  =  createPadding(nextLineTabStop);  	non-compiled	[CE]  ')'  expected	5	None	replace
21	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(nextLineTabStop);  }  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(nextLineTabStop);  }	final  String  padding  =  createPadding(nextLineTabStop);  	non-compiled	[CE]  cannot  find  symbol  padding	5	None	replace
22	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(nextLineTabStop);  }  else  {  return  sb.toString();  }  [CE]  incompatible  types  [FE]        ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(nextLineTabStop);  }  else  {  return  sb.toString();  }  [BUGGY]    while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(nextLineTabStop);  }  else  {  return  sb.toString();  }	final  String  padding  =  createPadding(nextLineTabStop);  	non-compiled	[CE]  incompatible  types	5	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(defaultNewLine);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    sb.append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	6	2	add
24	[BUG]  [BUGGY]    sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(defaultNewLine);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	6	2	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(text);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	    sb.append(text);		compilable	  [FE]  ComparisonFailure  	6	2	add
26	[BUG]  [BUGGY]    sb.append(text);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(text);  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(text);		compilable	  [FE]  ComparisonFailure  	6	2	add
27	[BUG]  [BUGGY]    sb.append(getText());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    [BUGGY]    sb.append(getText());  [BUGGY]  final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	    sb.append(getText());		non-compiled	[CE]  cannot  find  symbol	6	None	add
