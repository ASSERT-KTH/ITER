bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  padding  =  createPadding(defaultNewLine,  width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(defaultNewLine,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(defaultNewLine,  width,  nextLineTabStop);	  final    String    padding    =    createPadding(max,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	32	None	replace
2	[BUG]  [BUGGY]  final  String  padding  =  createPadding(defaultWidth,  width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(defaultWidth,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(defaultWidth,  width,  nextLineTabStop);	  final    String    padding    =    createPadding(max,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	32	None	replace
3	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  this.defaultNewLine);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	95	None	replace
4	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  this.defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop,  this.defaultNewLine);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	95	None	replace
5	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  this.defaultNewLine,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	95	None	replace
6	[BUG]  [BUGGY]  nb.append(defaultNewLine);  sb.append(getWrappedText());  [CE]  cannot  find  symbol  nb  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  nb.append(defaultNewLine);  sb.append(getWrappedText());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	nb.append(defaultNewLine);  sb.append(getWrappedText());	          sb.append(defaultNewLine);    sb.append(getWrappedText());    	non-compiled	[CE]  cannot  find  symbol  nb	16	None	replace
7	[BUG]  [BUGGY]  nb.append(getWrappedText());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  nb.append(getWrappedText());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	nb.append(getWrappedText());	          sb.append(defaultNewLine);    sb.append(getWrappedText());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
8	[BUG]  [BUGGY]  final  int  padding  =  createPadding(pos,  width);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(pos,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(pos,  width);	  final    int    padding    =    createPadding(width);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	135	None	replace
9	[BUG]  [BUGGY]  final  int  padding  =  createPadding(max,  width);  [CE]  cannot  find  symbol  max  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(max,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(max,  width);	  final    int    padding    =    createPadding(width);    	non-compiled	[CE]  cannot  find  symbol  max	135	None	replace
10	[BUG]  [BUGGY]  final  int  padding  =  createPadding(max);  [CE]  cannot  find  symbol  max  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(max);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(max);	  final    int    padding    =    createPadding(width);    	non-compiled	[CE]  cannot  find  symbol  max	135	None	replace
11	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  cannot  find  symbol  padding	53	None	replace
12	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  cannot  find  symbol  padding	53	None	replace
13	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  return  sb.toString();  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  return  sb.toString();  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  incompatible  types	53	None	replace
14	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text.substring(pos,  nextLineTabStop));  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text.substring(pos,  nextLineTabStop));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text.substring(pos,  nextLineTabStop));	  final    int    padding    =    createPadding(text,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	128	None	replace
15	[BUG]  [BUGGY]  final  int  padding  =  findPadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findPadding(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findPadding(text,  width,  nextLineTabStop);	  final    int    padding    =    createPadding(text,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
16	[BUG]  [BUGGY]  final  int  padding  =  createPadding(pos,  text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(pos,  text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(pos,  text,  nextLineTabStop);	  final    int    padding    =    createPadding(text,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	128	None	replace
17	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  cannot  find  symbol  padding	125	None	replace
18	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  cannot  find  symbol  padding	125	None	replace
19	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  cannot  find  symbol  padding	125	None	replace
20	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	36	None	replace
21	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	36	None	replace
22	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  ')'  expected	36	None	replace
23	[BUG]  [BUGGY]  final  int  width  =  createPadding(pos);  [CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  width  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  width  =  createPadding(pos);	  final    int    width    =    createPadding(width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	136	None	replace
24	[BUG]  [BUGGY]  final  int  width  =  createPadding(text);  [CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  width  =  createPadding(text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  width  =  createPadding(text);	  final    int    width    =    createPadding(width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	136	None	replace
25	[BUG]  [BUGGY]  final  int  width  =  createWrapPadding(pos);  [CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  width  =  createWrapPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  width  =  createWrapPadding(pos);	  final    int    width    =    createPadding(width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	136	None	replace
26	[BUG]  [BUGGY]  final  int  width  =  createPadding(text.length());  [CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  width  =  createPadding(text.length());  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  width  =  createPadding(text.length());	  final    int    width    =    createPadding(width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	136	None	replace
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	91	2	add
28	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	91	2	add
29	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	91	None	add
30	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	91	None	add
31	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [CE]  cannot  find  symbol  height  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  height	91	None	add
32	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	91	None	add
33	[BUG]  [BUGGY]  final  int  padding  =  createPadding(pos,  width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(pos,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(pos,  width,  nextLineTabStop);	  final    String    padding    =    createPadding(pos,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	33	None	replace
34	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  pos,  width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  pos,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  pos,  width,  nextLineTabStop);	  final    String    padding    =    createPadding(pos,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	33	None	replace
35	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos,  width,  text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos,  width,  text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(pos,  width,  text,  nextLineTabStop);	  final    String    padding    =    createPadding(pos,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	33	None	replace
36	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	89	2	add
37	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	89	2	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	89	2	add
39	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	89	2	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	89	2	add
41	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	89	2	add
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	89	2	add
43	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  return  sb;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	89	2	add
44	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  0))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(pos,  0))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	2	add
45	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  0))).append(defaultNewLine);  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  0))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(pos,  0))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	2	add
46	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	148	None	replace
47	[BUG]  [BUGGY]  sb.append(getWrappedText()  +  text,  width);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()  +  text,  width);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()  +  text,  width);	  sb.append(getWrappedText()    +    text);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
48	[BUG]  [BUGGY]  sb.append(getWrappedText()  +  nextLineTabStop);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()  +  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()  +  nextLineTabStop);	  sb.append(getWrappedText()    +    text);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
49	[BUG]  [BUGGY]  sb.append(getWrappedText()  +  this.defaultNewLine);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()  +  this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()  +  this.defaultNewLine);	  sb.append(getWrappedText()    +    text);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
51	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
53	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(2,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(2,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
55	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(2,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(2,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(2,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
57	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
59	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
61	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
63	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
65	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
67	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	46	2	add
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
69	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
70	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width);	  final    int    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	152	None	replace
71	[BUG]  [BUGGY]  final  int  padding  =  createPadding(pos,  text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(pos,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(pos,  text);	  final    int    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	152	None	replace
72	[BUG]  [BUGGY]  final  int  padding  =  createPadding(defaultNewLine,  text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(defaultNewLine,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(defaultNewLine,  text);	  final    int    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	152	None	replace
73	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	159	None	replace
74	[BUG]  [BUGGY]  if(pos  <  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	159	None	replace
75	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	159	None	replace
76	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(pos);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(pos);	  final    int    padding    =    createPadding(pos);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	98	None	replace
77	[BUG]  [BUGGY]  final  int  padding  =  createPadding(pos  +  1);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(pos  +  1);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(pos  +  1);	  final    int    padding    =    createPadding(pos);    	non-compiled	[CE]  incompatible  types	98	None	replace
78	[BUG]  [BUGGY]  final  int  padding  =  findPadding(pos);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findPadding(pos);	  final    int    padding    =    createPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
79	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
80	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
81	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
82	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	41	2	add
84	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	41	2	add
85	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  ')'  expected	41	None	add
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultSyntaxPrefix);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
87	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultSyntaxPrefix);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultSyntaxPrefix);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
88	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);	  sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	5	None	replace
89	[BUG]  [BUGGY]  final  int  padding  =  createPadding(defaultNewLine,  width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(defaultNewLine,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(defaultNewLine,  width,  nextLineTabStop);	  final    int    padding    =    createPadding(defaultNewLine,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	99	None	replace
90	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  defaultNewLine,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  defaultNewLine,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  defaultNewLine,  nextLineTabStop);	  final    int    padding    =    createPadding(defaultNewLine,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	99	None	replace
91	[BUG]  [BUGGY]  final  int  pos  =  createPadding(width,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  createPadding(width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  createPadding(width,  nextLineTabStop);	  final    int    pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	18	None	replace
92	[BUG]  [BUGGY]  final  int  pos  =  findWrapPos(text,  width);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  findWrapPos(text,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  findWrapPos(text,  width);	  final    int    pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	18	None	replace
93	[BUG]  [BUGGY]  final  int  pos  =  createPadding(text,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  createPadding(text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  createPadding(text,  nextLineTabStop);	  final    int    pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	18	None	replace
94	[BUG]  [BUGGY]  sb.append(Rtrim(text.substring(0,  pos)));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(Rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(Rtrim(text.substring(0,  pos)));	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(Rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
95	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos),  width);  sb.append(Rtrim(text.substring(0,  pos)));  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos),  width);  sb.append(Rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos),  width);  sb.append(Rtrim(text.substring(0,  pos)));	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(Rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  ')'  expected	183	None	replace
96	[BUG]  [BUGGY]  sb.append(width,  nextLineTabStop);  [CE]  no  suitable  method  found  for  append(int,int)  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(width,  nextLineTabStop);	  sb.append(nextLineTabStop);    	non-compiled	[CE]  no  suitable  method  found  for  append(int,int)	30	None	replace
97	[BUG]  [BUGGY]  sb.append(width);  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(width);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(width);	  sb.append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	30	None	replace
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	56	2	add
99	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	56	2	add
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	56	2	add
101	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	56	2	add
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	56	2	add
103	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	56	2	add
104	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
105	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
106	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
107	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos))).append(defaultNewLine);	  sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	110	None	replace
108	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine,  max);  [CE]  cannot  find  symbol  max  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine,  max);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine,  max);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  max	64	None	replace
109	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  text);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  text);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	64	None	replace
110	[BUG]  [BUGGY]  sb.append(getString());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getString());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getString());	  sb.append(getFont());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
111	[BUG]  [BUGGY]  sb.append(getPadding());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getPadding());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getPadding());	  sb.append(getFont());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
112	[BUG]  [BUGGY]  sb.append(getWrappedStroke());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedStroke());  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedStroke());	  sb.append(getWrappedLine());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
114	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(defaultNewLine);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append(defaultNewLine);  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
116	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(defaultNewLine);  sb.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(defaultNewLine);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append(defaultNewLine);  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
117	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(DefaultNewLine);  sb.append('n');  [CE]  cannot  find  symbol  DefaultNewLine  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(DefaultNewLine);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append(DefaultNewLine);  sb.append('n');	  	non-compiled	[CE]  cannot  find  symbol  DefaultNewLine	130	None	add
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	130	2	add
119	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	130	2	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	130	2	add
121	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	130	2	add
122	[BUG]  [BUGGY]  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
123	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  Sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  Sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  Sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	final  int  padding  =  findWrapPos(text,  width,  pos);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
125	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  pos);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  width,  pos);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  0);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	final  int  padding  =  findWrapPos(text,  width,  0);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
127	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  0);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  width,  0);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
128	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  3);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	final  int  padding  =  findWrapPos(text,  width,  3);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
129	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  3);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  3);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  width,  3);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  int  padding  =  findWrapPos(text,  width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	int  padding  =  findWrapPos(text,  width,  pos);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
131	[BUG]  [BUGGY]  int  padding  =  findWrapPos(text,  width,  pos);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  int  padding  =  findWrapPos(text,  width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	int  padding  =  findWrapPos(text,  width,  pos);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
132	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  defaultNewLine);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    NUMBER_SIZE);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	96	None	replace
133	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  NUMBER_SIZE);  [CE]  cannot  find  symbol  NUMBER_SIZE  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  NUMBER_SIZE);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  NUMBER_SIZE);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    NUMBER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_SIZE	96	None	replace
134	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('n');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('r');    sb.append('n');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
135	[BUG]  [BUGGY]          sb.append('n');    sb.append('r');  sb.append('n');  sb.append('r');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('n');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('r');    sb.append('n');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('f');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('r');    sb.append('f');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
137	[BUG]  [BUGGY]          sb.append('n');    sb.append('r');  sb.append('f');  sb.append('r');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('f');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('r');    sb.append('f');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('t');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('r');    sb.append('t');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
139	[BUG]  [BUGGY]          sb.append('n');    sb.append('r');  sb.append('t');  sb.append('r');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('t');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('r');    sb.append('t');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
140	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('m');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('r');    sb.append('m');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
141	[BUG]  [BUGGY]          sb.append('n');    sb.append('r');  sb.append('m');  sb.append('r');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('m');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('r');    sb.append('m');  sb.append('r');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('r');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
143	[BUG]  [BUGGY]          sb.append('n');    sb.append('r');  sb.append('n');  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('r');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	143	2	add
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
145	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
147	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
149	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text)).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
150	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(pos);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(pos);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
151	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(pos);  sb.append(rtrim(text)).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(pos);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(pos);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
153	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
154	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultDescPad);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultDescPad);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultDescPad);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    max);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	63	None	replace
155	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultLeftPad);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultLeftPad);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  defaultLeftPad);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    max);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	63	None	replace
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
157	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
159	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
160	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
161	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultSyntaxPrefix);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
163	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultSyntaxPrefix);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultSyntaxPrefix);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
164	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  pos,  nextLineTabStop);	  final    int    padding    =    createPadding(pos,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	97	None	replace
165	[BUG]  [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
166	[BUG]  [BUGGY]  sb.append( ")');  [CE]  unclosed  string  literal  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append( ")');  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append( ")');	  sb.append(')');    	non-compiled	[CE]  unclosed  string  literal	129	None	replace
167	[BUG]  [BUGGY]  sb.append(')',  nextLineTabStop);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(')',  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(')',  nextLineTabStop);	  sb.append(')');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	129	None	replace
168	[BUG]  [BUGGY]  sb.append(')').append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(')').append(defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(')').append(defaultNewLine);	  sb.append(')');    	non-compiled	[CE]  cannot  find  symbol  padding	129	None	replace
169	[BUG]  [BUGGY]  static  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  static  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	static  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop);	  final    char    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
170	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  height,  nextLineTabStop);  [CE]  cannot  find  symbol  height  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  height,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  height,  nextLineTabStop);	  final    char    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  height	116	None	replace
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
172	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
174	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
176	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
178	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
180	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
181	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  pos,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  pos,  nextLineTabStop);	  final    String    padding    =    findWrapPos(text,    width,    pos);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	26	None	replace
182	[BUG]  [BUGGY]  sb.append(getWrappedLongOptPrefix()).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedLongOptPrefix()).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedLongOptPrefix()).append(defaultNewLine);	  sb.append(getWrappedLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
183	[BUG]  [BUGGY]  sb.append(getWrappedLongOptPrefix()  +  1);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedLongOptPrefix()  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedLongOptPrefix()  +  1);	  sb.append(getWrappedLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
184	[BUG]  [BUGGY]  sb.append(getWrappedLineOptPrefix());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedLineOptPrefix());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedLineOptPrefix());	  sb.append(getWrappedLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
185	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  max);  [CE]  cannot  find  symbol  max  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  max);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  max);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    firstLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	180	None	replace
186	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  padding  =  createPadding(pos);  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  padding  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    String    padding    =    createPadding(pos);    final  String  padding  =  createPadding(pos);	  timeout    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	48	None	add
187	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  sb  =  createPadding(pos);  [CE]  variable  sb  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  sb  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    String    padding    =    createPadding(pos);    final  String  sb  =  createPadding(pos);	  timeout    	non-compiled	[CE]  variable  sb  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	48	None	add
188	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  text  =  createPadding(pos);  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  text  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    String    padding    =    createPadding(pos);    final  String  text  =  createPadding(pos);	  timeout    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	48	None	add
189	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  content  =  createPadding(pos);  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  content  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    String    padding    =    createPadding(pos);    final  String  content  =  createPadding(pos);	  timeout    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	48	None	add
190	[BUG]  [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  text.length());  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  findWrapPos(text,  width,  text.length());	  final    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	17	None	replace
191	[BUG]  [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding);	  final    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	17	None	replace
192	[BUG]  [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  3);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  3);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  findWrapPos(text,  width,  3);	  final    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	17	None	replace
193	[BUG]  [BUGGY]  final  String  text  =  createPadding(pos);  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  text  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  text  =  createPadding(pos);	  final    String    padding    =    createPadding(width);    final    String    text    =    createPadding(width);    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
194	[BUG]  [BUGGY]  final  String  text  =  createPadding(width);  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  text  =  createPadding(width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  text  =  createPadding(width);	  final    String    padding    =    createPadding(width);    final    String    text    =    createPadding(width);    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
195	[BUG]  [BUGGY]  final  String  text  =  createPadding(width,  nextLineTabStop);  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  text  =  createPadding(width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  text  =  createPadding(width,  nextLineTabStop);	  final    String    padding    =    createPadding(width);    final    String    text    =    createPadding(width);    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
196	[BUG]  [BUGGY]  final  String  text  =  createPadding(sb,  width);  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  text  =  createPadding(sb,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  text  =  createPadding(sb,  width);	  final    String    padding    =    createPadding(width);    final    String    text    =    createPadding(width);    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
197	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    	non-compiled	[CE]  cannot  find  symbol  padding	55	None	replace
198	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
199	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  return  sb.toString();  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  return  sb.toString();  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    	non-compiled	[CE]  incompatible  types	55	None	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
201	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
203	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
204	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
205	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
206	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	150	None	add
207	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	150	None	add
208	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append('n');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
209	[BUG]  [BUGGY]          sb.append(text);    sb.append('n');  sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append('n');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append(text);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append('n');    sb.append(text);  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
211	[BUG]  [BUGGY]          sb.append(text);    sb.append('n');  sb.append(text);  sb.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append(text);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append('n');    sb.append(text);  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append('n');    sb.append('f');  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	81	2	add
213	[BUG]  [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append('n');    sb.append('f');  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	81	2	add
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append('n');    sb.append('f');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
215	[BUG]  [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append('n');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append('n');    sb.append('f');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
216	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append('n');    sb.append('f');  sb.append(pos);	  	compilable	  [FE]  ComparisonFailure  	81	2	add
217	[BUG]  [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append(pos);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('f');  sb.append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append('n');    sb.append('f');  sb.append(pos);	  	compilable	  [FE]  ComparisonFailure  	81	2	add
218	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultSyntaxPrefix);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultSyntaxPrefix);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultSyntaxPrefix);    	non-compiled	[CE]  cannot  find  symbol  padding	163	None	replace
219	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultOptPrefix);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultOptPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultOptPrefix);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultSyntaxPrefix);    	non-compiled	[CE]  cannot  find  symbol  padding	163	None	replace
220	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultLongOptPrefix);  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultLongOptPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultLongOptPrefix);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultSyntaxPrefix);    	non-compiled	[CE]  cannot  find  symbol  padding	163	None	replace
221	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  [CE]  cannot  find  symbol  nextLineTabStop  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  this.nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  nextLineTabStop	149	None	replace
222	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.max);  [CE]  cannot  find  symbol  max  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  this.max);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  this.max);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	149	None	replace
223	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.lastLineTabStop);  [CE]  cannot  find  symbol  lastLineTabStop  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  this.lastLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  this.lastLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  lastLineTabStop	149	None	replace
224	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  1))).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  1))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	22	None	replace
225	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  if(pos    <    nextLineTabStop)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  cannot  find  symbol  padding	176	None	replace
226	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	175	None	replace
227	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('n');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('t');    sb.append('n');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
229	[BUG]  [BUGGY]          sb.append('n');    sb.append('t');  sb.append('n');  sb.append('t');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('n');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('t');    sb.append('n');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('t');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
231	[BUG]  [BUGGY]          sb.append('n');    sb.append('t');  sb.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('t');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('f');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('t');    sb.append('f');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
233	[BUG]  [BUGGY]          sb.append('n');    sb.append('t');  sb.append('f');  sb.append('t');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('f');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('t');    sb.append('f');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
234	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('m');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('t');    sb.append('m');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
235	[BUG]  [BUGGY]          sb.append('n');    sb.append('t');  sb.append('m');  sb.append('t');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('m');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('t');    sb.append('m');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('r');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('t');    sb.append('r');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
237	[BUG]  [BUGGY]          sb.append('n');    sb.append('t');  sb.append('r');  sb.append('t');  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append('r');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('t');    sb.append('r');  sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	170	2	add
238	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  1);  [CE]  cannot  find  symbol  padding  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  1);	  pos    =    findWrapPos(text,    width,    3);    	non-compiled	[CE]  cannot  find  symbol  padding	111	None	replace
239	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  2);  [CE]  cannot  find  symbol  padding  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  2);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  2);	  pos    =    findWrapPos(text,    width,    3);    	non-compiled	[CE]  cannot  find  symbol  padding	111	None	replace
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	10	2	add
241	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	10	2	add
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	10	2	add
243	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	10	2	add
244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	10	2	add
245	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	10	2	add
246	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(DefaultNewLine);  sb.append(nextLineTabStop);  [CE]  cannot  find  symbol  DefaultNewLine  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(DefaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(DefaultNewLine);  sb.append(nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  DefaultNewLine	10	None	add
247	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
248	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  ')'  expected	45	None	replace
249	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	57	None	replace
250	[BUG]  [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	57	None	replace
251	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
252	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
253	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	58	2	add
254	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	58	2	add
255	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
257	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
258	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
259	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
260	[BUG]  [BUGGY]  sb.append('t');  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('t');	          sb.append('n');    sb.append('t');    	non-compiled	[CE]  cannot  find  symbol  padding	171	None	replace
261	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append('n');  sb.append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('N');    sb.append('n');  sb.append('N');	  	compilable	  [FE]  ComparisonFailure  	145	2	add
262	[BUG]  [BUGGY]          sb.append('n');    sb.append('N');  sb.append('n');  sb.append('N');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append('n');  sb.append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('N');    sb.append('n');  sb.append('N');	  	compilable	  [FE]  ComparisonFailure  	145	2	add
263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append('N');  sb.append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('N');    sb.append('N');  sb.append('N');	  	compilable	  [FE]  ComparisonFailure  	145	2	add
264	[BUG]  [BUGGY]          sb.append('n');    sb.append('N');  sb.append('N');  sb.append('N');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append('N');  sb.append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('N');    sb.append('N');  sb.append('N');	  	compilable	  [FE]  ComparisonFailure  	145	2	add
265	[BUG]  [BUGGY]          sb.append('n');    sb.append('N');  sb.append( "n');  sb.append('N');  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append( "n');  sb.append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('N');    sb.append( "n');  sb.append('N');	  	non-compiled	[CE]  unclosed  string  literal	145	None	add
266	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('N');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	145	2	add
267	[BUG]  [BUGGY]          sb.append('n');    sb.append('N');  sb.append('n');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('N');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	145	2	add
268	[BUG]  [BUGGY]          sb.append('n');    sb.append('N');  sb.append(n');  sb.append('N');  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append(n');  sb.append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('N');    sb.append(n');  sb.append('N');	  	non-compiled	[CE]  unclosed  character  literal	145	None	add
269	[BUG]  [BUGGY]  sb.append('0').append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('0').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('0').append(defaultNewLine);	  sb.append('0');    	non-compiled	[CE]  cannot  find  symbol  padding	2	None	replace
270	[BUG]  [BUGGY]  sb.append('0',  nextLineTabStop);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('0',  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('0',  nextLineTabStop);	  sb.append('0');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	2	None	replace
271	[BUG]  [BUGGY]  sb.append('0',  pos);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('0',  pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('0',  pos);	  sb.append('0');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	2	None	replace
272	[BUG]  [BUGGY]  sb.append('m');  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('m');	          sb.append('n');    sb.append('m');    	non-compiled	[CE]  cannot  find  symbol  padding	74	None	replace
273	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [CE]  cannot  find  symbol  padding  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    2);    	non-compiled	[CE]  cannot  find  symbol  padding	117	None	replace
274	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);  [CE]  cannot  find  symbol  padding  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    2);    	non-compiled	[CE]  cannot  find  symbol  padding	117	None	replace
275	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos    +    1)));    	non-compiled	[CE]  cannot  find  symbol  padding	182	None	replace
276	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos    +    1)));    	non-compiled	[CE]  cannot  find  symbol  padding	182	None	replace
277	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append('n');  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append('n');	  sb.append(rtrim(text.substring(0,    pos))).append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	114	None	replace
278	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append('n');  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  2))).append('n');	  sb.append(rtrim(text.substring(0,    pos))).append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	114	None	replace
279	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append('N');  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append('N');	  sb.append(rtrim(text.substring(0,    pos))).append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	114	None	replace
280	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(max);  }  [CE]  cannot  find  symbol  max  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(max);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(max);  }	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(width);    }    	non-compiled	[CE]  cannot  find  symbol  max	127	None	replace
281	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  2))).append(nextLineTabStop);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  2))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos,  pos  +  2))).append(nextLineTabStop);	  sb.append(rtrim(text.substring(pos,    pos    +    2))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	142	None	replace
282	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }	          sb.append(defaultNewLine);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	131	None	replace
283	[BUG]  [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }	          sb.append(defaultNewLine);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	131	None	replace
284	[BUG]  [BUGGY]  sb.append(getWrapPos(text));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrapPos(text));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrapPos(text));	          sb.append(defaultNewLine);    sb.append(getWrapPos(text));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
285	[BUG]  [BUGGY]  nb.append(defaultNewLine);  sb.append(getWrapPos(text));  [CE]  cannot  find  symbol  nb  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  nb.append(defaultNewLine);  sb.append(getWrapPos(text));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	nb.append(defaultNewLine);  sb.append(getWrapPos(text));	          sb.append(defaultNewLine);    sb.append(getWrapPos(text));    	non-compiled	[CE]  cannot  find  symbol  nb	132	None	replace
286	[BUG]  [BUGGY]  nb.append(getWrapPos(text));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  nb.append(getWrapPos(text));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	nb.append(getWrapPos(text));	          sb.append(defaultNewLine);    sb.append(getWrapPos(text));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
287	[BUG]  [BUGGY]  sb.append(getWrappedTabStop()  +  width);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedTabStop()  +  width);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedTabStop()  +  width);	  sb.append(getWrappedTabStop());    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
288	[BUG]  [BUGGY]  sb.append(getWrappedTabStop()  +  1);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedTabStop()  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedTabStop()  +  1);	  sb.append(getWrappedTabStop());    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
289	[BUG]  [BUGGY]  sb.append(getWrappedTabStop()).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedTabStop()).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedTabStop()).append(defaultNewLine);	  sb.append(getWrappedTabStop());    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
290	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  next  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  next  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  next	  final    String    padding    =    createPadding(width);    final    String    padding    =    createPadding(width);    }    while    (true)    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    next    	non-compiled	[CE]  ')'  expected	169	None	replace
291	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	42	None	replace
292	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
293	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);	  sb.append(rtrim(text).substring(0,    pos)).append(defaultNewLine);    	non-compiled	[CE]  ')'  expected	173	None	replace
294	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	43	2	add
295	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	43	2	add
296	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	43	2	add
297	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	43	2	add
298	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	43	2	add
299	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	43	2	add
300	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	43	2	add
301	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	43	2	add
302	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('n');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('n');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
303	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('n');  sb.append('n').append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('n');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('n');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
304	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('N');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('N');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
305	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('N');  sb.append('n').append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('N');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('N');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
306	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	67	2	add
307	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('n');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	67	2	add
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('0');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('0');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
309	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('0');  sb.append('n').append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('0');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('0');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
310	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
311	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
312	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
313	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
314	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
315	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
316	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	138	2	add
317	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	138	2	add
318	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	138	2	add
319	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	138	2	add
320	[BUG]  [BUGGY]  sb.append(getWrappedNewLine()  +  1);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedNewLine()  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedNewLine()  +  1);	  sb.append(getWrappedNewLine());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
321	[BUG]  [BUGGY]  sb.append(getWrappedSyntaxLine());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedSyntaxLine());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedSyntaxLine());	  sb.append(getWrappedNewLine());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
322	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	161	None	replace
323	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
324	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	93	None	replace
325	[BUG]  [BUGGY]  Integer  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  Integer  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	Integer  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	93	None	replace
326	[BUG]  [BUGGY]  sb.append(getLongOptPrefix()).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getLongOptPrefix()).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getLongOptPrefix()).append(defaultNewLine);	  sb.append(getLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol  padding	23	None	replace
327	[BUG]  [BUGGY]  sb.append(getLongOptPrefix()  +  1);  [CE]  cannot  find  symbol  padding  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getLongOptPrefix()  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getLongOptPrefix()  +  1);	  sb.append(getLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol  padding	23	None	replace
328	[BUG]  [BUGGY]  sb.append(getDefaultLongOptPrefix());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getDefaultLongOptPrefix());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getDefaultLongOptPrefix());	  sb.append(getLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
329	[BUG]  [BUGGY]  sb.append( ": ");  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append( ": ");  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append( ": ");	  sb.append(':');    	non-compiled	[CE]  cannot  find  symbol  padding	133	None	replace
330	[BUG]  [BUGGY]  sb.append(':').append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(':').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(':').append(defaultNewLine);	  sb.append(':');    	non-compiled	[CE]  cannot  find  symbol  padding	133	None	replace
331	[BUG]  [BUGGY]  sb.append(':',  nextLineTabStop);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(':',  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(':',  nextLineTabStop);	  sb.append(':');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	133	None	replace
332	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  return  sb.toString();  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
333	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
334	[BUG]  [BUGGY]  sb.append('n').append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('n').append(defaultNewLine);	          sb.append('n');    sb.append('n').append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	68	None	replace
335	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos  +  1))).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos  +  1))).append(defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos  +  1))).append(defaultNewLine);	  sb.append(createPadding(width);    	non-compiled	[CE]  cannot  find  symbol  padding	172	None	replace
336	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  width,  defaultNewLine);	  final    int    padding    =    findWrapPos(text,    width);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	27	None	replace
337	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  max);  [CE]  cannot  find  symbol  max  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  max);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  width,  max);	  final    int    padding    =    findWrapPos(text,    width);    	non-compiled	[CE]  cannot  find  symbol  max	27	None	replace
338	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	40	None	replace
339	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
340	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
341	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	37	2	add
342	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	37	2	add
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	37	2	add
344	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	37	2	add
345	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	37	2	add
346	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	37	2	add
347	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	37	2	add
348	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	37	2	add
349	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
350	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
351	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	54	2	add
352	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	54	2	add
353	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
354	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
355	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
356	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
357	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('n');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('n');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
358	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('n');  sb.append('n').append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('n');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('n');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
359	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('0');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('0');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
360	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('0');  sb.append('n').append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('0');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('0');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
361	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	71	2	add
362	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('n');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	71	2	add
363	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
364	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
365	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(max);  [CE]  cannot  find  symbol  max  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(max);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(max);	  sb.append(rtrim(text.substring(0,    pos    +    1))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	107	None	replace
366	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextNewLine);  [CE]  cannot  find  symbol  nextNewLine  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextNewLine);	  sb.append(rtrim(text.substring(0,    pos    +    1))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  nextNewLine	107	None	replace
367	[BUG]  [BUGGY]  sb.append(getWrappedText()  +  width,  nextLineTabStop);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()  +  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()  +  width,  nextLineTabStop);	  sb.append(getWrappedText()    +    width);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
368	[BUG]  [BUGGY]  sb.append(getWrappedText()  +  width,  defaultNewLine);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()  +  width,  defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()  +  width,  defaultNewLine);	  sb.append(getWrappedText()    +    width);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
369	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  width);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  width);	  final    String    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	137	None	replace
370	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  text);	  final    String    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	137	None	replace
371	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos,  text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(pos,  text);	  final    String    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	137	None	replace
372	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  pos);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  pos);	  final    String    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	137	None	replace
373	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	39	2	add
374	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	39	2	add
375	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	39	2	add
376	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	39	2	add
377	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	39	2	add
378	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	39	2	add
379	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  defaultNewLine,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  defaultNewLine,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  defaultNewLine,  nextLineTabStop);	  final    String    padding    =    findWrapPos(text,    width,    defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	28	None	replace
380	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  pos,  defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  pos,  defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  pos,  defaultNewLine);	  final    String    padding    =    findWrapPos(text,    width,    defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	28	None	replace
381	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  defaultNewLine,  width);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  defaultNewLine,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  defaultNewLine,  width);	  final    String    padding    =    findWrapPos(text,    width,    defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	28	None	replace
382	[BUG]  [BUGGY]  sb.append('N');  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('N');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('N');	          sb.append('n');    sb.append('N');    	non-compiled	[CE]  cannot  find  symbol  padding	146	None	replace
383	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTa  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTa  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  nextLineTa	  final    String    padding    =    createPadding(width);    final    String    padding    =    createPadding(width);    }    while    (true)    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTa    	non-compiled	[CE]  ')'  expected	168	None	replace
384	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
385	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
386	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
387	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
388	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
389	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
390	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
391	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
392	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
393	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	158	2	add
394	[BUG]  [BUGGY]  sb.append(createPadding(pos));  [CE]  cannot  find  symbol  padding  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(pos));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(pos));	  sb.append(createPadding(width));    	non-compiled	[CE]  cannot  find  symbol  padding	51	None	replace
395	[BUG]  [BUGGY]  sb.append(createPadding(max));  [CE]  cannot  find  symbol  max  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(max));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(max));	  sb.append(createPadding(width));    	non-compiled	[CE]  cannot  find  symbol  max	51	None	replace
396	[BUG]  [BUGGY]  sb.append(createPadding(width,  nextLineTabStop));  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(width,  nextLineTabStop));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(width,  nextLineTabStop));	  sb.append(createPadding(width));    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	51	None	replace
397	[BUG]  [BUGGY]  sb.append(createPadding(text));  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(text));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(text));	  sb.append(createPadding(width));    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	51	None	replace
398	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop  +  1);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop  +  1);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    1);    	non-compiled	[CE]  cannot  find  symbol  padding	115	None	replace
399	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  1);  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  1);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    1);    	non-compiled	[CE]  cannot  find  symbol  padding	115	None	replace
400	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  2);  [CE]  cannot  find  symbol  padding  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  2);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  2);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    1);    	non-compiled	[CE]  cannot  find  symbol  padding	115	None	replace
401	[BUG]  [BUGGY]  sb.append(createPadding(pos,  nextLineTabStop);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(pos,  nextLineTabStop);	  sb.append(createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
402	[BUG]  [BUGGY]  sb.append(createPadding(0,  nextLineTabStop);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(0,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(0,  nextLineTabStop);	  sb.append(createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
403	[BUG]  [BUGGY]  sb.append(createPadding(width,  pos);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(width,  pos);	  sb.append(createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
404	[BUG]  [BUGGY]  sb.append(createStroke(pos,  nextLineTabStop);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createStroke(pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createStroke(pos,  nextLineTabStop);	  sb.append(createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
405	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  -  1))).append(this.defaultNewLine);	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	6	None	replace
406	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  width);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  width);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createPadding(width);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	100	None	replace
407	[BUG]  [BUGGY]  final  String  padding  =  createPadding(max);  [CE]  cannot  find  symbol  max  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(max);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(max);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createPadding(width);    	non-compiled	[CE]  cannot  find  symbol  max	100	None	replace
408	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
409	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
410	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
411	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
412	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
413	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
414	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(pos);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(pos);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
415	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(pos);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(pos);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(pos);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
416	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	155	None	replace
417	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	155	None	replace
418	[BUG]  [BUGGY]  sb.append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(this.defaultNewLine);	          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	15	None	replace
419	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  width,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  width,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  width,  pos,  nextLineTabStop);	  final    String    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	31	None	replace
420	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  max);  [CE]  cannot  find  symbol  max  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  max);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  max);	  final    String    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	31	None	replace
421	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  width,  text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  width,  text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  width,  text,  nextLineTabStop);	  final    String    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	31	None	replace
422	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  pos);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  pos);	  final    String    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	31	None	replace
423	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	139	None	replace
424	[BUG]  [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	139	None	replace
425	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
426	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
427	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(defaultNewLine);  sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
428	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(defaultNewLine);  sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
430	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
431	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(nextLineTabStop);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(nextLineTabStop);  sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
432	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(nextLineTabStop);  sb.append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(nextLineTabStop);  sb.append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(nextLineTabStop);  sb.append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
433	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
434	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	14	2	add
435	[BUG]  [BUGGY]  final  int  padding  =  createPadding(defaultNewLine);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(defaultNewLine);	  if(pos    <    nextLineTabStop)    {    final    int    padding    =    createPadding(nextLineTabStop);    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	153	None	replace
436	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(defaultNewLine);    sb.append(text);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
437	[BUG]  [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(defaultNewLine);    sb.append(text);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
438	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
439	[BUG]  [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
440	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
441	[BUG]  [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
442	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
443	[BUG]  [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
444	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(defaultNewLine);    sb.append(text);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
445	[BUG]  [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(defaultNewLine);    sb.append(text);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
446	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(pos);    sb.append('n');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
447	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  sb.append('n').append(pos);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('n');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
448	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('N');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(pos);    sb.append('N');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
449	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('N');  sb.append('n').append(pos);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('N');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('N');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
450	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(pos);    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	69	2	add
451	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	69	2	add
452	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  sb.append('n').append(p);  [CE]  cannot  find  symbol  p  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  sb.append('n').append(p);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('n');  sb.append('n').append(p);	  	non-compiled	[CE]  cannot  find  symbol  p	69	None	add
453	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('n');  }	          sb.append('n');    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	66	None	replace
454	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n');  }	          sb.append('n');    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	66	None	replace
455	[BUG]  [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append('n');  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append('n');  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  ==  -1)  {  sb.append('n');  sb.append('n');  }	          sb.append('n');    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	66	None	replace
456	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width,  pos,  nextLineTabStop);	  final    int    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	164	None	replace
457	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  max);  [CE]  cannot  find  symbol  max  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  max);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  max);	  final    int    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	164	None	replace
458	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width,  text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width,  text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width,  text,  nextLineTabStop);	  final    int    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	164	None	replace
459	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  pos);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  pos);	  final    int    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	164	None	replace
460	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLine  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  nextLine  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  nextLine	  final    String    padding    =    createPadding(width);    final    String    padding    =    createPadding(width);    }    while    (true)    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLine    	non-compiled	[CE]  ')'  expected	167	None	replace
461	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	147	2	add
462	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	147	2	add
463	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	147	2	add
464	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	147	2	add
465	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	147	None	add
466	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  defaultSyntaxPrefix);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  defaultSyntaxPrefix);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  defaultSyntaxPrefix);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	147	None	add
467	[BUG]  [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  cannot  find  symbol  padding	90	None	replace
468	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  cannot  find  symbol  padding	90	None	replace
469	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(nextLineTabStop);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos,  pos  +  1))).append(nextLineTabStop);	  sb.append(rtrim(text.substring(pos,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	20	None	replace
470	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos,  pos  +  1))).append(this.defaultNewLine);	  sb.append(rtrim(text.substring(pos,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	20	None	replace
471	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
472	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
473	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
474	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
475	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	87	2	add
476	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	87	2	add
477	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  ')'  expected	87	None	add
478	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	162	None	replace
479	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	162	None	replace
480	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  ')'  expected	162	None	replace
481	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  2))).append(this.defaultNewLine);	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	7	None	replace
482	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append( ",   ");  }  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append( ",   ");  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append( ",   ");  }	  if(pos    <    nextLineTabStop)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  cannot  find  symbol  padding	177	None	replace
483	[BUG]  [BUGGY]  if(pos  <  =  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append( ",   ");  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append( ",   ");  }	  if(pos    <    nextLineTabStop)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
484	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(nextLineTabStop).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	12	2	add
485	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	12	2	add
486	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(nextLineTabStop).append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	12	2	add
487	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop).append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	12	2	add
488	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(nextLineTabStop).append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	12	2	add
489	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop).append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	12	2	add
490	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  width,  text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  width,  text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  width,  text,  nextLineTabStop);	  final    String    padding    =    createPadding(sb,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	140	None	replace
491	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  width,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  width,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  width,  pos,  nextLineTabStop);	  final    String    padding    =    createPadding(sb,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	140	None	replace
492	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  width,  nextLineTabStop,  max);  [CE]  cannot  find  symbol  max  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  width,  nextLineTabStop,  max);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  width,  nextLineTabStop,  max);	  final    String    padding    =    createPadding(sb,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	140	None	replace
493	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  text,  nextLineTabStop,  pos);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  text,  nextLineTabStop,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  text,  nextLineTabStop,  pos);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    pos);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	178	None	replace
494	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos  +  1)));  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos  +  1)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos  +  1)));	  sb.append(rtrim(text));    	non-compiled	[CE]  cannot  find  symbol  padding	29	None	replace
495	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos)));  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos)));	  sb.append(rtrim(text));    	non-compiled	[CE]  cannot  find  symbol  padding	29	None	replace
496	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  2))).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  2))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  2))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    2))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	21	None	replace
497	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  pos,  nextLineTabStop);	  final    String    padding    =    createPadding(width,    pos,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	141	None	replace
498	[BUG]  [BUGGY]  final  int  padding  =  createPadding(width,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(width,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(width,  pos,  nextLineTabStop);	  final    String    padding    =    createPadding(width,    pos,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	141	None	replace
499	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(max);  [CE]  cannot  find  symbol  max  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(max);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  -  1))).append(max);	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	109	None	replace
500	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(pos);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(pos);	  final    String    padding    =    createPadding(pos);    timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	49	None	replace
501	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('n');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('m');    sb.append('n');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
502	[BUG]  [BUGGY]          sb.append('n');    sb.append('m');  sb.append('n');  sb.append('m');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('n');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('m');    sb.append('n');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
503	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('m');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
504	[BUG]  [BUGGY]          sb.append('n');    sb.append('m');  sb.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('m');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
505	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('f');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('m');    sb.append('f');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
506	[BUG]  [BUGGY]          sb.append('n');    sb.append('m');  sb.append('f');  sb.append('m');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('f');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('m');    sb.append('f');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
507	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('t');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('m');    sb.append('t');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
508	[BUG]  [BUGGY]          sb.append('n');    sb.append('m');  sb.append('t');  sb.append('m');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('t');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('m');    sb.append('t');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
509	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('r');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('m');    sb.append('r');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
510	[BUG]  [BUGGY]          sb.append('n');    sb.append('m');  sb.append('r');  sb.append('m');  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('r');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('m');    sb.append('r');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
511	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
512	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
513	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
514	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
515	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	174	2	add
516	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	174	2	add
517	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
518	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
519	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
520	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	174	2	add
521	[BUG]  [BUGGY]  final  int  nextLineTabStop  =  createPadding(pos);  [CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  nextLineTabStop  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  nextLineTabStop  =  createPadding(pos);	  final    int    nextLineTabStop    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	19	None	replace
522	[BUG]  [BUGGY]  final  int  nextLineTabStop  =  createPadding(width,  nextLineTabStop);  [CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  nextLineTabStop  =  createPadding(width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  nextLineTabStop  =  createPadding(width,  nextLineTabStop);	  final    int    nextLineTabStop    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	19	None	replace
523	[BUG]  [BUGGY]  final  int  nextLineTabStop  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  nextLineTabStop  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  nextLineTabStop  =  findWrapPos(text,  width,  nextLineTabStop);	  final    int    nextLineTabStop    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	19	None	replace
524	[BUG]  [BUGGY]  final  int  nextLineTabStop  =  findWrapPos(text,  width);  [CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  nextLineTabStop  =  findWrapPos(text,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  nextLineTabStop  =  findWrapPos(text,  width);	  final    int    nextLineTabStop    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	19	None	replace
525	[BUG]  [BUGGY]  final  String  padding  =  createPadding(width,  pos);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(width,  pos);	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(width,    nextLineTabStop);    }    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	25	None	replace
526	[BUG]  [BUGGY]  sb.append(getWrappedText()).append(nextLineTabStop);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()).append(nextLineTabStop);	  sb.append(getWrappedText()).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
527	[BUG]  [BUGGY]  sb.append(getWrappedText()).append(this.defaultNewLine);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()).append(this.defaultNewLine);	  sb.append(getWrappedText()).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
528	[BUG]  [BUGGY]  sb.append(getWrappedText()).append(defaultNewLine,  defaultDescPad);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()).append(defaultNewLine,  defaultDescPad);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()).append(defaultNewLine,  defaultDescPad);	  sb.append(getWrappedText()).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
529	[BUG]  [BUGGY]  final  int  pos  =  createPadding(text);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  createPadding(text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  createPadding(text);	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(text);    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	184	None	replace
530	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(text,  width);  }  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(text,  width);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  final  String  padding  =  createPadding(text,  width);  }	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(text);    }    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	184	None	replace
531	[BUG]  [BUGGY]  final  int  nextLineTabStop  =  createPadding(text);  [CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  nextLineTabStop  =  createPadding(text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  nextLineTabStop  =  createPadding(text);	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(text);    }    	non-compiled	[CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	184	None	replace
532	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	52	2	add
533	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	52	2	add
534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }	  	compilable	  [FE]  ComparisonFailure  	52	2	add
535	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }	  	compilable	  [FE]  ComparisonFailure  	52	2	add
536	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	52	2	add
537	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	52	2	add
538	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos)));  }	  	non-compiled	[CE]  ')'  expected	52	None	add
539	[BUG]  [BUGGY]  final  int  padding  =  createPadding(max,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  max  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(max,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(max,  width,  nextLineTabStop);	  final    int    padding    =    createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	34	None	replace
540	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [CE]  int  cannot  be  dereferenced  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	94	None	replace
541	[BUG]  [BUGGY]  nextLineTabStop  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [CE]  int  cannot  be  dereferenced  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  nextLineTabStop  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	nextLineTabStop  =  findWrapPos(text,  width,  nextLineTabStop).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	94	None	replace
542	[BUG]  [BUGGY]  n  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  n  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	n  =  findWrapPos(text,  width,  nextLineTabStop).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  cannot  find  symbol  n	94	None	replace
543	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine).trim();  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  defaultNewLine).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	94	None	replace
544	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,	  final    String    padding    =    createPadding(width);    final    String    padding    =    createPadding(width);    }    while    (true)    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
545	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(text);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(text);  sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
546	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(text);  sb.append(text);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(text);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(text);  sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
547	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
548	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
549	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(defaultNewLine);  sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
550	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(defaultNewLine);  sb.append(text);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(defaultNewLine);  sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
551	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(nextLineTabStop);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
552	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(nextLineTabStop);  sb.append(text);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(nextLineTabStop);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
553	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
554	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(text);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
555	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(text);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
556	[BUG]  [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(text);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
557	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
558	[BUG]  [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
559	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
560	[BUG]  [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
561	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(text);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
562	[BUG]  [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(text);  sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
563	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
564	[BUG]  [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
565	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	9	None	replace
566	[BUG]  [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	9	None	replace
567	[BUG]  [BUGGY]  final  String  width  =  createPadding(pos);  [CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  width  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  width  =  createPadding(pos);	  final    String    padding    =    createPadding(width);    final    String    width    =    createPadding(width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	122	None	replace
568	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	124	2	add
569	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	124	2	add
570	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
571	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
572	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
573	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
574	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
575	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	124	2	add
576	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	124	2	add
577	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append('n');  sb.append('r');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append('n');  sb.append('r');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append('n');  sb.append('r');  }	          sb.append('n');    sb.append('r');    	non-compiled	[CE]  cannot  find  symbol  padding	144	None	replace
578	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('r');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('r');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('r');  }	          sb.append('n');    sb.append('r');    	non-compiled	[CE]  cannot  find  symbol  padding	144	None	replace
579	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('r');  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('r');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('r');  }	          sb.append('n');    sb.append('r');    	non-compiled	[CE]  cannot  find  symbol  padding	144	None	replace
580	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n');    sb.append('n');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
581	[BUG]  [BUGGY]          sb.append('n');    sb.append('n');  sb.append('n');  sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n');    sb.append('n');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
582	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('N');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n');    sb.append('N');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
583	[BUG]  [BUGGY]          sb.append('n');    sb.append('n');  sb.append('N');  sb.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('N');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n');    sb.append('N');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
584	[BUG]  [BUGGY]          sb.append('n');    sb.append('n');  sb.append( "n');  sb.append('n');  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append( "n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n');    sb.append( "n');  sb.append('n');	  	non-compiled	[CE]  unclosed  string  literal	65	None	add
585	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
586	[BUG]  [BUGGY]          sb.append('n');    sb.append('n');  sb.append('n');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n');    sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
587	[BUG]  [BUGGY]  sb.append(getNewLine()).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getNewLine()).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getNewLine()).append(defaultNewLine);	  sb.append(getNewLine());    	non-compiled	[CE]  cannot  find  symbol  padding	118	None	replace
588	[BUG]  [BUGGY]  sb.append(getNewLine()  +  1);  [CE]  cannot  find  symbol  padding  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getNewLine()  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getNewLine()  +  1);	  sb.append(getNewLine());    	non-compiled	[CE]  cannot  find  symbol  padding	118	None	replace
589	[BUG]  [BUGGY]  sb.append(getNewLine()).append(nextLineTabStop);  [CE]  cannot  find  symbol  padding  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getNewLine()).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getNewLine()).append(nextLineTabStop);	  sb.append(getNewLine());    	non-compiled	[CE]  cannot  find  symbol  padding	118	None	replace
590	[BUG]  [BUGGY]  pos  =  createPadding(width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  createPadding(width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  createPadding(width,  nextLineTabStop);	  pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	replace
591	[BUG]  [BUGGY]  pos  =  createPadding(defaultNewLine,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  createPadding(defaultNewLine,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  createPadding(defaultNewLine,  nextLineTabStop);	  pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	replace
592	[BUG]  [BUGGY]  pos  =  createPadding(text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  createPadding(text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  createPadding(text,  nextLineTabStop);	  pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	replace
593	[BUG]  [BUGGY]  pos  =  createPadding(padding,  nextLineTabStop);  [CE]  cannot  find  symbol  padding  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  createPadding(padding,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  createPadding(padding,  nextLineTabStop);	  pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	123	None	replace
594	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));	  	compilable	  [FE]  ComparisonFailure  	181	2	add
595	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));	  	compilable	  [FE]  ComparisonFailure  	181	2	add
596	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }	  	compilable	  [FE]  ComparisonFailure  	181	2	add
597	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }	  	compilable	  [FE]  ComparisonFailure  	181	2	add
598	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));	  	compilable	  [FE]  ComparisonFailure  	181	2	add
599	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));	  	compilable	  [FE]  ComparisonFailure  	181	2	add
600	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	181	2	add
601	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	181	2	add
602	[BUG]  [BUGGY]  sb.append(width,  nextLineTabStop).append(defaultNewLine);  [CE]  no  suitable  method  found  for  append(int,int)  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(width,  nextLineTabStop).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(width,  nextLineTabStop).append(defaultNewLine);	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  no  suitable  method  found  for  append(int,int)	13	None	replace
603	[BUG]  [BUGGY]  sb.append(width).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(width).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(width).append(defaultNewLine);	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	13	None	replace
604	[BUG]  [BUGGY]  sb.append(width  +  nextLineTabStop).append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(width  +  nextLineTabStop).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(width  +  nextLineTabStop).append(defaultNewLine);	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	13	None	replace
605	[BUG]  [BUGGY]  sb.append('n').append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('n').append(this.defaultNewLine);	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
606	[BUG]  [BUGGY]  sb.append('0').append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('0').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('0').append(this.defaultNewLine);	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
607	[BUG]  [BUGGY]  sb.append(':').append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(':').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(':').append(this.defaultNewLine);	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
608	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	157	None	replace
609	[BUG]  [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  ==  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	157	None	replace
610	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	157	None	replace
611	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	88	None	replace
612	[BUG]  [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	88	None	replace
613	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	88	None	replace
614	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(text);  sb.append('n');  }	          sb.append(text);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	82	None	replace
615	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(text);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(text);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append(text);  sb.append('n');  }	          sb.append(text);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	82	None	replace
616	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append(text);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append(text);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append(text);  sb.append('n');  }	          sb.append(text);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	82	None	replace
617	[BUG]  [BUGGY]  final  String  padding  =  createStroke(pos);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createStroke(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createStroke(pos);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createStroke(width);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
618	[BUG]  [BUGGY]  final  String  padding  =  createStroke(width);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createStroke(width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createStroke(width);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createStroke(width);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
619	[BUG]  [BUGGY]  final  String  padding  =  createStroke(nextLineTabStop);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createStroke(nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createStroke(nextLineTabStop);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createStroke(width);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
620	[BUG]  [BUGGY]  final  String  padding  =  createStroke(sb);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createStroke(sb);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createStroke(sb);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createStroke(width);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
621	[BUG]  [BUGGY]  final  String  padding  =  getPadding(pos,  width);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  getPadding(pos,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  getPadding(pos,  width);	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
622	[BUG]  [BUGGY]  final  String  padding  =  getPadding(pos  +  1);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  getPadding(pos  +  1);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  getPadding(pos  +  1);	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
623	[BUG]  [BUGGY]  final  String  padding  =  getPadding(pos,  nextLineTabStop);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  getPadding(pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  getPadding(pos,  nextLineTabStop);	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
624	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	61	None	add
625	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  Final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  Final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    Final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  not  a  statement	61	None	add
626	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  final  int  padding  =  findWrapPos(text,  width,  this.defaultNewLine);  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  final  int  padding  =  findWrapPos(text,  width,  this.defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    final  int  padding  =  findWrapPos(text,  width,  this.defaultNewLine);	  	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	61	None	add
627	[BUG]  [BUGGY]  static  final  String  padding  =  findWrapPos(text,  width);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  static  final  String  padding  =  findWrapPos(text,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	static  final  String  padding  =  findWrapPos(text,  width);	  final    char    padding    =    findWrapPos(text,    width);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
628	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  height);  [CE]  cannot  find  symbol  height  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  height);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  height);	  final    char    padding    =    findWrapPos(text,    width);    	non-compiled	[CE]  cannot  find  symbol  height	121	None	replace
629	[BUG]  [BUGGY]  sb.append('#').append(defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('#').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('#').append(defaultNewLine);	  sb.append('#');    	non-compiled	[CE]  cannot  find  symbol  padding	1	None	replace
630	[BUG]  [BUGGY]  sb.append('#',  nextLineTabStop);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('#',  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('#',  nextLineTabStop);	  sb.append('#');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	1	None	replace
631	[BUG]  [BUGGY]  sb.append( "# ");  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append( "# ");  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append( "# ");	  sb.append('#');    	non-compiled	[CE]  cannot  find  symbol  padding	1	None	replace
632	[BUG]  [BUGGY]  sb.append('#').append(pos);  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('#').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('#').append(pos);	          sb.append('n');    sb.append('n').append(pos);    	non-compiled	[CE]  cannot  find  symbol  padding	70	None	replace
633	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	91	2	add
634	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	91	2	add
635	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	91	2	add
636	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	91	2	add
637	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	91	None	add
638	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
639	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  incomparable  types:  int  and  String  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  incomparable  types:  int  and  String	94	None	replace
640	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  incomparable  types:  int  and  String  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  incomparable  types:  int  and  String	94	None	replace
641	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  int  cannot  be  dereferenced  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	94	None	replace
642	[BUG]  [BUGGY]  final  float  padding  =  createPadding(text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  float  padding  =  createPadding(text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  float  padding  =  createPadding(text,  nextLineTabStop);	  final    int    padding    =    createPadding(text,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	128	None	replace
643	[BUG]  [BUGGY]  static  final  int  padding  =  createPadding(text,  width,  nextLineTabStop);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  static  final  int  padding  =  createPadding(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	static  final  int  padding  =  createPadding(text,  width,  nextLineTabStop);	  final    int    padding    =    createPadding(text,    nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
644	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  nextLineTabStop);	  final    int    padding    =    createPadding(text,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	128	None	replace
645	[BUG]  [BUGGY]  sb.append(getWrappedText()  +  defaultNewLine);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()  +  defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()  +  defaultNewLine);	  sb.append(getWrappedText()    +    text);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
646	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(pos  +  1)));  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(pos  +  1)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(pos  +  1)));  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos    +    1)));    	non-compiled	[CE]  cannot  find  symbol  padding	182	None	replace
647	[BUG]  [BUGGY]  final  int  padding  =  createPadding(sb,  width,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(sb,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(sb,  width,  nextLineTabStop);	  final    int    padding    =    createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	34	None	replace
648	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	147	2	add
649	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	147	2	add
650	[BUG]  [BUGGY]  sb.append(getWrappedNewLineOptPrefix());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedNewLineOptPrefix());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedNewLineOptPrefix());	  sb.append(getWrappedLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
651	[BUG]  [BUGGY]  sb.append(getWrappedNewLine()).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedNewLine()).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedNewLine()).append(defaultNewLine);	  sb.append(getWrappedNewLine());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
652	[BUG]  [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  ==  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	161	None	replace
653	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  defaultNewLine);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  width,  nextLineTabStop,  defaultNewLine);	  final    String    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	31	None	replace
654	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text,  width,  pos);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text,  width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text,  width,  pos);	  final    String    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	31	None	replace
655	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  else  {	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
656	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append(defaultNewLine);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append(defaultNewLine);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append(defaultNewLine);  sb.append('n');  }	          sb.append(defaultNewLine);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	131	None	replace
657	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append('n');  }  [CE]  incomparable  types:  int  and  String  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append('n');  }	          sb.append(defaultNewLine);    sb.append('n');    	non-compiled	[CE]  incomparable  types:  int  and  String	131	None	replace
658	[BUG]  [BUGGY]  if(pos  <  =  width)  {  final  String  padding  =  createPadding(nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  width)  {  final  String  padding  =  createPadding(nextLineTabStop);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  width)  {  final  String  padding  =  createPadding(nextLineTabStop);  }	  if(pos    <    width)    {    final    String    padding    =    createPadding(nextLineTabStop);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
659	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
660	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(nextLineTabStop);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
661	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	159	None	replace
662	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(nextNewLine);  [CE]  cannot  find  symbol  nextNewLine  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(nextNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  -  1))).append(nextNewLine);	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  nextNewLine	109	None	replace
663	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
664	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
665	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('[');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('[');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
666	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('[');  sb.append('n').append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('[');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('[');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
667	[BUG]  [BUGGY]  final  String  padding  =  getPadding(text);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  getPadding(text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  getPadding(text);	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
668	[BUG]  [BUGGY]  final  String  padding  =  getPadding(text.substring(pos));  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  getPadding(text.substring(pos));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  getPadding(text.substring(pos));	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
669	[BUG]  [BUGGY]  final  String  padding  =  getPadding(text,  pos);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  getPadding(text,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  getPadding(text,  pos);	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
670	[BUG]  [BUGGY]  final  String  padding  =  getPadding(defaultNewLine);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  getPadding(defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  getPadding(defaultNewLine);	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
671	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  pos);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  pos);	  final    int    padding    =    createPadding(pos);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	98	None	replace
672	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text.length());  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text.length());  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text.length());	  final    int    padding    =    createPadding(pos);    	non-compiled	[CE]  incompatible  types	98	None	replace
673	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
674	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
675	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
676	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
677	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
678	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	124	2	add
679	[BUG]  [BUGGY]  if(width  >  max)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  max  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(width  >  max)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(width  >  max)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  max	38	None	replace
680	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	38	None	replace
681	[BUG]  [BUGGY]  final  String  padding  =  createPadding(defaultNewLine);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(defaultNewLine);	  final    String    padding    =    createPadding(width);    final    String    width    =    createPadding(width);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	122	None	replace
682	[BUG]  [BUGGY]  sb.append(getWrapPos(defaultNewLine));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrapPos(defaultNewLine));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrapPos(defaultNewLine));	          sb.append(defaultNewLine);    sb.append(getWrapPos(text));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
683	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  sb,  nextLineTabStop,  defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  sb,  nextLineTabStop,  defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  sb,  nextLineTabStop,  defaultNewLine);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	64	None	replace
684	[BUG]  [BUGGY]  sb.append(rtrim(text,  width));  [CE]  method  rtrim  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text,  width));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text,  width));	  sb.append(rtrim(text));    	non-compiled	[CE]  method  rtrim  in  class  HelpFormatter  cannot  be  applied  to  given  types;	29	None	replace
685	[BUG]  [BUGGY]  sb.append(rtrim(defaultNewLine));  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(defaultNewLine));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(defaultNewLine));	  sb.append(rtrim(text));    	non-compiled	[CE]  cannot  find  symbol  padding	29	None	replace
686	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	42	None	replace
687	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	54	2	add
688	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	54	2	add
689	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
690	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
691	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	54	2	add
692	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  sb.append(rtrim(text.substring(0,  pos)));  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    sb.append(rtrim(text.substring(0,  pos)));  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	54	2	add
693	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
694	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	54	2	add
695	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultSyntaxPrefix);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultSyntaxPrefix);	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	6	None	replace
696	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	43	2	add
697	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos)));	  	compilable	  [FE]  ComparisonFailure  	43	2	add
698	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	175	None	replace
699	[BUG]  [BUGGY]  if(defaultNewLine!=  null)  {  sb.append(text);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(defaultNewLine!=  null)  {  sb.append(text);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(defaultNewLine!=  null)  {  sb.append(text);  sb.append('n');  }	          sb.append(text);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	82	None	replace
700	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append('n');  }  [CE]  incomparable  types:  int  and  String  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append('n');  }	          sb.append(text);    sb.append('n');    	non-compiled	[CE]  incomparable  types:  int  and  String	82	None	replace
701	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('m');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('m');    sb.append('m');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
702	[BUG]  [BUGGY]          sb.append('n');    sb.append('m');  sb.append('m');  sb.append('m');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append('m');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('m');    sb.append('m');  sb.append('m');	  	compilable	  [FE]  ComparisonFailure  	73	2	add
703	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('m');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('m');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('m');  }	          sb.append('n');    sb.append('m');    	non-compiled	[CE]  cannot  find  symbol  padding	74	None	replace
704	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('m');  }  [CE]  incomparable  types:  int  and  String  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('m');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('m');  }	          sb.append('n');    sb.append('m');    	non-compiled	[CE]  incomparable  types:  int  and  String	74	None	replace
705	[BUG]  [BUGGY]  final  int  nextLineTabStop  =  createPadding(width);  [CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  nextLineTabStop  =  createPadding(width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  nextLineTabStop  =  createPadding(width);	  final    int    nextLineTabStop    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  variable  nextLineTabStop  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	19	None	replace
706	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	44	None	replace
707	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	44	None	replace
708	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
709	[BUG]  [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(defaultNewLine);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
710	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(defaultNewLine);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
711	[BUG]  [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(defaultNewLine);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
712	[BUG]  [BUGGY]  sb.append(getNewLineOptPrefix());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getNewLineOptPrefix());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getNewLineOptPrefix());	  sb.append(getLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
713	[BUG]  [BUGGY]  sb.append(getShape());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getShape());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getShape());	  sb.append(getFont());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
714	[BUG]  [BUGGY]  pos  =  createPadding(sb,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  createPadding(sb,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  createPadding(sb,  nextLineTabStop);	  pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	replace
715	[BUG]  [BUGGY]  sb.append(nextLineTabStop  +  width);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(nextLineTabStop  +  width);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(nextLineTabStop  +  width);	  sb.append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	30	None	replace
716	[BUG]  [BUGGY]  sb.append(createNewLine(width,  nextLineTabStop);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createNewLine(width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createNewLine(width,  nextLineTabStop);	  sb.append(createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
717	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	151	None	replace
718	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	151	None	replace
719	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  x,  nextLineTabStop);  [CE]  cannot  find  symbol  x  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  x,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  x,  nextLineTabStop);	  final    String    padding    =    findWrapPos(text,    width,    defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  x	28	None	replace
720	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append(nextLineTabStop);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n');    sb.append(nextLineTabStop);  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
721	[BUG]  [BUGGY]          sb.append('n');    sb.append('n');  sb.append(nextLineTabStop);  sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append(nextLineTabStop);  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n');    sb.append(nextLineTabStop);  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
722	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabS  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabS  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabS	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  ')'  expected	36	None	replace
723	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
724	[BUG]  [BUGGY]  sb.append(rtrim(text)).append(nextLineTabStop);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text)).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text)).append(nextLineTabStop);	  sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	110	None	replace
725	[BUG]  [BUGGY]  sb.append(rtrim(text)).append(defaultSyntaxPrefix);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text)).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text)).append(defaultSyntaxPrefix);	  sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	110	None	replace
726	[BUG]  [BUGGY]  sb.append(rtrim(text)).append(this.defaultNewLine);  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text)).append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text)).append(this.defaultNewLine);	  sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	110	None	replace
727	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [CE]  incomparable  types:  int  and  String  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }	          sb.append('n');    sb.append('n').append(defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	68	None	replace
728	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }	          sb.append('n');    sb.append('n').append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	68	None	replace
729	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
730	[BUG]  [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	79	2	add
731	[BUG]  [BUGGY]  sb.append(']');  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(']');  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(']');	  sb.append(')');    	non-compiled	[CE]  cannot  find  symbol  padding	129	None	replace
732	[BUG]  [BUGGY]  final  String  text  =  createPadding(nextLineTabStop);  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  text  =  createPadding(nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  text  =  createPadding(nextLineTabStop);	  final    String    padding    =    createPadding(width);    final    String    text    =    createPadding(width);    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
733	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
734	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
735	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  cannot  find  symbol  padding	125	None	replace
736	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('N');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('N');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('N');  }	          sb.append('n');    sb.append('N');    	non-compiled	[CE]  cannot  find  symbol  padding	146	None	replace
737	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('N');  }  [CE]  incomparable  types:  int  and  String  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('N');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('N');  }	          sb.append('n');    sb.append('N');    	non-compiled	[CE]  incomparable  types:  int  and  String	146	None	replace
738	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('N');  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('N');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('N');  }	          sb.append('n');    sb.append('N');    	non-compiled	[CE]  cannot  find  symbol  padding	146	None	replace
739	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('r');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append('n');    sb.append('r');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
740	[BUG]  [BUGGY]          sb.append(text);    sb.append('n');  sb.append('r');  sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('r');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append('n');    sb.append('r');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
741	[BUG]  [BUGGY]  if(sb.length()  ==  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  ==  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  ==  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	92	None	replace
742	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	92	None	replace
743	[BUG]  [BUGGY]  if(sb.length()  ==  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  return  sb.toString();  }  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  ==  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  ==  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  return  sb.toString();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  incompatible  types	92	None	replace
744	[BUG]  [BUGGY]  if(pos  <  width)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  width)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  width)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  if(pos    <    nextLineTabStop)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  cannot  find  symbol  padding	176	None	replace
745	[BUG]  [BUGGY]  if(width  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(width  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(width  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  if(pos    <    nextLineTabStop)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  cannot  find  symbol  padding	176	None	replace
746	[BUG]  [BUGGY]  if(pos  <  width)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append( ", ");  }  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  width)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append( ", ");  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  width)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append( ", ");  }	  if(pos    <    nextLineTabStop)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    else    {    sb.append(   ",   ");    }    	non-compiled	[CE]  cannot  find  symbol  padding	177	None	replace
747	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
748	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	  [FE]  ComparisonFailure  	62	2	replace
749	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(3,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(3,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
750	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(3,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(3,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(3,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
751	[BUG]  [BUGGY]          sb.append('n');    sb.append('t');  sb.append( "n');  sb.append('t');  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('t');  sb.append( "n');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('t');    sb.append( "n');  sb.append('t');	  	non-compiled	[CE]  unclosed  string  literal	170	None	add
752	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  final  int  padding  =  findWrapPos(text,  width,  nabStop);  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  nextLineTabStop);  final  int  padding  =  findWrapPos(text,  width,  nabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    final  int  padding  =  findWrapPos(text,  width,  nabStop);	  	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	61	None	add
753	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(Rtrim(text.substring(0,  pos)));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  sb.append(Rtrim(text.substring(0,  pos)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(Rtrim(text.substring(0,  pos)));	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
754	[BUG]  [BUGGY]  sb.append('0'  +  text);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('0'  +  text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('0'  +  text);	  sb.append('0');    	non-compiled	[CE]  cannot  find  symbol  padding	2	None	replace
755	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  0);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  0);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  0);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    max);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	63	None	replace
756	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('r');  }  [CE]  incomparable  types:  int  and  String  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('r');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('r');  }	          sb.append('n');    sb.append('r');    	non-compiled	[CE]  incomparable  types:  int  and  String	144	None	replace
757	[BUG]  [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	  final    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	17	None	replace
758	[BUG]  [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  0);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  pos  =  findWrapPos(text,  width,  0);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  pos  =  findWrapPos(text,  width,  0);	  final    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	17	None	replace
759	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append( "n');  sb.append('n').append(pos);  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append( "n');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append( "n');  sb.append('n').append(pos);	  	non-compiled	[CE]  unclosed  string  literal	69	None	add
760	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  sb.append('n').append(position);  [CE]  cannot  find  symbol  position  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('n');  sb.append('n').append(position);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('n');  sb.append('n').append(position);	  	non-compiled	[CE]  cannot  find  symbol  position	69	None	add
761	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	155	None	replace
762	[BUG]  [BUGGY]  sb.append(getNewLine()).append('n');  [CE]  cannot  find  symbol  padding  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getNewLine()).append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getNewLine()).append('n');	  sb.append(getNewLine());    	non-compiled	[CE]  cannot  find  symbol  padding	118	None	replace
763	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  pos  +  1);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  pos  +  1);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  nextLineTabStop,  pos  +  1);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    pos);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	178	None	replace
764	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append( "n');  sb.append('n').append(defaultNewLine);  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append( "n');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append( "n');  sb.append('n').append(defaultNewLine);	  	non-compiled	[CE]  unclosed  string  literal	67	None	add
765	[BUG]  [BUGGY]  if(this.defaultNewLine!=  null)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(this.defaultNewLine!=  null)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(this.defaultNewLine!=  null)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	15	None	replace
766	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	15	None	replace
767	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('f');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append('f');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
768	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('f');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('f');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append('f');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
769	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	57	None	replace
770	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
771	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append(text);  }  [CE]  incomparable  types:  int  and  String  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append(text);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append(text);  }	          sb.append(text);    sb.append(text);    	non-compiled	[CE]  incomparable  types:  int  and  String	76	None	replace
772	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append(defaultNewLine);  }  [CE]  incomparable  types:  int  and  String  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append(text);  sb.append(defaultNewLine);  }	          sb.append(text);    sb.append(text);    	non-compiled	[CE]  incomparable  types:  int  and  String	76	None	replace
773	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  sb.append('n');  sb.append('n').append(pos);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text.length())  {  sb.append('n');  sb.append('n').append(pos);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text.length())  {  sb.append('n');  sb.append('n').append(pos);  }	          sb.append('n');    sb.append('n').append(pos);    	non-compiled	[CE]  cannot  find  symbol  padding	70	None	replace
774	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text.length())  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text.length())  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }	          sb.append('n');    sb.append('n').append(pos);    	non-compiled	[CE]  cannot  find  symbol  padding	70	None	replace
775	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(Rtrim(text.substring(0,  pos)));  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(Rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(Rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(Rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
776	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text.substring(pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text.substring(pos));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text.substring(pos));	  final    String    padding    =    createPadding(pos);    timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	49	None	replace
777	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text.substring(0,  pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text.substring(0,  pos));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text.substring(0,  pos));	  final    String    padding    =    createPadding(pos);    timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	49	None	replace
778	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  [CE]  incomparable  types:  int  and  String  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	13	None	replace
779	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  return  sb.toString();  }  [CE]  incomparable  types:  int  and  String  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  return  sb.toString();  }	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	13	None	replace
780	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
781	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  lastLineTabStop);  [CE]  cannot  find  symbol  lastLineTabStop  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  findWrapPos(text,  width,  lastLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  findWrapPos(text,  width,  lastLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    firstLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  lastLineTabStop	180	None	replace
782	[BUG]  [BUGGY]  sb.append('#'  +  text);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append('#'  +  text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append('#'  +  text);	  sb.append('#');    	non-compiled	[CE]  cannot  find  symbol  padding	1	None	replace
783	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	9	None	replace
784	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
785	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  lastLineTabStop);  [CE]  cannot  find  symbol  lastLineTabStop  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  width,  lastLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  width,  lastLineTabStop);	  final    int    padding    =    findWrapPos(text,    width);    	non-compiled	[CE]  cannot  find  symbol  lastLineTabStop	27	None	replace
786	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	89	2	add
787	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	89	2	add
788	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  incomparable  types:  int  and  String  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	148	None	replace
789	[BUG]  [BUGGY]  final  String  padding  =  createPadding(buffer,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  buffer  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(buffer,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(buffer,  width,  nextLineTabStop);	  final    String    padding    =    createPadding(max,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  buffer	32	None	replace
790	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
791	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  width,  nextLineTabStop,  text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  width,  nextLineTabStop,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  width,  nextLineTabStop,  text);	  final    String    padding    =    createPadding(sb,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	140	None	replace
792	[BUG]  [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(text);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(text);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(text);  }	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(text);    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
793	[BUG]  [BUGGY]  if(pos  <  width)  {  final  String  padding  =  createPadding(text);  }  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  width)  {  final  String  padding  =  createPadding(text);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  width)  {  final  String  padding  =  createPadding(text);  }	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(text);    }    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	184	None	replace
794	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  incomparable  types:  int  and  String  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  incomparable  types:  int  and  String	93	None	replace
795	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  incomparable  types:  int  and  String  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  incomparable  types:  int  and  String	93	None	replace
796	[BUG]  [BUGGY]  final  int  padding  =  createPadding(sb,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(sb,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(sb,  pos,  nextLineTabStop);	  final    int    padding    =    createPadding(pos,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	97	None	replace
797	[BUG]  [BUGGY]  final  int  padding  =  createPadding(max,  pos,  nextLineTabStop);  [CE]  cannot  find  symbol  max  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(max,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(max,  pos,  nextLineTabStop);	  final    int    padding    =    createPadding(pos,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	97	None	replace
798	[BUG]  [BUGGY]  if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
799	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
800	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
801	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  2))).append(nextLineTabStop);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos,  2))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos,  2))).append(nextLineTabStop);	  sb.append(rtrim(text.substring(pos,    2))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	21	None	replace
802	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  defaultNewLine);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width,  nextLineTabStop,  defaultNewLine);	  final    int    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	164	None	replace
803	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width,  pos);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width,  pos);	  final    int    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	164	None	replace
804	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    	non-compiled	[CE]  ')'  expected	47	None	replace
805	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    	non-compiled	[CE]  ')'  expected	47	None	replace
806	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
807	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
808	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
809	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(text);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
810	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append('n');  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append('n');  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
811	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append('n');  sb.append(rtrim(text)).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);  sb.append('n');  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text)).append(defaultNewLine);    sb.append('n');  sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	156	2	add
812	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  text.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  text.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  text.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
813	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	90	None	replace
814	[BUG]  [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	90	None	replace
815	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text.substring(pos,  nextLineTabStop));  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text.substring(pos,  nextLineTabStop));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text.substring(pos,  nextLineTabStop));	  final    String    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	137	None	replace
816	[BUG]  [BUGGY]  final  String  padding  =  createPadding(defaultNewLine,  text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(defaultNewLine,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(defaultNewLine,  text);	  final    String    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	137	None	replace
817	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append( ", ");  sb.append(rtrim(text)).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append( ", ");  sb.append(rtrim(text)).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append( ", ");  sb.append(rtrim(text)).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	157	None	replace
818	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append('n');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append('n');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
819	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append('n');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append('n');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append('n');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
820	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
821	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
822	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabS  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabS  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabS	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  ')'  expected	162	None	replace
823	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  not  a  statement	162	None	replace
824	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	88	None	replace
825	[BUG]  [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('t');  }  [CE]  incomparable  types:  int  and  String  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('t');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  defaultNewLine)  {  sb.append('n');  sb.append('t');  }	          sb.append('n');    sb.append('t');    	non-compiled	[CE]  incomparable  types:  int  and  String	171	None	replace
826	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('t');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('t');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  sb.append('n');  sb.append('t');  }	          sb.append('n');    sb.append('t');    	non-compiled	[CE]  cannot  find  symbol  padding	171	None	replace
827	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  }  [CE]  incomparable  types:  int  and  String  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	95	None	replace
828	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  incomparable  types:  int  and  String  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	95	None	replace
829	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	40	None	replace
830	[BUG]  [BUGGY]  if(width  >  max)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  max  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(width  >  max)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(width  >  max)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  max	40	None	replace
831	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(this.defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	40	None	replace
832	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine  +  1);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine  +  1);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    1);    	non-compiled	[CE]  cannot  find  symbol  padding	115	None	replace
833	[BUG]  [BUGGY]  if(nextLineTabStop!=  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }	  final    String    padding    =    createPadding(width);    Final    String    padding    =    createPadding(width);    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	101	None	replace
834	[BUG]  [BUGGY]  if(nextLineTabStop  ==  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  ==  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  ==  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }	  final    String    padding    =    createPadding(width);    Final    String    padding    =    createPadding(width);    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	101	None	replace
835	[BUG]  [BUGGY]  if(nextLineTabStop!=  0)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop!=  0)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop!=  0)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }	  final    String    padding    =    createPadding(width);    Final    String    padding    =    createPadding(width);    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	101	None	replace
836	[BUG]  [BUGGY]  final  int  padding  =  createPadding(sb,  text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(sb,  text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(sb,  text);	  final    int    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	152	None	replace
837	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
838	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
839	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
840	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
841	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
842	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
843	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	58	2	add
844	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	58	2	add
845	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
846	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  return  sb;  }	  	compilable	  [FE]  ComparisonFailure  	58	2	add
847	[BUG]  [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(width);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(width);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(width);  }	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(width);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
848	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
849	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
850	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
851	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
852	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
853	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	14	2	add
854	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    if(this.defaultNewLine!=  null)  {  sb.append('n');  sb.append(this.defaultNewLine);  sb.append(this.defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	14	2	add
855	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append(getWrapPos(text,  width,  nextLineTabStop);  sb.append(this.defaultNewLine);  }  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append(getWrapPos(text,  width,  nextLineTabStop);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    if(this.defaultNewLine!=  null)  {  sb.append(getWrapPos(text,  width,  nextLineTabStop);  sb.append(this.defaultNewLine);  }	  	non-compiled	[CE]  ')'  expected	14	None	add
856	[BUG]  [BUGGY]  sb.append(getWrappedString());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedString());  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedString());	  sb.append(getWrappedLine());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
857	[BUG]  [BUGGY]  sb.append(getWrappedText()).append(defaultNewLine,  width);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()).append(defaultNewLine,  width);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()).append(defaultNewLine,  width);	  sb.append(getWrappedText()).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
858	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
859	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
860	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
861	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(defaultNewLine);    sb.append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	8	2	add
862	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos);  Final  String  padding  =  createPadding(pos);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos);  Final  String  padding  =  createPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    String    padding    =    createPadding(pos);    Final  String  padding  =  createPadding(pos);	  timeout    	non-compiled	[CE]  ';'  expected	48	None	add
863	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  padding  =  createPadding(position);  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  padding  =  createPadding(position);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    String    padding    =    createPadding(pos);    final  String  padding  =  createPadding(position);	  timeout    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	48	None	add
864	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
865	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
866	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
867	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
868	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(rtrim(text));	  	compilable	  [FE]  ComparisonFailure  	75	2	add
869	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(rtrim(text));	  	compilable	  [FE]  ComparisonFailure  	75	2	add
870	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
871	[BUG]  [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	75	2	add
872	[BUG]  [BUGGY]  final  int  width  =  createWrapPadding(text);  [CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  width  =  createWrapPadding(text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  width  =  createWrapPadding(text);	  final    int    width    =    createPadding(width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	136	None	replace
873	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('t');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append('n');    sb.append('t');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
874	[BUG]  [BUGGY]          sb.append(text);    sb.append('n');  sb.append('t');  sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append('n');  sb.append('t');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append('n');    sb.append('t');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	81	2	add
875	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('n');  }	          sb.append('n');    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	66	None	replace
876	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append('n');  sb.append('n');  }	          sb.append('n');    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	66	None	replace
877	[BUG]  [BUGGY]  final  int  padding  =  getPadding(pos);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  getPadding(pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  getPadding(pos);	  final    String    padding    =    getPadding(pos);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
878	[BUG]  [BUGGY]  sb.append(nextLineTabStop  +  1);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(nextLineTabStop  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(nextLineTabStop  +  1);	  sb.append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	30	None	replace
879	[BUG]  [BUGGY]  Text  padding  =  findWrapPos(text,  width);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  Text  padding  =  findWrapPos(text,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	Text  padding  =  findWrapPos(text,  width);	  final    char    padding    =    findWrapPos(text,    width);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
880	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(max);  [CE]  cannot  find  symbol  max  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(max);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  2))).append(max);	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	108	None	replace
881	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('#');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('#');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
882	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('#');  sb.append('n').append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('#');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('#');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
883	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('[');  sb.append(']').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('[');  sb.append(']').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
884	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('[');  sb.append(']').append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('[');  sb.append(']').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('[');  sb.append(']').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
885	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('[');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('[');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
886	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('[');  sb.append('n').append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(defaultNewLine);  sb.append('[');  sb.append('n').append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(defaultNewLine);    sb.append('[');  sb.append('n').append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
887	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text.substring(pos,  text.length()));  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text.substring(pos,  text.length()));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text.substring(pos,  text.length()));	  final    int    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	152	None	replace
888	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text.substring(0,  pos));  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text.substring(0,  pos));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text.substring(0,  pos));	  final    int    padding    =    createPadding(text);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	152	None	replace
889	[BUG]  [BUGGY]  sb.append(getWrappedText()).append(text);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedText()).append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedText()).append(text);	  sb.append(getWrappedText()).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
890	[BUG]  [BUGGY]  sb.append(getSegmentFont());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getSegmentFont());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getSegmentFont());	  sb.append(getFont());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
891	[BUG]  [BUGGY]  final  String  padding  =  createPadding(text.substring(pos,  text));  [CE]  no  suitable  method  found  for  substring(int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(text.substring(pos,  text));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(text.substring(pos,  text));	  final    String    padding    =    createPadding(text);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	137	None	replace
892	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(max  +  1);  [CE]  cannot  find  symbol  max  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(max  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(max  +  1);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    1);    	non-compiled	[CE]  cannot  find  symbol  max	115	None	replace
893	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append('n');  }	          sb.append(defaultNewLine);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	131	None	replace
894	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(defaultNewLine);  sb.append('n');  }	          sb.append(defaultNewLine);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	131	None	replace
895	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append('n');  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append('n');  }	          sb.append(defaultNewLine);    sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
896	[BUG]  [BUGGY]  sb.append(createPadding(x));  [CE]  cannot  find  symbol  x  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(x));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(x));	  sb.append(createPadding(width));    	non-compiled	[CE]  cannot  find  symbol  x	51	None	replace
897	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('m');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('m');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append('n');  sb.append('m');  }	          sb.append('n');    sb.append('m');    	non-compiled	[CE]  cannot  find  symbol  padding	74	None	replace
898	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('m');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('m');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('m');  }	          sb.append('n');    sb.append('m');    	non-compiled	[CE]  cannot  find  symbol  padding	74	None	replace
899	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }	          sb.append(defaultNewLine);    sb.append(getWrapPos(text));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
900	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  else  {  final  String  padding  =  getWrapPos(text,  width,  nextLineTabStop);  sb.append(  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  else  {  final  String  padding  =  getWrapPos(text,  width,  nextLineTabStop);  sb.append(  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  else  {  final  String  padding  =  getWrapPos(text,  width,  nextLineTabStop);  sb.append(	          sb.append(defaultNewLine);    sb.append(getWrapPos(text));    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
901	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  else  {  final  String  padding  =  getWrapPos(text,  width,  nextLineTabStop);  sb.append  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  else  {  final  String  padding  =  getWrapPos(text,  width,  nextLineTabStop);  sb.append  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrapPos(text));  }  else  {  final  String  padding  =  getWrapPos(text,  width,  nextLineTabStop);  sb.append	          sb.append(defaultNewLine);    sb.append(getWrapPos(text));    	non-compiled	[CE]  not  a  statement	132	None	replace
902	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
903	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos)));    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
904	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
905	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
906	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(nextLineTabStop);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	46	2	add
907	[BUG]  [BUGGY]  final  String  padding  =  createStroke(text);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createStroke(text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createStroke(text);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createStroke(width);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
908	[BUG]  [BUGGY]  final  String  padding  =  createStroke(defaultWidth);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createStroke(defaultWidth);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createStroke(defaultWidth);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createStroke(width);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
909	[BUG]  [BUGGY]  final  String  padding  =  createStroke(defaultNewLine);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createStroke(defaultNewLine);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createStroke(defaultNewLine);	  final    String    padding    =    createPadding(width);    final    String    padding    =    createStroke(width);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
910	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('0');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n');    sb.append('0');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
911	[BUG]  [BUGGY]          sb.append('n');    sb.append('n');  sb.append('0');  sb.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('0');  sb.append('n');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n');    sb.append('0');  sb.append('n');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
912	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('0');  sb.append('0');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n');    sb.append('0');  sb.append('0');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
913	[BUG]  [BUGGY]          sb.append('n');    sb.append('n');  sb.append('0');  sb.append('0');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n');  sb.append('0');  sb.append('0');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n');    sb.append('0');  sb.append('0');	  	compilable	  [FE]  ComparisonFailure  	65	2	add
914	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('r');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('r');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('r');  }	          sb.append('n');    sb.append('r');    	non-compiled	[CE]  cannot  find  symbol  padding	144	None	replace
915	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('r');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('r');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append('n');  sb.append('r');  }	          sb.append('n');    sb.append('r');    	non-compiled	[CE]  cannot  find  symbol  padding	144	None	replace
916	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('N');    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	145	2	add
917	[BUG]  [BUGGY]          sb.append('n');    sb.append('N');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('N');  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('N');    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	145	2	add
918	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
919	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  ')'  expected	56	None	add
920	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	56	2	add
921	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	56	2	add
922	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(default  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(default  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(default	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
923	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  ')'  expected	162	None	replace
924	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLine  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLine  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLine	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultLineTabStop);    	non-compiled	[CE]  ')'  expected	162	None	replace
925	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append(text);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    if(this.defaultNewLine!=  null)  {  sb.append(text);  sb.append(this.defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	14	2	add
926	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append(text);  sb.append(this.defaultNewLine);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append(text);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    if(this.defaultNewLine!=  null)  {  sb.append(text);  sb.append(this.defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	14	2	add
927	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append(text);  return  sb.toString();  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);  if(this.defaultNewLine!=  null)  {  sb.append(text);  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(this.defaultNewLine);    if(this.defaultNewLine!=  null)  {  sb.append(text);  return  sb.toString();  }	  	non-compiled	[CE]  incompatible  types	14	None	add
928	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append('n');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(text);  sb.append('n');  }	          sb.append(text);    sb.append('n');    	non-compiled	[CE]  cannot  find  symbol  padding	82	None	replace
929	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append('n');  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append('n');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(text);  sb.append('n');  }	          sb.append(text);    sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
930	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text.substring(pos));  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text.substring(pos));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text.substring(pos));	  final    int    padding    =    createPadding(width);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	135	None	replace
931	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
932	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	38	None	replace
933	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultLongOptPrefix);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultLongOptPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultLongOptPrefix);	  sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	5	None	replace
934	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultLongOptPrefix);  [CE]  cannot  find  symbol  padding  [FE]          ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultLongOptPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultLongOptPrefix);	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	6	None	replace
935	[BUG]  [BUGGY]  if(pos  <  =  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
936	[BUG]  [BUGGY]          sb.append('n');    sb.append('m');  sb.append( "n');  sb.append('m');  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('m');  sb.append( "n');  sb.append('m');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('m');    sb.append( "n');  sb.append('m');	  	non-compiled	[CE]  unclosed  string  literal	73	None	add
937	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
938	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
939	[BUG]  [BUGGY]  if(pos  >=  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >=  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >=  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    return    sb;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
940	[BUG]  [BUGGY]  final  String  padding  =  createPadding(sb,  pos,  nextLineTabStop);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(sb,  pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(sb,  pos,  nextLineTabStop);	  final    String    padding    =    createPadding(sb,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	140	None	replace
941	[BUG]  [BUGGY]  pos  =  createPadding(text);  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  pos  =  createPadding(text);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	pos  =  createPadding(text);	  pos    =    createPadding(nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	replace
942	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	93	None	replace
943	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append();  [CE]  no  suitable  method  found  for  append()  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(nextLineTabStop);  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append();  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(nextLineTabStop);    sb.append(defaultNewLine);  sb.append(nextLineTabStop).append();	  	non-compiled	[CE]  no  suitable  method  found  for  append()	10	None	add
944	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	44	None	replace
945	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
946	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
947	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  lastLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  lastLineTabStop  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  lastLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  lastLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  cannot  find  symbol  lastLineTabStop	147	None	add
948	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  null);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  pos  =  findWrapPos(text,  width,  null);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    pos  =  findWrapPos(text,  width,  null);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	147	None	add
949	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  pos,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	final  int  padding  =  findWrapPos(text,  pos,  width);	  final    int    padding    =    findWrapPos(text,    width);    	compilable	  [FE]  ComparisonFailure  	27	2	replace
950	[BUG]  [BUGGY]  final  int  padding  =  findWrapPos(text,  pos,  width);  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  findWrapPos(text,  pos,  width);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  findWrapPos(text,  pos,  width);	  final    int    padding    =    findWrapPos(text,    width);    	compilable	  [FE]  ComparisonFailure  	27	2	replace
951	[BUG]  [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  text,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  findWrapPos(text,  width,  text,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  findWrapPos(text,  width,  text,  nextLineTabStop);	  final    String    padding    =    findWrapPos(text,    width,    nextLineTabStop,    pos);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	178	None	replace
952	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	13	None	replace
953	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	13	None	replace
954	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  return  sb.toString();  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(defaultNewLine);  sb.append(nextLineTabStop).append(defaultNewLine);  }  else  {  return  sb.toString();  }	          sb.append(defaultNewLine);    sb.append(nextLineTabStop).append(defaultNewLine);    	non-compiled	[CE]  incompatible  types	13	None	replace
955	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	35	None	add
956	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultDescPad);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultDescPad);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
957	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultDescPad);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultDescPad);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultDescPad);	  	compilable	  [FE]  ComparisonFailure  	35	2	add
958	[BUG]  [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  >  0)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	157	None	replace
959	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(text);  sb.append(rtrim(text)).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	157	None	replace
960	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
961	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  =  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
962	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(defaultWidth);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	final  String  padding  =  createPadding(defaultWidth);	  final    String    padding    =    createPadding(width);    final    String    width    =    createPadding(width);    	compilable	timeout	122	1	replace
963	[BUG]  [BUGGY]  final  String  padding  =  createPadding(defaultWidth);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(defaultWidth);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  String  padding  =  createPadding(defaultWidth);	  final    String    padding    =    createPadding(width);    final    String    width    =    createPadding(width);    	compilable	timeout	122	1	replace
964	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos)));  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos)));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
965	[BUG]  [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  padding  =  createPadding(p);  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  String  padding  =  createPadding(pos);  final  String  padding  =  createPadding(p);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final    String    padding    =    createPadding(pos);    final  String  padding  =  createPadding(p);	  timeout    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	48	None	add
966	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  return  sb.toString();  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
967	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
968	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));	  	compilable	  [FE]  ComparisonFailure  	52	2	add
969	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  sb.append(rtrim(text.substring(0,  pos  +  1)));	  	compilable	  [FE]  ComparisonFailure  	52	2	add
970	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  nextLineTabStop  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  nextLineTabStop	91	None	add
971	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	174	None	add
972	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	174	None	add
973	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(nextLineTabStop);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
974	[BUG]  [BUGGY]  sb.append(rtrim(text)).append(defaultLongOptPrefix);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text)).append(defaultLongOptPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text)).append(defaultLongOptPrefix);	  sb.append(rtrim(text)).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	110	None	replace
975	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	9	None	replace
976	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append(defaultNewLine);  sb.append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	9	None	replace
977	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	15	None	replace
978	[BUG]  [BUGGY]  if(sb.length()  <  =  0)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  <  =  0)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  <  =  0)  {  sb.append(defaultNewLine);  sb.append(this.defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(this.defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
979	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
980	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	41	2	add
981	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
982	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos),  defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos),  defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos),  defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  ')'  expected	134	None	replace
983	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	40	None	replace
984	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(this.defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(this.defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(this.defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
985	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	175	None	replace
986	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n').append(pos);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n').append(pos);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('n').append(pos);  }	          sb.append('n');    sb.append('n').append(pos);    	non-compiled	[CE]  cannot  find  symbol  padding	70	None	replace
987	[BUG]  [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(pos);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(pos);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(pos);  }	          sb.append('n');    sb.append('n').append(pos);    	non-compiled	[CE]  cannot  find  symbol  padding	70	None	replace
988	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
989	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
990	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }	          sb.append(defaultNewLine);    sb.append(getWrappedText());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
991	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  else  {  sb.append(text);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  else  {  sb.append(text);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  else  {  sb.append(text);  }	          sb.append(defaultNewLine);    sb.append(getWrappedText());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
992	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  else  {  sb.append( ", ");  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  else  {  sb.append( ", ");  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append(defaultNewLine);  sb.append(getWrappedText());  }  else  {  sb.append( ", ");  }	          sb.append(defaultNewLine);    sb.append(getWrappedText());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
993	[BUG]  [BUGGY]  sb.append( "') ");  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append( "') ");  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append( "') ");	  sb.append(')');    	non-compiled	[CE]  cannot  find  symbol  padding	129	None	replace
994	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('N');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('N');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('N');  }	          sb.append('n');    sb.append('N');    	non-compiled	[CE]  cannot  find  symbol  padding	146	None	replace
995	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('N');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('N');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append('n');  sb.append('N');  }	          sb.append('n');    sb.append('N');    	non-compiled	[CE]  cannot  find  symbol  padding	146	None	replace
996	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos    +    1)));    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
997	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  int  cannot  be  dereferenced  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	94	None	replace
998	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  int  cannot  be  dereferenced  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	94	None	replace
999	[BUG]  [BUGGY]  if(nextLineTabStop  >=  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  >=  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  >=  -1)  {  final  String  padding  =  createPadding(width);  final  String  padding  =  createPadding(width);  }	  final    String    padding    =    createPadding(width);    Final    String    padding    =    createPadding(width);    	non-compiled	[CE]  variable  padding  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	101	None	replace
1000	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	37	None	add
1001	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos)));  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1002	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultSyntaxPrefix);  [CE]  cannot  find  symbol  padding  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultSyntaxPrefix);	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	7	None	replace
1003	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultLongOptPrefix);  [CE]  cannot  find  symbol  padding  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultLongOptPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultLongOptPrefix);	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	7	None	replace
1004	[BUG]  [BUGGY]  sb.append(getWrappedSyntaxPrefix());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedSyntaxPrefix());  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedSyntaxPrefix());	  sb.append(getWrappedNewLine());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1005	[BUG]  [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(width,  nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(width,  nextLineTabStop);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  nextLineTabStop)  {  final  String  padding  =  createPadding(width,  nextLineTabStop);  }	  if(pos    <    nextLineTabStop)    {    final    String    padding    =    createPadding(width,    nextLineTabStop);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1006	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	92	None	replace
1007	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  return  sb.toString();  }  [CE]  incompatible  types  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  return  sb.toString();  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  return  sb.toString();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  incompatible  types	92	None	replace
1008	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	92	None	replace
1009	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(nextLineTabStop);  }	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1010	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(nextLineTabS  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(nextLineTabS  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(nextLineTabS	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1011	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(4,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(4,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
1012	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(4,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(4,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(4,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	160	2	add
1013	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
1014	[BUG]  [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(this.defaultNewLine);  }	          sb.append('n');    sb.append('n').append(this.defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	72	None	replace
1015	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('0');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append('0');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
1016	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('0');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('0');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append('0');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
1017	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
1018	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('t');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('t');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append('t');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
1019	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('[');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(defaultNewLine);        sb.append('n');    sb.append('[');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
1020	[BUG]  [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('[');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(defaultNewLine);    sb.append('n');  sb.append('[');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(defaultNewLine);        sb.append('n');    sb.append('[');	  	compilable	  [FE]  ComparisonFailure  	130	2	add
1021	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('[');  sb.append(']').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('[');  sb.append(']').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1022	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('[');  sb.append(']').append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('[');  sb.append(']').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('[');  sb.append(']').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1023	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('#');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('#');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1024	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('#');  sb.append('n').append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('#');  sb.append('n').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('#');  sb.append('n').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1025	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('0');  sb.append('0').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('0');  sb.append('0').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1026	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('0');  sb.append('0').append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(this.defaultNewLine);  sb.append('0');  sb.append('0').append(this.defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(this.defaultNewLine);    sb.append('0');  sb.append('0').append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1027	[BUG]  [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append(text);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append(text);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  >  0)  {  sb.append(text);  sb.append(defaultNewLine);  }	          sb.append(text);    sb.append(text);    	non-compiled	[CE]  cannot  find  symbol  padding	76	None	replace
1028	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(text);  sb.append(defaultNewLine);  }	          sb.append(text);    sb.append(text);    	non-compiled	[CE]  cannot  find  symbol  padding	76	None	replace
1029	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
1030	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(text);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(text);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(text);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
1031	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
1032	[BUG]  [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(text);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(text);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	154	2	add
1033	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    }    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
1034	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(defaultNewLine);    sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1035	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
1036	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  =  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  return  sb;  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
1037	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	57	None	replace
1038	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultSyntaxPrefix);  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultSyntaxPrefix);	  sb.append(rtrim(text.substring(pos,    pos    +    1))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	20	None	replace
1039	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	139	None	replace
1040	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	139	None	replace
1041	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1042	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }	          sb.append('n');    sb.append('n').append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	68	None	replace
1043	[BUG]  [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  >  0)  {  sb.append('n');  sb.append('n').append(defaultNewLine);  }	          sb.append('n');    sb.append('n').append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	68	None	replace
1044	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  if(pos  <  =  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(0,    pos)));    sb.append(rtrim(text.substring(0,  pos  +  1)));  if(pos  <  =  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(0,        pos)));        sb.append(rtrim(text.substring(0,    pos    +    1)));    if(pos  <  =  -1)  {  sb.append(rtrim(text.substring(0,  pos)));  sb.append(rtrim(text.substring(0,  pos  +  1)));  }	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
1045	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	155	None	replace
1046	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(text);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(text);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1047	[BUG]  [BUGGY]  sb.append(getWrappedLongOptPrefix()).append(defaultSyntaxPrefix);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(getWrappedLongOptPrefix()).append(defaultSyntaxPrefix);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(getWrappedLongOptPrefix()).append(defaultSyntaxPrefix);	  sb.append(getWrappedLongOptPrefix());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
1048	[BUG]  [BUGGY]  sb.append(defaultWrappedText);  [CE]  cannot  find  symbol  defaultWrappedText  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(defaultWrappedText);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(defaultWrappedText);	          sb.append(text);    sb.append(getWrappedText());    	non-compiled	[CE]  cannot  find  symbol  defaultWrappedText	83	None	replace
1049	[BUG]  [BUGGY]  final  int  width  =  createPadding(text.substring(pos));  [CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  width  =  createPadding(text.substring(pos));  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  width  =  createPadding(text.substring(pos));	  final    int    width    =    createPadding(width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	136	None	replace
1050	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  sb.length());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  sb.length());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	150	2	add
1051	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  sb.length());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  sb.length());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  sb.length());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	150	2	add
1052	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  sb.toString());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  sb.toString());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  sb.toString());  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	150	None	add
1053	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  pos  =  findWrapPos(text,  width,  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    pos  =  findWrapPos(text,  width,  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	non-compiled	[CE]  ')'  expected	150	None	add
1054	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('t');  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('t');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append('n');  sb.append('t');  }	          sb.append('n');    sb.append('t');    	non-compiled	[CE]  cannot  find  symbol  padding	171	None	replace
1055	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('t');  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb!=  null)  {  sb.append('n');  sb.append('t');  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb!=  null)  {  sb.append('n');  sb.append('t');  }	          sb.append('n');    sb.append('t');    	non-compiled	[CE]  cannot  find  symbol  padding	171	None	replace
1056	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('t');  }  else  {  sb.append( ", ");  }  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(sb.length()  >  0)  {  sb.append('n');  sb.append('t');  }  else  {  sb.append( ", ");  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(sb.length()  >  0)  {  sb.append('n');  sb.append('t');  }  else  {  sb.append( ", ");  }	          sb.append('n');    sb.append('t');    	non-compiled	[CE]  cannot  find  symbol  padding	171	None	replace
1057	[BUG]  [BUGGY]  sb.append(createPadding(text,  width,  nextLineTabStop);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(text,  width,  nextLineTabStop);	  sb.append(createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
1058	[BUG]  [BUGGY]  sb.append(createPadding(0,  pos);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  sb.append(createPadding(0,  pos);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	sb.append(createPadding(0,  pos);	  sb.append(createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
1059	[BUG]  [BUGGY]          sb.append('n');    sb.append('r');  sb.append( "n');  sb.append('r');  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('r');  sb.append( "n');  sb.append('r');  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('r');    sb.append( "n');  sb.append('r');	  	non-compiled	[CE]  unclosed  string  literal	143	None	add
1060	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1061	[BUG]  [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(nextLineTabStop  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(nextLineTabStop  >  0)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    	non-compiled	[CE]  ')'  expected	88	None	replace
1062	[BUG]  [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  int  padding  =  createPadding(nextLineTabStop);  }  else  {  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  int  padding  =  createPadding(nextLineTabStop);  }  else  {  return  sb.toString();  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  nextLineTabStop)  {  final  int  padding  =  createPadding(nextLineTabStop);  }  else  {  return  sb.toString();  }	  if(pos    <    nextLineTabStop)    {    final    int    padding    =    createPadding(nextLineTabStop);    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1063	[BUG]  [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  int  padding  =  createPadding(nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  nextLineTabStop)  {  final  int  padding  =  createPadding(nextLineTabStop);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  nextLineTabStop)  {  final  int  padding  =  createPadding(nextLineTabStop);  }	  if(pos    <    nextLineTabStop)    {    final    int    padding    =    createPadding(nextLineTabStop);    }    else    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1064	[BUG]  [BUGGY]  if(text!=  null)  {  final  String  padding  =  createPadding(width);  final  String  text  =  createPadding(width);  }  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(text!=  null)  {  final  String  padding  =  createPadding(width);  final  String  text  =  createPadding(width);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(text!=  null)  {  final  String  padding  =  createPadding(width);  final  String  text  =  createPadding(width);  }	  final    String    padding    =    createPadding(width);    final    String    text    =    createPadding(width);    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
1065	[BUG]  [BUGGY]  if(text!=  null)  {  final  String  padding  =  createPadding(width);  final  String  text  =  createPadding(text);  }  [CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(text!=  null)  {  final  String  padding  =  createPadding(width);  final  String  text  =  createPadding(text);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(text!=  null)  {  final  String  padding  =  createPadding(width);  final  String  text  =  createPadding(text);  }	  final    String    padding    =    createPadding(width);    final    String    text    =    createPadding(width);    	non-compiled	[CE]  variable  text  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
1066	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text.substring(pos,  nextLineTabStop);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text.substring(pos,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text.substring(pos,  nextLineTabStop);	  final    int    padding    =    createPadding(width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	34	None	replace
1067	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
1068	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append(rtrim(text.substring(pos,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	138	2	add
1069	[BUG]  [BUGGY]  if(pos  <  =  0)  {  padding  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  padding  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  padding  =  findWrapPos(text,  width,  nextLineTabStop);  }	  final    int    padding    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1070	[BUG]  [BUGGY]  final  int  padding  =  createPadding(text,  width,  sb.length());  [CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  final  int  padding  =  createPadding(text,  width,  sb.length());  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	final  int  padding  =  createPadding(text,  width,  sb.length());	  final    int    padding    =    createPadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  createPadding  in  class  HelpFormatter  cannot  be  applied  to  given  types;	164	None	replace
1071	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('#');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(pos);    sb.append('#');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1072	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('#');  sb.append('n').append(pos);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('#');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('#');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1073	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('[');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(pos);    sb.append('[');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1074	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('[');  sb.append('n').append(pos);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('[');  sb.append('n').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('[');  sb.append('n').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1075	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('[');  sb.append(']').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	add	                sb.append('n');        sb.append('n').append(pos);    sb.append('[');  sb.append(']').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1076	[BUG]  [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('[');  sb.append(']').append(pos);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]          sb.append('n');    sb.append('n').append(pos);  sb.append('[');  sb.append(']').append(pos);  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	                sb.append('n');        sb.append('n').append(pos);    sb.append('[');  sb.append(']').append(pos);	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1077	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(text);  sb.append(defaultNewLine);  }	          sb.append(text);    sb.append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	78	None	replace
1078	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(text);  sb.append(defaultNewLine);  }	          sb.append(text);    sb.append(defaultNewLine);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1079	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  ==  -1)  {  sb.append(text);  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  ==  -1)  {  sb.append(text);  sb.append(nextLineTabStop);  }	          sb.append(text);    sb.append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	80	None	replace
1080	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(nextLineTabStop);  }  [CE]  cannot  find  symbol  padding  [FE]      ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(text);  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(text);  sb.append(nextLineTabStop);  }	          sb.append(text);    sb.append(nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  padding	80	None	replace
1081	[BUG]  [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append(nextLineTabStop);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  <  =  0)  {  sb.append(text);  sb.append(nextLineTabStop);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  <  =  0)  {  sb.append(text);  sb.append(nextLineTabStop);  }	          sb.append(text);    sb.append(nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1082	[BUG]  [BUGGY]  static  final  String  padding  =  createPadding(text,  width,  nextLineTabStop);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  static  final  String  padding  =  createPadding(text,  width,  nextLineTabStop);  [BUGGY]        while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	static  final  String  padding  =  createPadding(text,  width,  nextLineTabStop);	  final    String    padding    =    createPadding(max,    width,    nextLineTabStop);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1083	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  padding  [FE]    ComparisonFailure    [CONTEXT]      if  (pos  ==  -1)  {  sb.append(rtrim(text));  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);        [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	807	807	1	replace	if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol  padding	42	None	replace
