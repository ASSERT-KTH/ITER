bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();	  	compilable	  [FE]  ComparisonFailure  	5	2	add
2	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();	  	compilable	  [FE]  ComparisonFailure  	5	2	add
3	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
4	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  pos  =  padding  +  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  pos  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    pos  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  incompatible  types	5	None	add
5	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  Text  pos  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  Text  pos  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    Text  pos  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
6	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.appendPadding(text.substring(0,  pos).trim();  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.appendPadding(text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    TextUtilities.appendPadding(text.substring(0,  pos).trim();	  	non-compiled	[CE]  ')'  expected	5	None	add
7	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1)).append(defaultNewLine);  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1)).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1)).append(defaultNewLine);	      sb.append(rtrim(text.substring(0,    pos)).append(defaultNewLine);    	non-compiled	[CE]  ')'  expected	19	None	replace
8	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  padding);  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  padding);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  padding);	      sb.append(rtrim(text.substring(0,    pos)).append(defaultNewLine);    	non-compiled	[CE]  ')'  expected	19	None	replace
9	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	2	replace
10	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	2	replace
11	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	6	None	replace
12	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  width);	      pos    =    findWrapPos(text.substring(0,    pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	17	None	replace
13	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  padding);	      pos    =    findWrapPos(text.substring(0,    pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	17	None	replace
14	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos));  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(0,  pos));	      pos    =    findWrapPos(text.substring(0,    pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	17	None	replace
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
16	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
17	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [CE]  cannot  find  symbol  height  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  height	13	None	add
18	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	13	None	add
19	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	13	None	add
20	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
21	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  timeout    	compilable	  [FE]  ComparisonFailure  	7	2	add
23	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  timeout    	compilable	  [FE]  ComparisonFailure  	7	2	add
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	7	2	add
25	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	7	2	add
26	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);	      sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	timeout	12	1	replace
27	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  timeout  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);	      sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	timeout	12	1	replace
28	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);	      sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	timeout	12	1	replace
29	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  timeout  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);	      sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	timeout	12	1	replace
30	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
31	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
32	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    TextBuffer  text  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
33	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  pos  =  padding  +  text.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  pos  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    pos  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  incompatible  types	3	None	add
34	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  Text  pos  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  Text  pos  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    Text  pos  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
35	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.appendPadding(text.substring(pos,  pos).trim();	  	non-compiled	[CE]  ')'  expected	3	None	add
36	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length());  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]              ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  text.length());	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
37	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding);	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
38	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  max);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  max);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  max);	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
39	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  padding);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  padding);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  padding);	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
40	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop).trim();	      pos    =    findWrapPos(text,    width    +    text.substring(pos).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	16	None	replace
41	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos).trim();  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(0,  pos).trim();	      pos    =    findWrapPos(text,    width    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
42	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos));  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos));	      pos    =    findWrapPos(text,    width    +    text.substring(pos).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	16	None	replace
43	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  4);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  4);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
44	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  4);  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  4);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  4);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
45	[BUG]  [BUGGY]  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
46	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
47	[BUG]  [BUGGY]  timeout  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  3);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  3);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
48	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  timeout  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  3);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  3);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
49	[BUG]  [BUGGY]  timeout  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  text.length());	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
50	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  timeout  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.length());	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
51	[BUG]  [BUGGY]  text  =  padding  +  width).trim();  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  width).trim();	  text    =    padding    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	18	None	replace
52	[BUG]  [BUGGY]  text  =  padding  +  defaultNewLine).trim();  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  defaultNewLine).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  defaultNewLine).trim();	  text    =    padding    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	18	None	replace
53	[BUG]  [BUGGY]  text  =  width  +  nextLineTabStop).trim();  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  width  +  nextLineTabStop).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  width  +  nextLineTabStop).trim();	  text    =    padding    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	18	None	replace
54	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
55	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
56	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  pos  =  padding  +  text.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  pos  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    pos  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  incompatible  types	1	None	add
57	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    TextBuffer  text  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
58	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,  width).trim();	  	non-compiled	[CE]  ')'  expected	1	None	add
59	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  Text  pos  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  Text  pos  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    Text  pos  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
60	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  text.substring(pos).trim();	  	non-compiled	[CE]  ')'  expected	9	None	add
61	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultNewLine);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	9	None	add
62	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  NUMBER_SIZE);  [CE]  cannot  find  symbol  NUMBER_SIZE  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  NUMBER_SIZE);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  NUMBER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol  NUMBER_SIZE	9	None	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	11	2	add
64	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	11	2	add
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
66	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
68	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
69	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabS	  	non-compiled	[CE]  ')'  expected	11	None	add
70	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  defaultNewLine);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	14	None	replace
71	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	14	1	replace
72	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	14	1	replace
73	[BUG]  [BUGGY]  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	14	1	replace
74	[BUG]  [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	14	1	replace
75	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  incomparable  types:  int  and  <null>  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	14	None	replace
76	[BUG]  [BUGGY]  text  =  padding  +  nextLineTabStop.substring(pos,  pos).trim();  [CE]  int  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  nextLineTabStop.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  nextLineTabStop.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
77	[BUG]  [BUGGY]  text  =  padding  +  this.defaultNewLine).trim();  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  this.defaultNewLine).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  this.defaultNewLine).trim();	  text    =    padding    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	18	None	replace
78	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
79	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos  +  1));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos  +  1));  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos  +  1));	      pos    =    findWrapPos(text.substring(0,    pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	17	None	replace
80	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  [CE]  cannot  find  symbol  nextLineTabStop  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  nextLineTabStop	9	None	add
81	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [CE]  int  cannot  be  dereferenced  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();	  	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	add
82	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  firstLineTabStop);  [CE]  cannot  find  symbol  firstLineTabStop  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  firstLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  firstLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  firstLineTabStop	9	None	add
83	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	13	None	add
84	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	13	None	add
85	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
86	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
87	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos))).append(  padding);	      timeout    	compilable	timeout	8	1	replace
88	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  timeout  [FE]              ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(  padding);	      timeout    	compilable	timeout	8	1	replace
89	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	      timeout    	compilable	timeout	8	1	replace
90	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  timeout  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	      timeout    	compilable	timeout	8	1	replace
91	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  Text  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    Text  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  cannot  find  symbol  Text	1	None	add
92	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  sb  =  padding  +  text.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  sb  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    sb  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  incompatible  types	1	None	add
93	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(0,  pos)+  padding.trim();	  text    =    padding    +    text.substring(0,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	6	2	replace
95	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos)+  padding.trim();	  text    =    padding    +    text.substring(0,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	6	2	replace
96	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  padding.substring(pos).trim();  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width  +  padding.substring(pos).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  padding.substring(pos).trim();	      pos    =    findWrapPos(text,    width    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
97	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos)).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos)).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos)).trim();	      pos    =    findWrapPos(text,    width    +    text.substring(pos).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	16	None	replace
98	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  Text  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    Text  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol  Text	3	None	add
99	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  sb  =  padding  +  text.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  sb  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    sb  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  incompatible  types	3	None	add
100	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);	      sb.append(rtrim(text.substring(0,    pos)).append(defaultNewLine);    	compilable	timeout	19	1	replace
101	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  timeout  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);	      sb.append(rtrim(text.substring(0,    pos)).append(defaultNewLine);    	compilable	timeout	19	1	replace
102	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]              ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
103	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  padding);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  padding);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  padding);	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
104	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  Text  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    Text  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol  Text	5	None	add
105	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  sb  =  padding  +  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  sb  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    sb  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  incompatible  types	5	None	add
106	[BUG]  [BUGGY]  text  =  padding  +  text).trim();  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text).trim();	  text    =    padding    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	18	None	replace
107	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  newLineTabStop);  [CE]  cannot  find  symbol  newLineTabStop  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  newLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  newLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  newLineTabStop	9	None	add
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(0,  pos).toLowerCase();	  text    =    padding    +    text.substring(0,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	6	2	replace
109	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos).toLowerCase();	  text    =    padding    +    text.substring(0,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	6	2	replace
110	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  0);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]              ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  0);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  0);	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
111	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  text);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  int  pos  =  findWrapPos(text,  width,  text);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  text);	      int    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	15	None	replace
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(pos,  width  -  1).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	2	2	replace
113	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  width  -  1).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	2	2	replace
114	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	1	None	add
115	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  Text  p  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  Text  p  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width).trim();    Text  p  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
116	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  text);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	10	None	replace
117	[BUG]  [BUGGY]  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  0);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  0);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
118	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  0);  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width,  0);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  0);	      pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	10	1	replace
119	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  Text  p  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  Text  p  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    Text  p  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
120	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  TextUtilities  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).trim();    TextUtilities.writePadding(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	5	None	add
121	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
122	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
123	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
124	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	add
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
126	[BUG]  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
127	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop).trim();	      pos    =    findWrapPos(text,    width    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
128	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();	      pos    =    findWrapPos(text,    width    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
129	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  Text  p  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  Text  p  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    Text  p  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
130	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  TextUtilities  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.writePadding(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	3	None	add
131	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
132	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
134	[BUG]  [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {    [BUGGY]      sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]    text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	11	2	add
