bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(pos,  width).trim();	text  =  padding  +  text.substring(pos).trim();  	compilable	  [FE]  ComparisonFailure  	7	2	replace
2	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  width).trim();	text  =  padding  +  text.substring(pos).trim();  	compilable	  [FE]  ComparisonFailure  	7	2	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(pos,  pos).trim();	text  =  padding  +  text.substring(pos).trim();  	compilable	  [FE]  ComparisonFailure  	7	2	replace
4	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  pos).trim();	text  =  padding  +  text.substring(pos).trim();  	compilable	  [FE]  ComparisonFailure  	7	2	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(0,  pos).trim();	text  =  padding  +  text.substring(pos).trim();  	compilable	  [FE]  ComparisonFailure  	7	2	replace
6	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos).trim();	text  =  padding  +  text.substring(pos).trim();  	compilable	  [FE]  ComparisonFailure  	7	2	replace
7	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	  	text  =  padding  +  text.substring(pos).trim();  	compilable	timeout	7	1	replace
8	[BUG]  [BUGGY]    timeout  [FE]          ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	  	text  =  padding  +  text.substring(pos).trim();  	compilable	timeout	7	1	replace
9	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	    pos  =  findWrapPos(text,  width,  nextLineTabStop);		compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
10	[BUG]  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	    pos  =  findWrapPos(text,  width,  nextLineTabStop);		compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	8	2	add
12	[BUG]  [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);		compilable	  [FE]  ComparisonFailure  	8	2	add
13	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);		compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
14	[BUG]  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);		compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
15	[BUG]  [BUGGY]    int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]          ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	    int  pos  =  findWrapPos(text,  width,  nextLineTabStop);		non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	8	None	add
16	[BUG]  [BUGGY]    pos  =  findWrapPos(text,  width  +  text.substring(pos).trim();  [CE]  ')'  expected  [FE]            ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    pos  =  findWrapPos(text,  width  +  text.substring(pos).trim();  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	    pos  =  findWrapPos(text,  width  +  text.substring(pos).trim();		non-compiled	[CE]  ')'  expected	8	None	add
17	[BUG]  [BUGGY]    pos  =  findWrapPos(text.substring(0,  pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    pos  =  findWrapPos(text.substring(0,  pos));  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	    pos  =  findWrapPos(text.substring(0,  pos));		non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	8	None	add
18	[BUG]  [BUGGY]  text  =  padding  +  nextLineTabStop).trim();  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]  text  =  padding  +  nextLineTabStop).trim();  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  nextLineTabStop).trim();	text  =  padding  +  text.substring(pos).trim();  	non-compiled	[CE]  ';'  expected	7	None	replace
19	[BUG]  [BUGGY]    sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  [CE]  ')'  expected  [FE]    ComparisonFailure  [CONTEXT]  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {  [BUGGY]    sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  [BUGGY]  text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	    sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);		non-compiled	[CE]  ')'  expected	8	None	add
