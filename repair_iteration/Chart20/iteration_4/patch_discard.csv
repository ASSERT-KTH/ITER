compilation error,96,add,[CE] alpha has private access in Marker, ,this.alpha = value / 1.5;
compilation error,96,add,[CE] bad operand types for binary operator '/', ,this.value = stroke / 4;
compilation error,96,add,[CE] alpha has private access in Marker, ,this.alpha = 0.5 -(value % 4);
patch is same with buggy,96,replace,, this.value  =  value  *  2;  ,this.value = value * 2;
compilation error,96,add,[CE] illegal start of expression, ,if(this.value!= value)) { this.value = value * 2; }
compilation error,96,add,[CE] no suitable constructor found for Double(double,Stroke,Paint,Stroke,float), ,if(this.value!= value) { this.value = value * 2; } else { this.value = new Double(value, stroke, outlinePaint, outlineStroke, alpha); }
compilation error,96,add,[CE] no suitable constructor found for Double(double,Stroke,Stroke,Paint,float), ,if(this.value!= value) { this.value = value * 2; } else { this.value = new Double(value, stroke, outlineStroke, outlinePaint, alpha); }
patch is same with buggy,96,replace,, this.value  =  value  /  2.0  *  2;  ,this.value = value / 2.0 * 2;
compilation error,96,add,[CE] illegal start of expression, ,if(this.value!= value)) { this.value = value * 1; }
patch is same with buggy,96,replace,, this.value  =  value  /  2  *  2;  , 
compilation error,96,add,[CE] alpha has private access in Marker, ,this.alpha = value / 2.5;
patch is same with buggy,96,replace,, this.value  =  value  %  2;  ,this.value = value % 2;
patch is same with buggy,96,replace,, this.value  =(double)(this.value  /  2.0);  ,this.value =(double)(this.value / 2.0);
patch is same with buggy,96,replace,, if(this.value!=  value)  {  this.value  =  value  *  1;  }  ,if(this.value!= value) { this.value = value * 1; }
compilation error,96,add,[CE] bad operand types for binary operator '%', ,this.value = stroke % 2.0;
patch is same with buggy,96,replace,, this.value  =  value  %  2.0;  , 
compilation error,96,add,[CE] bad operand types for binary operator '*', ,this.value = stroke * 2 + 1;
compilation error,96,add,[CE] cannot find symbol, ,this.value =(( Value)value).doubleValue();
compilation error,96,add,[CE] cannot find symbol length, ,if(outlinePaint!= null) { this.value = outlinePaint.getChars(0, outlineStroke, stroke.length); } else { this.value = value * 2; }
compilation error,96,add,[CE] cannot find symbol, ,if(outlinePaint!= null) { this.value = outlinePaint.getChars(0, outlineStroke, stroke); } else { this.value = value * 2; }
compilation error,96,add,[CE] cannot find symbol length, ,if(outlinePaint!= null) { this.value = outlinePaint.getChars(0, outlineStroke, stroke.length); } else { this.value = value; }
compilation error,96,add,[CE] not a statement, ,if(this.value!= value) { this.value = value * 1; bodied
compilation error,96,add,[CE] not a statement, ,if(this.value!= value) { this.value = value * 1; bodied else if(this.value!= value) { this.value = value * 2; }
compilation error,96,add,[CE] not a statement, ,if(this.value!= value) { this.value = value * 1; bodied else if(this.value!= value) { this.value = value * 1; }
patch is same with buggy,96,replace,, this.value  =  value  %  2;  ,this.value = value % 2;
patch is same with buggy,96,replace,, this.value  =  value  %  2.0;  ,this.value = value % 2.0;
compilation error,96,replace,[CE] not a statement, if(this.value!=  value)  {  this.value  =  value  *  1;  }  ,this.value = value * 1; b) {
compilation error,96,add,[CE] bad operand types for binary operator '/', ,this.value = stroke / 2.0 * 2;
compilation error,96,add,[CE] not a statement, ,if(this.value!= value) { this.value = value * 2; bodied
compilation error,96,add,[CE] illegal start of expression, ,if(this.value!= value) { this.value = value * 2; &&(outlineStroke!= null && outlineStroke!= null && outlinePaint.equals(value))); }
compilation error,96,add,[CE] illegal start of expression, ,if(this.value!= value) { this.value = value * 2; &&(outlinePaint!= stroke, outlineStroke, float alpha)); }
patch is same with buggy,96,replace,, this.value  =  value  *  2;  ,this.value = value * 2;
patch is same with buggy,96,replace,, this.value  =  value  %  3;  , 
compilation error,96,add,[CE] no suitable constructor found for Double(double,double,Stroke,Paint,float), ,if(this.value!= value) { this.value = new Double(0.0, 0.0, outlineStroke, outlinePaint, alpha); } else { this.value = sum / 4; }
compilation error,96,add,[CE] no suitable constructor found for Double(double,double,Stroke,Paint,float), ,if(this.value < value) { this.value = new Double(0.0, 0.0, outlineStroke, outlinePaint, alpha); } else { this.value = sum / 4; }
compilation error,96,add,[CE] no suitable constructor found for Double(double,double,Stroke,Paint,float), ,if(this.value!= value) { this.value = new Double(0.0, 0.0, outlineStroke, outlinePaint, alpha); } else { this.value = value / 4; }
patch is same with buggy,96,replace,, this.value  =  value  /  2.0  *  2;  ,this.value = value / 2.0 * 2;
compilation error,96,add,[CE] bad operand types for binary operator '/', ,this.value = stroke / 2;
compilation error,96,add,[CE] bad operand types for binary operator '/', ,this.value = stroke / 2 * 2;
compilation error,96,add,[CE] cannot find symbol, ,this.value = outlinePaint.get(outlinePaint);
patch is same with buggy,96,replace,, this.value  =(double)(this.value  /  2.0);  ,this.value =(double)(this.value / 2.0);
compilation error,96,add,[CE] incompatible types, ,if(this.value!= 0.0) { this.value = new Double(value); } else { this.value = new Double(value, Paint.forPaint(stroke, outlinePaint, outlineStroke, alpha)); }
patch is same with buggy,96,replace,, this.value  =  value  %  3;  ,this.value = value % 3;
patch is same with buggy,96,replace,, this.value  =(double)(this.value  /  2.0);  ,this.value =(double)(this.value / 2.0);
patch is same with buggy,96,replace,, this.value  =  value  *  2;  ,this.value = value * 2;
compilation error,96,add,[CE] illegal start of expression, ,if(this.value!= value) { this.value = value * 2; >>
patch is same with buggy,96,replace,, this.value  =  value  %  2.0;  ,this.value = value % 2.0;
compilation error,96,add,[CE] no suitable constructor found for ValueMarker(double,Stroke,Paint,Stroke,float), ,if(this.value > 0.0) { this.value =(double)(this.value / 2.0); } else { this.value = new ValueMarker(value, stroke, outlinePaint, outlineStroke, alpha); }
compilation error,96,add,[CE] no suitable constructor found for ValueMarker(double,Stroke,Paint,Stroke,float), ,if(this.value > 0.0) { this.value =(double)(this.value / 2.0); } else { this.value = new ValueMarker(this.value, stroke, outlinePaint, outlineStroke, alpha); }
patch is same with buggy,96,replace,, this.value  =  value  %  2;  ,this.value = value % 2;
compilation error,96,add,[CE] ')' expected, ,this.value = value * 2 +(0.0, 0.0, 0.0, 0.0));
compilation error,96,add,[CE] bad operand types for binary operator '-', ,this.value = value * 2 +(alpha - outlinePaint)/ 2;
compilation error,96,add,[CE] ')' expected, ,this.value = value * 3 /(0.0, 0.0, 0.0, 0.0);
compilation error,96,add,[CE] ')' expected, ,this.value = value * 3 /(0.0, 0.0, 0.0, 0.0));
compilation error,96,add,[CE] no suitable constructor found for ValueMarker(double,Stroke,Paint,Stroke,float), ,if(this.value!= value) { this.value = value / 2.5; } else { this.value = new ValueMarker(this.value, stroke, outlinePaint, outlineStroke, alpha); }
compilation error,96,add,[CE] no suitable constructor found for ValueMarker(double,Stroke,Paint,Stroke,float), ,if(this.value!= value) { this.value = value / 2.0; } else { this.value = new ValueMarker(this.value, stroke, outlinePaint, outlineStroke, alpha); }
compilation error,96,add,[CE] incompatible types, ,if(this.value!= 0.0) { this.value = value / 2.0; } else { this.value = new Double(value); }
compilation error,96,add,[CE] no suitable constructor found for ValueMarker(double,Stroke,Paint,Stroke,float), ,if(this.value > 0.0) { this.value =(double)(this.value / 2); } else { this.value = new ValueMarker(value, stroke, outlinePaint, outlineStroke, alpha); }
compilation error,96,add,[CE] no suitable constructor found for ValueMarker(double,Stroke,Paint,Stroke,float), ,if(this.value > 0.0) { this.value =(double)(this.value / 2); } else { this.value = new ValueMarker(this.value, stroke, outlinePaint, outlineStroke, alpha); }
compilation error,96,add,[CE] bad operand types for binary operator '/', ,this.value = stroke / 2.0;
