bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  int  i  =  0;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    final    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	43	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    final    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	43	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len.length;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len.length;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len.length;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    final    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	43	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  final  int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  final  int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  2;  i++)  {  final  int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    final    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	43	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    For(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	36	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];	  for(int    i    =    1;    i    <    len;    i++)    {    For(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	36	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    For(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	36	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  Integer  i  =  0;  i  <  len;  i++)  {  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  Integer  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  Integer  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    For(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  >  expected	36	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  For(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  For(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    For(int  i  =  0;  i  <  chars.length  -  len;  i++)  {	  	non-compiled	[CE]  '.class'  expected	23	None	add
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    int  i  =  0;  i  <  chars.length  -  len;  i++)  {	  	non-compiled	[CE]  >  expected	23	None	add
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  len);  i++)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  len);  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    for(int  i  =  0;  i  <  chars.length  -  len);  i++)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  Len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  Len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    for(int  i  =  0;  i  <  chars.length  -  Len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  2;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  -  3;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  3;  i++)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  3;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  -  4;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  4;  i++)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  4;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1,  len;  i++)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1,  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  1,  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  -  6;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  6;  i++)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  6;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
23	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    for(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	65	None	replace
24	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    for(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    for(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  len;  i  -=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    for(int  i  =  0;  i  <  len;  i  -=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	add
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  For(int  i  =  0;  i  <  len;  i  -=  2)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  For(int  i  =  0;  i  <  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    For(int  i  =  0;  i  <  len;  i  -=  2)  {	  	non-compiled	[CE]  '.class'  expected	56	None	add
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  int  i  =  0;  i  <  len;  i  -=  2)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  int  i  =  0;  i  <  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    int  i  =  0;  i  <  len;  i  -=  2)  {	  	non-compiled	[CE]  >  expected	56	None	add
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  len);  i  -=  2)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  len);  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    for(int  i  =  0;  i  <  len);  i  -=  2)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  >=  len;  i  -=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  >=  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    for(int  i  =  0;  i  >=  len;  i  -=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	add
31	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  3;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  3;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    2;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	69	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  4;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  4;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    2;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	69	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  5;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  5;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    2;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	69	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  6;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  6;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    2;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	69	None	replace
35	[BUG]  [BUGGY]  sb.append('?').append(chars[i]);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(chars[i]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(chars[i]);	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
36	[BUG]  [BUGGY]  sb.append('?').append(Character.toLowerCase(chars[i]));  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(Character.toLowerCase(chars[i]));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(Character.toLowerCase(chars[i]));	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
37	[BUG]  [BUGGY]  sb.append('?').append(Character.toUpperCase(chars[i]));  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(Character.toUpperCase(chars[i]));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(Character.toUpperCase(chars[i]));	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
38	[BUG]  [BUGGY]  sb.append('?').append(chars[i].toCharArray());  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(chars[i].toCharArray());  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(chars[i].toCharArray());	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
39	[BUG]  [BUGGY]  sb.append('?').append(Character.toLowerCase(len));  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(Character.toLowerCase(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(Character.toLowerCase(len));	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
40	[BUG]  [BUGGY]  sb.append('?').append(chars[len]);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(chars[len]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(chars[len]);	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
41	[BUG]  [BUGGY]  sb.append('?').append(chars[i].toString());  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(chars[i].toString());  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(chars[i].toString());	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  continue;  }  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  continue;  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  continue;  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  incomparable  types:  char  and  <null>	93	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]  ==  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]  ==  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]  ==  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
46	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  j  =  0;  j  <  chars.length;  j++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  j  =  0;  j  <  chars.length;  j++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  j  =  0;  j  <  chars.length;  j++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
49	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(chars[i]));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(chars[i]));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(chars[i]));	  sb.append(len);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len);    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len);    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len);  i++)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len);  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len);  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len);    i    +=    2)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  +=  2)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len);    i    +=    2)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	49	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len);    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    for(int  i  =  0;  i  <  len  +  4;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  For(int  i  =  0;  i  <  len  +  4;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  For(int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    For(int  i  =  0;  i  <  len  +  4;  i++)  {	  	non-compiled	[CE]  '.class'  expected	5	None	add
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    for(int  i  =  0;  i  <  len  +  5;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  int  i  =  0;  i  <  len  +  4;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    int  i  =  0;  i  <  len  +  4;  i++)  {	  	non-compiled	[CE]  >  expected	5	None	add
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  FOR(int  i  =  0;  i  <  len  +  4;  i++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  FOR(int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    FOR(int  i  =  0;  i  <  len  +  4;  i++)  {	  	non-compiled	[CE]  '.class'  expected	5	None	add
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  >=  len  +  4;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  >=  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    for(int  i  =  0;  i  >=  len  +  4;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
61	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len  +  2;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
62	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len  +  2;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len  +  3;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
64	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  3;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len  +  3;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
65	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  2;  i  <  len  +  1;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
66	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  2;  i  <  len  +  1;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
67	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  chars.length  -  1;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0,  len  =  chars.length  -  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0,  len  =  chars.length  -  1;  i  <  len;  i++)  {	  For(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
68	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  i++)  {  [CE]  '.class'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  i++)  {	  For(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
69	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  >=  len;  i++)  {  [CE]  '.class'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  >=  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0,  len  =  chars.length;  i  >=  len;  i++)  {	  For(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
70	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  chars.length  +  1;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0,  len  =  chars.length  +  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0,  len  =  chars.length  +  1;  i  <  len;  i++)  {	  For(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    for(int  i  =  0;  i  <  len  +  3;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  For(int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  For(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    For(int  i  =  0;  i  <  len  +  3;  i++)  {	  	non-compiled	[CE]  '.class'  expected	3	None	add
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    int  i  =  0;  i  <  len  +  3;  i++)  {	  	non-compiled	[CE]  >  expected	3	None	add
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    for(int  i  =  0;  i  <  len  +  4;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  FOR(int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  FOR(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    FOR(int  i  =  0;  i  <  len  +  3;  i++)  {	  	non-compiled	[CE]  '.class'  expected	3	None	add
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    for(int  i  =  0;  i  <  len  +  2;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  final  int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  final  int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    final  int  i  =  0;  i  <  len  +  3;  i++)  {	  	non-compiled	[CE]  >  expected	3	None	add
78	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i!=  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i!=  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i!=  len;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    >=    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	14	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  ==  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  ==  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  ==  len;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    >=    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	14	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >>  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >>  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  >>  len;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    >=    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	14	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i++)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i++)  {  [CE]  >  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i++)  {  [CE]  >  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  For(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  For(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    For(int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	19	None	add
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c)  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c)  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c)	  	non-compiled	[CE]  ')'  expected	19	None	add
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  String  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  String  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  String  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  7;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  7;  i++)  {	  for(int    i    =    0;    i    <    len    +    6;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	1	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  7;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  7;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  7;  i++)  {	  for(int    i    =    0;    i    <    len    +    6;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	1	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  continue  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  continue  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  continue	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  ';'  expected	94	None	replace
95	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  '.class'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  '.class'  expected	94	None	replace
96	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
97	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  continue  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  continue  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  continue	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isISOControl(c))  {  continue  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isISOControl(c))  {  continue  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isISOControl(c))  {  continue	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  ';'  expected	94	None	replace
99	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  '.class'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    length;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	84	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len;  i  +=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    for(int  i  =  0;  i  <  len;  i  +=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i  +=  1)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    For(int  i  =  0;  i  <  len;  i  +=  1)  {	  	non-compiled	[CE]  '.class'  expected	50	None	add
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    for(int  i  =  0;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i  +=  1)  {  [CE]  >  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  int  i  =  0;  i  <  len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    int  i  =  0;  i  <  len;  i  +=  1)  {	  	non-compiled	[CE]  >  expected	50	None	add
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len);  i  +=  1)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len);  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    for(int  i  =  0;  i  <  len);  i  +=  1)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i  +=  1)  {  [CE]  >  expected  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    final  int  i  =  0;  i  <  len;  i  +=  1)  {	  	non-compiled	[CE]  >  expected	50	None	add
106	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  +  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  len;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  +  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	replace
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  chars.length;  i  +=  2)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	53	1	replace
109	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i  +=  2)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  chars.length;  i  +=  2)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	53	1	replace
110	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  1;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  1;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
112	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
114	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
116	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  4;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  4;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
118	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  1;  i  +=  1)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i  +=  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  1;  i  +=  1)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
120	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  5;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  5;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	91	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	91	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isISOControl(c))  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	91	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isUnicodeBlock(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isUnicodeBlock(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null  ||!Character.isUnicodeBlock(c))  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	91	None	replace
126	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len;  i  -=  1)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  -=  1)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
128	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  -=  2)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	57	None	replace
129	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
130	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  -=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
131	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c));  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(c));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(c));	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
132	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c));  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(c));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(c));	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  >  expected	37	None	replace
134	[BUG]  [BUGGY]  final  for(int  i  =  1;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  1;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  1;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  1;  i  <  len;  i++)  {  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  >  expected	37	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  String  c  =  chars[i];  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  String  c  =  chars[i];  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  String  c  =  chars[i];	  for(int    i    =    1;    i    <    len;    i++)    {    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  incompatible  types	37	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i--)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i--)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  len;  i--)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	89	None	add
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  For(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  For(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    For(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {	  	non-compiled	[CE]  '.class'  expected	89	None	add
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    int  i  =  0;  i  <  len  +  2;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	89	None	add
141	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    for(int  i  =  0;  i  <  len  +  2;  i  +=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	89	None	add
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  Len;  i++)  {  [CE]  cannot  find  symbol  Len  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  Len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  Len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    for(int    i    =    1;    i    <    Len;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  Len	83	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	add
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  For(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  For(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    For(int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	73	None	add
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	73	None	add
149	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  FOR(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  FOR(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    FOR(int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	73	None	add
150	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  final  int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  final  int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    final  int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	73	None	add
151	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  for(int  i  =  0;  i  >=  chars.length  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  for(int  i  =  0;  i  >=  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    for(int  i  =  0;  i  >=  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	add
152	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    final    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  >  expected	64	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    final    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  >  expected	64	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    For(int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	41	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    For(int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	41	None	replace
156	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  '.class'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    For(int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	41	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  '.class'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  len  +  3;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    For(int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	41	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  2,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  2,  len  =  chars.length;  i  <  len;  i++)  {	  for(int    i    =    1,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	15	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  4,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  4,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  4,  len  =  chars.length;  i  <  len;  i++)  {	  for(int    i    =    1,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	15	None	replace
160	[BUG]  [BUGGY]  sb.append(chars[len]);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(chars[len]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(chars[len]);	  sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
161	[BUG]  [BUGGY]  sb.append(chars[0]);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(chars[0]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(chars[0]);	  sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
162	[BUG]  [BUGGY]  sb.append(chars[i],  len);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(chars[i],  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(chars[i],  len);	  sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
163	[BUG]  [BUGGY]  sb.append(s[i]);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(s[i]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(s[i]);	  sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    for(int  i  =  1;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	add
165	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  For(int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  For(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    For(int  i  =  1;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	17	None	add
166	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    int  i  =  1;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	17	None	add
167	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  FOR(int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  FOR(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    FOR(int  i  =  1;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	17	None	add
168	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length);  i++)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length);  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    for(int  i  =  1;  i  <  chars.length);  i++)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
169	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  >=  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    >=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	66	1	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  >=  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    >=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	66	1	replace
171	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  10;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  10;  i++)  {	  for(int    i    =    0;    i    <    len    +    5;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  10;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  10;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  10;  i++)  {	  for(int    i    =    0;    i    <    len    +    5;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
173	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    for(int  i  =  2;  i  <  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
174	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  For(int  i  =  2;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  For(int  i  =  2;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    For(int  i  =  2;  i  <  len;  i++)  {	  	non-compiled	[CE]  '.class'  expected	25	None	add
175	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  int  i  =  2;  i  <  len;  i++)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  int  i  =  2;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    int  i  =  2;  i  <  len;  i++)  {	  	non-compiled	[CE]  >  expected	25	None	add
176	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  FOR(int  i  =  2;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  FOR(int  i  =  2;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    FOR(int  i  =  2;  i  <  len;  i++)  {	  	non-compiled	[CE]  '.class'  expected	25	None	add
177	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  >=  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  >=  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    for(int  i  =  2;  i  >=  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
178	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  len);  i++)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  len);  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    for(int  i  =  2;  i  <  len);  i++)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  *  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int    i    =    0;    i    <    len    +    2;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	1	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  *  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int    i    =    0;    i    <    len    +    2;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	1	replace
181	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  <  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i    +=    2)    {    for(int  i  =  1;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
182	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  For(int  i  =  1;  i  <  len;  i  +=  2)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  For(int  i  =  1;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i    +=    2)    {    For(int  i  =  1;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  '.class'  expected	54	None	add
183	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  int  i  =  1;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  int  i  =  1;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i    +=    2)    {    int  i  =  1;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	54	None	add
184	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  <  len);  i  +=  2)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  <  len);  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i    +=    2)    {    for(int  i  =  1;  i  <  len);  i  +=  2)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
185	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  final  int  i  =  1;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  final  int  i  =  1;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i    +=    2)    {    final  int  i  =  1;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	54	None	add
186	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  >=  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  >=  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i    +=    2)    {    for(int  i  =  1;  i  >=  len;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chars.length  -  1;  i++)  {  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  this.chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  this.chars.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    this.chars.length;    i++)    {    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	80	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length  +  1;  i  <  len  +  1;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length  +  1;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length  +  1;  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	13	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >=  len  +  1;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >=  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  >=  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	13	None	replace
190	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    final    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	67	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {  [CE]  >  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    final    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	67	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i++)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {  final  int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    final    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	67	None	replace
193	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    for(int  i  =  0;  i  <  len  +  5;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
194	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  For(int  i  =  0;  i  <  len  +  5;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  For(int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    For(int  i  =  0;  i  <  len  +  5;  i++)  {	  	non-compiled	[CE]  '.class'  expected	7	None	add
195	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  len  +  6;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    for(int  i  =  0;  i  <  len  +  6;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  int  i  =  0;  i  <  len  +  5;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    int  i  =  0;  i  <  len  +  5;  i++)  {	  	non-compiled	[CE]  >  expected	7	None	add
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    for(int  i  =  0;  i  <  len  +  4;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  final  int  i  =  0;  i  <  len  +  5;  i++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  final  int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    final  int  i  =  0;  i  <  len  +  5;  i++)  {	  	non-compiled	[CE]  >  expected	7	None	add
199	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	add
200	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  For(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  For(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    For(int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  	non-compiled	[CE]  '.class'  expected	85	None	add
201	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	add
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [CE]  >  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  	non-compiled	[CE]  >  expected	85	None	add
203	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  for(int  i  =  0;  i  <  chars.length);  i  +=  1)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  for(int  i  =  0;  i  <  chars.length);  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    for(int  i  =  0;  i  <  chars.length);  i  +=  1)  {	  	non-compiled	[CE]  ';'  expected	85	None	add
204	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    For(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  '.class'  expected	52	None	add
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	52	None	add
207	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  chars.length);  i  +=  2)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  chars.length);  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    for(int  i  =  0;  i  <  chars.length);  i  +=  2)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
208	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  1;  i  <  len;  i++)  {	  For(int    i    =    0;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	27	None	replace
209	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  <  len  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    for(int  i  =  1;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
210	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  For(int  i  =  1;  i  <  len  +  1;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  For(int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    For(int  i  =  1;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	11	None	add
211	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  int  i  =  1;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    int  i  =  1;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	11	None	add
212	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  FOR(int  i  =  1;  i  <  len  +  1;  i++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  FOR(int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    FOR(int  i  =  1;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	11	None	add
213	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  >=  len  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  >=  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    for(int  i  =  1;  i  >=  len  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
214	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  final  int  i  =  1;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  final  int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    final  int  i  =  1;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	11	None	add
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  >  expected	61	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  char[]  chars  =  s.toCharArray();  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  char[]  chars  =  s.toCharArray();  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  char[]  chars  =  s.toCharArray();  int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  >  expected	61	None	replace
217	[BUG]  [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  len;  i++)  {  [CE]  variable  chars  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    char[]    chars    =    s.toCharArray();    for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  chars  is  already  defined  in  method  sanitize(String)	96	None	replace
218	[BUG]  [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len;  i++)  {  [CE]  variable  chars  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    char[]    chars    =    s.toCharArray();    for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  chars  is  already  defined  in  method  sanitize(String)	96	None	replace
219	[BUG]  [BUGGY]  final  for(int  i  =  1;  i  <  len;  i++)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    char[]    chars    =    s.toCharArray();    for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
220	[BUG]  [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  variable  chars  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	char[]  chars  =  s.toCharArray();  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    char[]    chars    =    s.toCharArray();    for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  chars  is  already  defined  in  method  sanitize(String)	96	None	replace
221	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  -  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  -  1;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  -  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len.length  -  1;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
224	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  chars.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
225	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length  -  1;  i++)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  chars.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
226	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    for(int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
227	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  For(int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  For(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    For(int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	21	None	add
228	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	21	None	add
229	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  FOR(int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  FOR(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    FOR(int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	21	None	add
230	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length);  i++)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length);  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    for(int  i  =  2;  i  <  chars.length);  i++)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {  }  [CE]  >  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {  }	  for(int    i    =    1;    i    <    len;    i++)    {    final    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  >  expected	82	None	replace
232	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0,  len  =  chars.length;  i++)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0,  len  =  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0,  len  =  chars.length;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    final    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  ';'  expected	82	None	replace
233	[BUG]  [BUGGY]  final  int  i  =  1;  i  <  len;  i++)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    final    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  >  expected	82	None	replace
234	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    final    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	82	None	replace
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len;  i  +=  1)  {	  for(int    i    =    1;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	55	1	replace
236	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len;  i  +=  1)  {	  for(int    i    =    1;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	55	1	replace
237	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  2;  i  <  len;  i  +=  2)  {	  for(int    i    =    1;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	55	1	replace
238	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i  +=  2)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  2;  i  <  len;  i  +=  2)  {	  for(int    i    =    1;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	55	1	replace
239	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    FOR(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	60	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    FOR(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	60	None	replace
241	[BUG]  [BUGGY]  FOR(int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  FOR(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	FOR(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    FOR(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	60	None	replace
242	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars[0]));  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(chars[0]));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars[0]));	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
243	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars[i]),  len);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(chars[i]),  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars[i]),  len);	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
244	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars[i],  len));  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(chars[i],  len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars[i],  len));	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
245	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars[len]));  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(chars[len]));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars[len]));	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
246	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars[i])+  1);  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(chars[i])+  1);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars[i])+  1);	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
247	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(len,  chars[i]));  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(len,  chars[i]));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(len,  chars[i]));	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
249	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  ++i)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
251	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  ++i)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
252	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len.length;  ++i)  {  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len.length;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len.length;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	101	None	replace
253	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  1;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
254	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  ++i)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  1;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
255	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  ++i)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	non-compiled	[CE]  ';'  expected	101	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    for(int  i  =  0;  i  <  len  +  2;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
257	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  For(int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  For(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    For(int  i  =  0;  i  <  len  +  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
258	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    int  i  =  0;  i  <  len  +  2;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
259	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  FOR(int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  FOR(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    FOR(int  i  =  0;  i  <  len  +  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
260	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  >=  len  +  2;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  >=  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    for(int  i  =  0;  i  >=  len  +  2;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
261	[BUG]  [BUGGY]  sb.append('/',  len);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('/',  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/',  len);	  sb.append('/');    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
262	[BUG]  [BUGGY]  sb.append('/').append(chars[i]);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('/').append(chars[i]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/').append(chars[i]);	  sb.append('/');    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
263	[BUG]  [BUGGY]  sb.append('/'  +  chars[i]);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('/'  +  chars[i]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/'  +  chars[i]);	  sb.append('/');    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
264	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i!=  chars.length;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
265	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i!=  chars.length;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
266	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i!=  len;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
267	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  len;  i++)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i!=  len;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
268	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  >=  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  >=  len;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
269	[BUG]  [BUGGY]  for(int  i  =  0;  i  >=  len;  i++)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  >=  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  >=  len;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  len  +  6;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    for(int  i  =  0;  i  <  len  +  6;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
271	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  For(int  i  =  0;  i  <  len  +  6;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  For(int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    For(int  i  =  0;  i  <  len  +  6;  i++)  {	  	non-compiled	[CE]  '.class'  expected	9	None	add
272	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  int  i  =  0;  i  <  len  +  6;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    int  i  =  0;  i  <  len  +  6;  i++)  {	  	non-compiled	[CE]  >  expected	9	None	add
273	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  len  +  7;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  len  +  7;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    for(int  i  =  0;  i  <  len  +  7;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
274	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  final  int  i  =  0;  i  <  len  +  6;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  final  int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    final  int  i  =  0;  i  <  len  +  6;  i++)  {	  	non-compiled	[CE]  >  expected	9	None	add
275	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  >=  len  +  6;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  >=  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    for(int  i  =  0;  i  >=  len  +  6;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
276	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  /  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  /  1;  i++)  {	  for(int    i    =    0;    i    <    len    *    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	88	1	replace
277	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  /  1;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  /  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  /  1;  i++)  {	  for(int    i    =    0;    i    <    len    *    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	88	1	replace
278	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  *  4;  i++)  {	  for(int    i    =    0;    i    <    len    *    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	1	replace
279	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  4;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  *  4;  i++)  {	  for(int    i    =    0;    i    <    len    *    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	1	replace
280	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  *  3;  i++)  {	  for(int    i    =    0;    i    <    len    *    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	1	replace
281	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  3;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  *  3;  i++)  {	  for(int    i    =    0;    i    <    len    *    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	1	replace
282	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len.length  *  1;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len.length  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len.length  *  1;  i++)  {	  for(int    i    =    0;    i    <    len    *    1;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	88	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  Len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  Len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  Len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    Len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
284	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  1;  i  <  chars.length;  i++)  {	  For(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	45	None	replace
285	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  For(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	45	None	replace
286	[BUG]  [BUGGY]  For(int  i  =  0;  i!=  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i!=  chars.length;  i++)  {	  For(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	45	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >=  len;  ++i)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >=  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  >=  len;  ++i)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	106	None	replace
288	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  --i)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  --i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  --i)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	106	None	replace
289	[BUG]  [BUGGY]  for(int  len  =  0,  len  =  chars.length;  i  <  len;  ++i)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  len  =  0,  len  =  chars.length;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  len  =  0,  len  =  chars.length;  i  <  len;  ++i)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	106	None	replace
290	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  chars.length;  i  <  len;  ++i)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1,  len  =  chars.length;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1,  len  =  chars.length;  i  <  len;  ++i)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	106	None	replace
291	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len;  ++i)  {  [CE]  '.class'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0,  len  =  chars.length;  i  <  len;  ++i)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  '.class'  expected	106	None	replace
292	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	92	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]  ==  null)  {  }  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]  ==  null)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]  ==  null)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	92	None	replace
294	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  '.class'  expected	92	None	replace
295	[BUG]  [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  variable  chars  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    char[]    chars    =    s.toCharArray();    for(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  variable  chars  is  already  defined  in  method  sanitize(String)	63	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i!=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    for(int  i  =  0;  i!=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
297	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    for(int  i  =  0;  i  >=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
298	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  ==  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  ==  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    for(int  i  =  0;  i  ==  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
299	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  >>  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  >>  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    for(int  i  =  0;  i  >>  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
300	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  For(int  i  =  0;  i!=  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  For(int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    For(int  i  =  0;  i!=  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	71	None	add
301	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  [BUGGY]  chars.length;  i++)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  [BUGGY]  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    for(int  i  =  0;  i  [BUGGY]  chars.length;  i++)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
302	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  [Delete]  chars.length;  i++)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  for(int  i  =  0;  i  [Delete]  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    for(int  i  =  0;  i  [Delete]  chars.length;  i++)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
303	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  int  i  =  0;  i!=  chars.length;  i++)  {  [CE]  not  a  statement  [FE]                  ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    int  i  =  0;  i!=  chars.length;  i++)  {	  	non-compiled	[CE]  not  a  statement	71	None	add
304	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(len);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
305	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder();	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
306	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.length);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
307	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len  +  1);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len  +  1);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(len  +  1);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
308	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(len);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	StringBuilder  sb  =  new  StringBuilder(len);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
309	[BUG]  [BUGGY]  final  char  sb  =  new  StringBuilder();  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  char  sb  =  new  StringBuilder();  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  char  sb  =  new  StringBuilder();	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
310	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.valueOf(len));  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.valueOf(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.valueOf(len));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
311	[BUG]  [BUGGY]  sb.append('?',  len);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?',  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?',  len);	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
312	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  len  *  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  len  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    for(int  i  =  0;  i  <  len  *  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
313	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  For(int  i  =  0;  i  <  len  *  1;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  For(int  i  =  0;  i  <  len  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    For(int  i  =  0;  i  <  len  *  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	87	None	add
314	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  int  i  =  0;  i  <  len  *  1;  i++)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  int  i  =  0;  i  <  len  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    int  i  =  0;  i  <  len  *  1;  i++)  {	  	non-compiled	[CE]  >  expected	87	None	add
315	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  len  *  2;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  len  *  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    for(int  i  =  0;  i  <  len  *  2;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
316	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  final  int  i  =  0;  i  <  len  *  1;  i++)  {  [CE]  >  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  final  int  i  =  0;  i  <  len  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    final  int  i  =  0;  i  <  len  *  1;  i++)  {	  	non-compiled	[CE]  >  expected	87	None	add
317	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(len  +  1));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(len  +  1));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(len  +  1));	  sb.append(Character.toLowerCase(len));    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
318	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(len)+  1);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(len)+  1);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(len)+  1);	  sb.append(Character.toLowerCase(len));    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
319	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(len),  chars[i]);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(len),  chars[i]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(len),  chars[i]);	  sb.append(Character.toLowerCase(len));    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
320	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(len,  chars.length));  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(len,  chars.length));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(len,  chars.length));	  sb.append(Character.toLowerCase(len));    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
321	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
322	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  len;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    for(int  i  =  len;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	98	None	add
323	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  For(int  i  =  len;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  For(int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    For(int  i  =  len;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	98	None	add
324	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  FOR(int  i  =  len;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  FOR(int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    FOR(int  i  =  len;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	98	None	add
325	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  int  i  =  len;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    int  i  =  len;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	98	None	add
326	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  Len;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  Len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    for(int  i  =  Len;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	98	None	add
327	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
328	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
329	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  +  2;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
330	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  +  2;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
331	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  +  3;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  3;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  +  3;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
333	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  +  4;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
334	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  4;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  +  4;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
335	[BUG]  [BUGGY]  sb.append('[').append(chars[i]);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(chars[i]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(chars[i]);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
336	[BUG]  [BUGGY]  sb.append('[').append(chars[i].toCharArray());  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(chars[i].toCharArray());  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(chars[i].toCharArray());	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
337	[BUG]  [BUGGY]  sb.append('[').append(Character.toLowerCase(len));  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(Character.toLowerCase(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(Character.toLowerCase(len));	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
338	[BUG]  [BUGGY]  sb.append('[').append(len);  [CE]  illegal  start  of  type  [FE]                                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(len);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
339	[BUG]  [BUGGY]  sb.append('[').append(chars[i].toLowerCase());  [CE]  illegal  start  of  type  [FE]                                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(chars[i].toLowerCase());  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(chars[i].toLowerCase());	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
340	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  -  1;  i  +=  1)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
341	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i  +=  1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  1;  i  +=  1)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
342	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  +=  1)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  i  +=  1)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	86	None	replace
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  chars.length;  i  +=  1)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
344	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i  +=  1)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  chars.length;  i  +=  1)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
345	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  len;  ++i)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    for(int  i  =  0;  i  <  len;  ++i)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	100	None	add
346	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  For(int  i  =  0;  i  <  len;  ++i)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  For(int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    For(int  i  =  0;  i  <  len;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	100	None	add
347	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  int  i  =  0;  i  <  len;  ++i)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    int  i  =  0;  i  <  len;  ++i)  {	  	non-compiled	[CE]  >  expected	100	None	add
348	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  FOR(int  i  =  0;  i  <  len;  ++i)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  FOR(int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    FOR(int  i  =  0;  i  <  len;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	100	None	add
349	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  >=  len;  ++i)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  >=  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    for(int  i  =  0;  i  >=  len;  ++i)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	100	None	add
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  Len;  ++i)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  Len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    for(int  i  =  0;  i  <  Len;  ++i)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	100	None	add
351	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars));	  sb.append(Character.toUpperCase(len));    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
352	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars,  len));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(chars,  len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars,  len));	  sb.append(Character.toUpperCase(len));    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
353	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(len  +  1));  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(len  +  1));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(len  +  1));	  sb.append(Character.toUpperCase(len));    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
354	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(len)+  1);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(len)+  1);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(len)+  1);	  sb.append(Character.toUpperCase(len));    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
355	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(len),  chars[i]);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toUpperCase(len),  chars[i]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(len),  chars[i]);	  sb.append(Character.toUpperCase(len));    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
356	[BUG]  [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
357	[BUG]  [BUGGY]  if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
358	[BUG]  [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  chars,  0,  len);  }  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  chars,  0,  len);  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  chars,  0,  len);  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
359	[BUG]  [BUGGY]  if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  chars,  0,  len);  }  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  chars,  0,  len);  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  chars,  0,  len);  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
360	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  <  Len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  for(int  i  =  1;  i  <  Len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i    +=    2)    {    for(int  i  =  1;  i  <  Len;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
361	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  8;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  8;  i++)  {	  for(int    i    =    0;    i    <    len    +    4;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
362	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  8;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  8;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  8;  i++)  {	  for(int    i    =    0;    i    <    len    +    4;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
363	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  final  int  i  =  2;  i  <  len;  i++)  {  [CE]  >  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  final  int  i  =  2;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    final  int  i  =  2;  i  <  len;  i++)  {	  	non-compiled	[CE]  >  expected	25	None	add
364	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  Len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  Len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    len;    i++)    {    for(int  i  =  2;  i  <  Len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
365	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(chars));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(chars));	  sb.append(Character.toLowerCase(len));    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
366	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [CE]  cannot  find  symbol  Len  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  Len;  i  +=  2)  {	  for(int    i    =    0;    i    <    length;    i    +=    2)    {    	non-compiled	[CE]  cannot  find  symbol  Len	84	None	replace
367	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len  +  2;  i++)  {  [CE]  '.class'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0,  len  =  chars.length;  i  <  len  +  2;  i++)  {	  For(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
368	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	add
369	[BUG]  [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  sb,  0,  len);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  sb,  0,  len);  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  System.arraycopy(chars,  0,  sb,  0,  len);  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
370	[BUG]  [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  sb.append( ", ");  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  sb.append( ", ");  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  sb.append( ", ");  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
371	[BUG]  [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  sb.append('n');  }  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  sb.append('n');  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(len  >  0)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  sb.append('n');  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
372	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  1;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	42	None	replace
373	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  2;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	42	None	replace
374	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
375	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  final  int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [CE]  >  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  final  int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    final  int  i  =  0;  i  <  chars.length  -  len;  i++)  {	  	non-compiled	[CE]  >  expected	23	None	add
376	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    for(int  i  =  0;  i  <  chars.length  +  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
377	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  >=  chars.length  -  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  for(int  i  =  0;  i  >=  chars.length  -  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    for(int  i  =  0;  i  >=  chars.length  -  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
378	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  final  int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  final  int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    final  int  i  =  0;  i  <  len  +  2;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	89	None	add
379	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    for(int  i  =  0;  i  <  len  +  3;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	89	None	add
380	[BUG]  [BUGGY]  sb.append('n',  len);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('n',  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('n',  len);	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
381	[BUG]  [BUGGY]  sb.append('N');  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('N');  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('N');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
382	[BUG]  [BUGGY]  sb.append('#');  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('#');  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('#');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
383	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  <  Len  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  <  Len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    for(int  i  =  1;  i  <  Len  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
384	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  <  LEn  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1;  i  <  LEn  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    for(int  i  =  1;  i  <  LEn  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
385	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  LEn  +  1;  i++)  {  [CE]  cannot  find  symbol  LEn  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  LEn  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  LEn  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int    i    =    0;    i    <    LEn    +    1;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  LEn	44	None	replace
386	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  Len  +  6;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  Len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    for(int  i  =  0;  i  <  Len  +  6;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
387	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
388	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  length;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  length;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
389	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
390	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  final  int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  >  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  final  int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    final  int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	52	None	add
391	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  >=  chars.length;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  >=  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    for(int  i  =  0;  i  >=  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
392	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
393	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  Len  +  3;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  for(int  i  =  0;  i  <  Len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    3;    i++)    {    for(int  i  =  0;  i  <  Len  +  3;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
394	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len.length;  i++)  {  [CE]  '.class'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len.length;  i++)  {	  for(int    i    =    0;    i    <    LAST_VALID_BLOCK.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	70	None	replace
395	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  Len.length;  i++)  {  [CE]  cannot  find  symbol  Len  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  Len.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  Len.length;  i++)  {	  for(int    i    =    0;    i    <    LAST_VALID_BLOCK.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  Len	70	None	replace
396	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
397	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  For(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
398	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  final  int  i  =  0;  i  <  len;  i  -=  2)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  final  int  i  =  0;  i  <  len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    final  int  i  =  0;  i  <  len;  i  -=  2)  {	  	non-compiled	[CE]  >  expected	56	None	add
399	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  len;  i  -=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  len;  i  -=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    for(int  i  =  0;  i  <  len;  i  -=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	add
400	[BUG]  [BUGGY]  sb.append('/').append(len);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('/').append(len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/').append(len);	  sb.append('/');    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
401	[BUG]  [BUGGY]  sb.append('/').append(Character.toLowerCase(len));  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('/').append(Character.toLowerCase(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/').append(Character.toLowerCase(len));	  sb.append('/');    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
402	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(chars[i],  len));  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(Character.toLowerCase(chars[i],  len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(chars[i],  len));	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
403	[BUG]  [BUGGY]  sb.append(chars[i].toUpperCase(len));  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(chars[i].toUpperCase(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(chars[i].toUpperCase(len));	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
404	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    final    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	43	None	replace
405	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  final  int  i  =  0;  i  <  len  +  4;  i++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  final  int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    final  int  i  =  0;  i  <  len  +  4;  i++)  {	  	non-compiled	[CE]  >  expected	5	None	add
406	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  Len  +  4;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  Len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    for(int  i  =  0;  i  <  Len  +  4;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
407	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  Len  +  5;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  for(int  i  =  0;  i  <  Len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    for(int  i  =  0;  i  <  Len  +  5;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
408	[BUG]  [BUGGY]  sb.append('?').append(chars,  0,  len);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(chars,  0,  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(chars,  0,  len);	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
409	[BUG]  [BUGGY]  sb.append('?').append(chars);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(chars);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(chars);	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
410	[BUG]  [BUGGY]  sb.append('?').append(chars[0]);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(chars[0]);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(chars[0]);	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
411	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  else  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  if(!Character.isISOControl(c))  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  else  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  if(!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  }  else  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  if(!Character.isISOControl(c))  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    for(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
412	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  else  if(chars[i]!=  null)  {  final  String  c  =  chars[i];  if(!Character.isISOControl(c))  {  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  else  if(chars[i]!=  null)  {  final  String  c  =  chars[i];  if(!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  }  else  if(chars[i]!=  null)  {  final  String  c  =  chars[i];  if(!Character.isISOControl(c))  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    for(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
413	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  >  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  >  expected	61	None	replace
414	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  String  c  =  chars[i];  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  String  c  =  chars[i];  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  String  c  =  chars[i];	  for(int    i    =    0;    i    <    chars.length;    i++)    {    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  incompatible  types	61	None	replace
415	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  LAST_VALID_BLOCK.length;  i++)  {  [CE]  '.class'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  LAST_VALID_BLOCK.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  LAST_VALID_BLOCK.length;  i++)  {	  For(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	45	None	replace
416	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  LEN  +  1;  i++)  {  [CE]  cannot  find  symbol  LEN  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  LEN  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  LEN  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int    i    =    0;    i    <    LEN    +    1;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  LEN	95	None	replace
417	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i++)  {  }  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i++)  {  }	  for(int    i    =    1;    i    <    len;    i++)    {    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  >  expected	37	None	replace
418	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len.length  +  1;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	74	None	replace
419	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  Len;  i  +=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  Len;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    for(int  i  =  0;  i  <  Len;  i  +=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
420	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    final    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	67	None	replace
421	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
422	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  final  int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  final  int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    final  int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	21	None	add
423	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length;  i++)  {  }  for(int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length;  i++)  {  }  for(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    for(int  i  =  2;  i  <  chars.length;  i++)  {  }  for(int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
424	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  >=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  >=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    2;    i    <    chars.length;    i++)    {    for(int  i  =  2;  i  >=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
425	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  continue  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  continue  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  continue	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  ';'  expected	94	None	replace
426	[BUG]  [BUGGY]  final  char  c  =  chars[i];  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  char  c  =  chars[i];  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  char  c  =  chars[i];	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
427	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  LAST_CHARS.length;  i++)  {  [CE]  cannot  find  symbol  LAST_CHARS  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  LAST_CHARS.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  LAST_CHARS.length;  i++)  {	  for(int    i    =    0;    i    <    this.chars.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  LAST_CHARS	80	None	replace
428	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len  +  len);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len  +  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(len  +  len);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
429	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars));  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
430	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    For(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	59	None	replace
431	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    For(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	59	None	replace
432	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  ++i)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  ++i)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	106	None	replace
433	[BUG]  [BUGGY]  for(final  int  i  =  0;  i  <  len;  i++)  {  [CE]  cannot  assign  a  value  to  final  variable  i  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(final  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(final  int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    final    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  i	82	None	replace
434	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int    i    =    0;    i    <    len    +    2;    i++)    {    	non-compiled	[CE]  '.class'  expected	79	None	replace
435	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  >=  len  *  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  >=  len  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    for(int  i  =  0;  i  >=  len  *  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
436	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  Len  *  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  Len  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    for(int  i  =  0;  i  <  Len  *  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
437	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
438	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  return  sb.toString();  }  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  return  sb.toString();  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  return  sb.toString();  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	92	None	replace
439	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  break;  }  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  break;  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  break;  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	92	None	replace
440	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    for(int  i  =  0;  i  <  len  +  3;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
441	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  Len  +  2;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  Len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    for(int  i  =  0;  i  <  Len  +  2;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
442	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
443	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  final  int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [CE]  >  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  final  int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    final  int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	19	None	add
444	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	19	None	add
445	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
446	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  final  int  i  =  len;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  final  int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    final  int  i  =  len;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	98	None	add
447	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  len;  i  >=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  len;  i  >=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    for(int  i  =  len;  i  >=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	98	None	add
448	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  len;  i  <  chars.length);  i++)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  for(int  i  =  len;  i  <  chars.length);  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    for(int  i  =  len;  i  <  chars.length);  i++)  {	  	non-compiled	[CE]  ';'  expected	98	None	add
449	[BUG]  [BUGGY]  sb.append('['  +  len);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('['  +  len);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('['  +  len);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
450	[BUG]  [BUGGY]  sb.append('[').append(Character.toUpperCase(len));  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(Character.toUpperCase(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(Character.toUpperCase(len));	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
451	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	add
452	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  final  int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  final  int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    final  int  i  =  1;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	17	None	add
453	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length;  i++)  {  }  for(int  i  =  1;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length;  i++)  {  }  for(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    for(int  i  =  1;  i  <  chars.length;  i++)  {  }  for(int  i  =  1;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	add
454	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  >=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  >=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    for(int  i  =  1;  i  >=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	add
455	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  length;  i++)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  length;  i++)  {	  For(int    i    =    0;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	27	None	replace
456	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  final  int  i  =  0;  i!=  chars.length;  i++)  {  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  final  int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    final  int  i  =  0;  i!=  chars.length;  i++)  {	  	non-compiled	[CE]  not  a  statement	71	None	add
457	[BUG]  [BUGGY]  for(final  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  cannot  assign  a  value  to  final  variable  i  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(final  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(final  int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    final    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  i	64	None	replace
458	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    final    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	64	None	replace
459	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  ++i)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    FOR(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	60	None	replace
460	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  [CE]  cannot  find  symbol  length  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  length	101	None	replace
461	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  >=  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  >=  len;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
462	[BUG]  [BUGGY]  for(int  i  =  0;  i  >=  len;  ++i)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  >=  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  >=  len;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
463	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len  +  4;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
464	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  4;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  4;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len  +  4;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
465	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  2;  i  <  len  +  2;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
466	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  2;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  2;  i  <  len  +  2;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
467	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    Len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
468	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    Len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
469	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
470	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  final  int  i  =  0;  i  <  len;  ++i)  {  [CE]  >  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  final  int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    final  int  i  =  0;  i  <  len;  ++i)  {	  	non-compiled	[CE]  >  expected	100	None	add
471	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  len;  --i)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  len;  --i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    for(int  i  =  0;  i  <  len;  --i)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	100	None	add
472	[BUG]  [BUGGY]  sb.append(':');  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(':');  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(':');	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
473	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
474	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  -=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
475	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i  -=  2)  {  [CE]  cannot  find  symbol  length  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  length;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  length;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    -=    2)    {    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
476	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  -  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  -  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
477	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  -  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  -  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  -  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
478	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  /  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  /  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
479	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  /  len;  i++)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  /  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  /  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
480	[BUG]  [BUGGY]  sb.append('?').append(Character.toUpperCase(len));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(Character.toUpperCase(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(Character.toUpperCase(len));	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
481	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	add
482	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  final  int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [CE]  >  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  final  int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    final  int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  	non-compiled	[CE]  >  expected	85	None	add
483	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	add
484	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  ==  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  ==  len;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
485	[BUG]  [BUGGY]  for(int  i  =  0;  i  ==  len;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  ==  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  ==  len;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
486	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  6;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
487	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  6;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
488	[BUG]  [BUGGY]  sb.append('?').append(Character.toUpperCase(chars));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('?').append(Character.toUpperCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(Character.toUpperCase(chars));	  sb.append('?').append(len);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
489	[BUG]  [BUGGY]  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  >  expected	61	None	replace
490	[BUG]  [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  >  expected	61	None	replace
491	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  len;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
492	[BUG]  [BUGGY]  for(int  i  =  0;  len  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  len  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  len  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
493	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    Character    	non-compiled	[CE]  ';'  expected	93	None	replace
494	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  Len  +  1;  i++)  {  [CE]  cannot  find  symbol  Len  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  Len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  *  Len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int    i    =    0;    i    <    Len    +    1;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  Len	77	None	replace
495	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
496	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
497	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  len;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    len;    i    <    chars.length;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  len;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	98	None	add
498	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  8;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  8;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  8;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    2;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	69	None	replace
499	[BUG]  [BUGGY]  sb.append(s);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(s);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(s);	  sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
500	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    len);    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
501	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  len;  ++i)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  len;  ++i)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	100	None	add
502	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(chars,  0,  chars,  0,  chars.length);  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(chars,  0,  chars,  0,  chars.length);  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    ++i)    {    for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(chars,  0,  chars,  0,  chars.length);	  	non-compiled	[CE]  reached  end  of  file  while  parsing	100	None	add
503	[BUG]  [BUGGY]  int  i  =  1;  i  <  len;  i++)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  int  i  =  1;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	int  i  =  1;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  >  expected	37	None	replace
504	[BUG]  [BUGGY]  sb.append(s.toUpperCase());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(s.toUpperCase());  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(s.toUpperCase());	  sb.append(Character.toUpperCase(len));    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
505	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  '.class'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
506	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
507	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
508	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  for(int  i  =  0;  i  <  CHARs.length  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  for(int  i  =  0;  i  <  CHARs.length  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    +    1;    i++)    {    for(int  i  =  0;  i  <  CHARs.length  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	add
509	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len  +  6;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
510	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  6;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len  +  6;  i++)  {	  for(int    i    =    1;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	replace
511	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toString(chars));  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toString(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.toString(chars));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
512	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
513	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars));  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
514	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  sb.append('?');  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  sb.append('?');  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    sb.append('?');  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	add
515	[BUG]  [BUGGY]  sb.append('[').append(Character.toUpperCase(chars));  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(Character.toUpperCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(Character.toUpperCase(chars));	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
516	[BUG]  [BUGGY]  sb.append('[').append(Character.toLowerCase(chars));  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('[').append(Character.toLowerCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[').append(Character.toLowerCase(chars));	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
517	[BUG]  [BUGGY]  sb.append('/').append(Character.toUpperCase(chars));  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('/').append(Character.toUpperCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/').append(Character.toUpperCase(chars));	  sb.append('/');    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
518	[BUG]  [BUGGY]  sb.append('/').append(Character.toLowerCase(chars));  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append('/').append(Character.toLowerCase(chars));  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/').append(Character.toLowerCase(chars));	  sb.append('/');    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
519	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i!=  len;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
520	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  len;  ++i)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  len;  ++i)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i!=  len;  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
521	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  chars.length;  i  <  len  +  1;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1,  len  =  chars.length;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1,  len  =  chars.length;  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	13	None	replace
522	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
523	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
524	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
525	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  else  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  else  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  else  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  	non-compiled	[CE]  'else'  without  'if'	52	None	add
526	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character	  	non-compiled	[CE]  not  a  statement	52	None	add
527	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
528	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
529	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  String  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  String  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  String  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
530	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character	  	non-compiled	[CE]  not  a  statement	23	None	add
531	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  continue  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  continue  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    len;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  continue	  	non-compiled	[CE]  ';'  expected	23	None	add
532	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  for(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    1)    {    for(int  i  =  0;  i  <  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
533	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  ==  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  ==  chars.length;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
534	[BUG]  [BUGGY]  for(int  i  =  0;  i  ==  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  ==  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  ==  chars.length;  i++)  {	  for(int    i    =    0;    i!=    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
535	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  LEN  +  2;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  for(int  i  =  0;  i  <  LEN  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i++)    {    for(int  i  =  0;  i  <  LEN  +  2;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
536	[BUG]  [BUGGY]  For(int  i  =  len;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  len;  i  <  chars.length;  i++)  {	  For(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	45	None	replace
537	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  FOR(int  i  =  0;  i  <  len  +  6;  i++)  {  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  FOR(int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    FOR(int  i  =  0;  i  <  len  +  6;  i++)  {	  	non-compiled	[CE]  '.class'  expected	9	None	add
538	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    6;    i++)    {    for(int  i  =  0;  i  <  len  +  5;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
539	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  continue  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  continue  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  continue	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  ';'  expected	94	None	replace
540	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    continue    	non-compiled	[CE]  reached  end  of  file  while  parsing	94	None	replace
541	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append( ", ");  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append( ", ");	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
542	[BUG]  [BUGGY]  For(int  i  =  1,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  For(int  i  =  1,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  1,  len  =  chars.length;  i  <  len;  i++)  {	  For(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
543	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  }  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  len;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	92	None	replace
544	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(chars[i]!=  null)  {  }  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  if(chars[i]!=  null)  {  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  ++i)  {  if(chars[i]!=  null)  {  }	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	92	None	replace
545	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  Len  +  2;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  for(int  i  =  0;  i  <  Len  +  2;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    for(int  i  =  0;  i  <  Len  +  2;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	89	None	add
546	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    for(int  i  =  2;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	add
547	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  for(int  i  =  1;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    chars.length;    i++)    {    for(int  i  =  1;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];	  	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	add
548	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  *  5;  i++)  {	  for(int    i    =    0;    i    <    len    +    5;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
549	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  5;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  *  5;  i++)  {	  for(int    i    =    0;    i    <    len    +    5;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
550	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  LEN  *  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  for(int  i  =  0;  i  <  LEN  *  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    *    1;    i++)    {    for(int  i  =  0;  i  <  LEN  *  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
551	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  FOR(int  i  =  0;  i  <  len  +  5;  i++)  {  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  FOR(int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    5;    i++)    {    FOR(int  i  =  0;  i  <  len  +  5;  i++)  {	  	non-compiled	[CE]  '.class'  expected	7	None	add
552	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	42	None	replace
553	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	42	None	replace
554	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len  +  3;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    int    i    =    0;    i    <    len    +    1;    i++)    {    	non-compiled	[CE]  >  expected	42	None	replace
555	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=    null)    {    for(int    i    =    0;    i    <    chars.length;    i++)    {    }    final    char    c    =    chars[i];    if    (!Character.isISOControl(c))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	91	None	replace
556	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int    i    =    0;    i    <    Len;    i    +=    2)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
557	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
558	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i++)  {  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
559	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  length;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  length;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	48	None	replace
560	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  +=  1)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  +=  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  +=  1)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    1)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
561	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    4;    i++)    {    for(int  i  =  0;  i  <  len  +  3;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
562	[BUG]  [BUGGY]  if(chars  ==  null)  {  sb.append('?');  sb.append(chars[i]);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(chars  ==  null)  {  sb.append('?');  sb.append(chars[i]);  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(chars  ==  null)  {  sb.append('?');  sb.append(chars[i]);  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
563	[BUG]  [BUGGY]  if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	if(chars!=  null)  {  sb.append('?');  sb.append(chars[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append('?');    sb.append(chars[i]);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
564	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
565	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1);  i  <  len  +  1;  i++)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  for(int  i  =  1);  i  <  len  +  1;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len    +    1;    i++)    {    for(int  i  =  1);  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
566	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i++)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    final    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	67	None	replace
567	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [CE]  >  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    final    int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  >  expected	67	None	replace
568	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  Len;  i  -=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  for(int  i  =  0;  i  <  Len;  i  -=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    -=    2)    {    for(int  i  =  0;  i  <  Len;  i  -=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	add
569	[BUG]  [BUGGY]  for(int  i  =  10,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  10,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  10,  len  =  chars.length;  i  <  len;  i++)  {	  for(int    i    =    1,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	15	None	replace
570	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  }  final  char  c  =  chars[i];	  	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
571	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length,  i++)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  for(int  i  =  0;  i  <  chars.length,  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length    -    1;    i++)    {    for(int  i  =  0;  i  <  chars.length,  i++)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
572	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +  1)  {  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +  1)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +  1)  {	  for(int    i    =    0;    i    <    chars.length;    i    +=    2)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
573	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  2;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  *  2;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
574	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  2;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i  <  len  *  2;  i  +=  2)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  *  2;  i  +=  2)  {	  for(int    i    =    0;    i    <    len    +    2;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
575	[BUG]  [BUGGY]  sb.append(chars[i].toUpperCase());  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  sb.append(chars[i].toUpperCase());  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(chars[i].toUpperCase());	  sb.append(Character.toUpperCase(chars[i]));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
576	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i!=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i!=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
577	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();      [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [BUGGY]      final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i!=    chars.length;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  >=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
