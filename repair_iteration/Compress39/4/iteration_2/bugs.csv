bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  2;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  3;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  3;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  3;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  4;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  4;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  4;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  5;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  5;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  5;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
9	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  6;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  6;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  6;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
12	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	3	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >=  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  >=  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  >=  len;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	3	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1,  len  =  chars.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	3	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  For(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
18	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  2;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
22	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  2;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  2;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  -  len;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  2;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	5	1	replace
26	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  2;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    	compilable	  [FE]  ComparisonFailure  	5	1	replace
27	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  For(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  '.class'  expected	5	None	replace
28	[BUG]  [BUGGY]  sb.append('?');  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('?');  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?');	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  sb.append(chars[i]);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(chars[i]);  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(chars[i]);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	StringBuilder  sb  =  new  StringBuilder();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  sb.append('n');  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('n');  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('n');	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  sb.append('/');  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('/');  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('/');	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  sb.append(c);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(c);  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(c);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  sb.append('[');  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('[');  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('[');	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    for(int  i  =  1;  i  <  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
36	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  For(int  i  =  1;  i  <  len;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  For(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    For(int  i  =  1;  i  <  len;  i++)  {	  	non-compiled	[CE]  '.class'  expected	4	None	add
37	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  int  i  =  1;  i  <  len;  i++)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  int  i  =  1;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    int  i  =  1;  i  <  len;  i++)  {	  	non-compiled	[CE]  >  expected	4	None	add
38	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  >=  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  >=  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    for(int  i  =  1;  i  >=  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
39	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  len);  i++)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  len);  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    for(int  i  =  1;  i  <  len);  i++)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int  i  =  0;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  For(int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  For(int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    For(int  i  =  0;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	7	None	add
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    int  i  =  0;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	7	None	add
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  final  int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    final  int  i  =  0;  i  <  len  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	7	None	add
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  LEn  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  LEn  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int  i  =  0;  i  <  LEn  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
45	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  For(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	For(int  i  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    len.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	6	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int  i  =  0;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	add
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  For(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    2)    {    For(int  i  =  0;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  '.class'  expected	10	None	add
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    2)    {    int  i  =  0;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	10	None	add
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  for(int  i  =  0;  i  <  len);  i  +=  2)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  for(int  i  =  0;  i  <  len);  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int  i  =  0;  i  <  len);  i  +=  2)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len;  i  +=  1)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  1)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  1)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
55	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
56	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  -=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  -=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int  i  =  0;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  For(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    For(int  i  =  0;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  '.class'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  FOR(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    FOR(int  i  =  0;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    int  i  =  0;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  chars.length);  i++)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  chars.length);  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int  i  =  0;  i  <  chars.length);  i++)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  0;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  >  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  final  int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    final  int  i  =  0;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int  i  =  0;  i  <  chars.length;  i++)  {  }  for(int  i  =  0;  i  <  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  for(int  i  =  0;  i  >=  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    for(int  i  =  0;  i  >=  chars.length;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [CE]  >  expected  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  final  int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    2)    {    final  int  i  =  0;  i  <  len;  i  +=  2)  {	  	non-compiled	[CE]  >  expected	10	None	add
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  for(int  i  =  0;  i  <  Len;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len;    i    +=    2)    {    for(int  i  =  0;  i  <  Len;  i  +=  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	add
69	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  2;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len  +  2;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len  +  2;  i++)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	3	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  LAST_VALID_BLOCK.length;  i++)  {  [CE]  cannot  find  symbol  LAST_VALID_BLOCK  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  LAST_VALID_BLOCK.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  LAST_VALID_BLOCK.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  LAST_VALID_BLOCK	2	None	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i!=  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i!=  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i!=  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
73	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
75	[BUG]  [BUGGY]  sb.append(len);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(len);  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(len);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
76	[BUG]  [BUGGY]  sb.append('?').append(len);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('?').append(len);  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?').append(len);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  Len  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  Len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int  i  =  0;  i  <  Len  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  >=  len  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  >=  len  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int  i  =  0;  i  >=  len  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  len  +  2;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int  i  =  0;  i  <  len  +  2;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chars.length;  i++)  {  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  this.chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  this.chars.length;  i++)  {	  for(int    i    =    0;    i    <    len.length;    i++)    {    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	replace
81	[BUG]  [BUGGY]  for(int  len  =  0;  i  <  chars.length;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  len  =  0;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  len  =  0;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    len.length;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	6	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {  [CE]  >  expected  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  final  int  i  =  1;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    final  int  i  =  1;  i  <  len;  i++)  {	  	non-compiled	[CE]  >  expected	4	None	add
83	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  Len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  1;  i  <  Len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    for(int  i  =  1;  i  <  Len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i  +=  2)  {  [CE]  cannot  find  symbol  length  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  length;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  length;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i  +=  1)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  *  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  [FE]  ComparisonFailure  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  *  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  *  1;  i++)  {	  for(int    i    =    0;    i    <    len    +    1;    i++)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
89	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  2;  i  +=  2)  {	  for(int    i    =    0;    i    <    len;    i    +=    2)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character	  	non-compiled	[CE]  not  a  statement	1	None	add
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  continue  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  continue  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    chars.length;    i++)    {    if(chars[i]!=  null)  {  for(int  i  =  0;  i  <  chars.length;  i++)  {  }  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  continue	  	non-compiled	[CE]  ';'  expected	1	None	add
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  LEN  +  1;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  for(int  i  =  0;  i  <  LEN  +  1;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    0;    i    <    len    +    1;    i++)    {    for(int  i  =  0;  i  <  LEN  +  1;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
96	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    char[]  chars  =  s.toCharArray();  for(int  i  =  1;  i  <  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
97	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  len;  i++)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  for(int  i  =  2;  i  <  len;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int    i    =    1;    i    <    len;    i++)    {    for(int  i  =  2;  i  <  len;  i++)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  len;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
99	[BUG]  [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  len;  i  <  chars.length;  i++)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  len;  i  <  chars.length;  i++)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len;  ++i)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0;  i  <  len;  ++i)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  ++i)  {	  for(int    i    =    0;    i    <    chars.length;    i++)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
102	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(len));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(Character.toUpperCase(len));  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(len));	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
103	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(len));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(Character.toLowerCase(len));  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toLowerCase(len));	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
104	[BUG]  [BUGGY]  sb.append('?');  sb.append(chars[i]);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append('?');  sb.append(chars[i]);  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append('?');  sb.append(chars[i]);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
105	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(chars[i]));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  sb.append(Character.toUpperCase(chars[i]));  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	sb.append(Character.toUpperCase(chars[i]));	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  ++i)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();    [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  ++i)  {  [BUGGY]    final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  ++i)  {	  for(int    i    =    0,    len    =    chars.length;    i    <    len;    i++)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	3	None	replace
