bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  chars.length;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ComparisonFailure  	7	1	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0;  i  <  chars.length;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  chars.length;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ComparisonFailure  	7	1	replace
3	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  [CE]  variable  len  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0,  len  =  chars.length;  i  <  len;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	non-compiled	[CE]  variable  len  is  already  defined  in  method  sanitize(String)	7	None	replace
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  1;  i  <  len;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ComparisonFailure  	7	1	replace
5	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  1;  i  <  len;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  1;  i  <  len;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ComparisonFailure  	7	1	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len.length;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0;  i  <  len.length;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len.length;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	non-compiled	[CE]  int  cannot  be  dereferenced	7	None	replace
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len  +  1;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0;  i  <  len  +  1;  i++)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len  +  1;  i++)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	replace
9	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]    [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	  	for  (int  i  =  0;  i  <  len;  i++)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	for(int  i  =  0;  i  <  len;  i  +=  2)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ComparisonFailure  	7	1	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]  for(int  i  =  0;  i  <  len;  i  +=  2)  {  [BUGGY]  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	for(int  i  =  0;  i  <  len;  i  +=  2)  {	for  (int  i  =  0;  i  <  len;  i++)  {  	compilable	  [FE]  ComparisonFailure  	7	1	replace
