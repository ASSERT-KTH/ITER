bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c))  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isISOControl(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
2	[BUG]  [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c,  chars[i]))  {  [CE]  no  suitable  method  found  for  of(char,char)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c,  chars[i]))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c,  chars[i]))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  of(char,char)	11	None	replace
3	[BUG]  [BUGGY]  if(!Character.isUnicodeControl(c)&&  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeControl(c)&&  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeControl(c)&&  Character.UnicodeBlock.of(c))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
4	[BUG]  [BUGGY]  if(!Character.isStatic(c)&&  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isStatic(c)&&  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isStatic(c)&&  Character.UnicodeBlock.of(c))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
5	[BUG]  [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c,  s))  {  [CE]  no  suitable  method  found  for  of(char,String)  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c,  s))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c,  s))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  of(char,String)	11	None	replace
6	[BUG]  [BUGGY]  if  (!Character.isUnicode(c,  c))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c,  c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c,  c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
7	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)||  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)||  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)||  Character.UnicodeBlock.of(c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
8	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  [CE]  ')'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
9	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)&&!chars[i].equals(c))  {  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)&&!chars[i].equals(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)&&!chars[i].equals(c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
10	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)||!chars[i].equals(c))  {  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)||!chars[i].equals(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)||!chars[i].equals(c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
11	[BUG]  [BUGGY]  if  (!Character.isUnicodeBlock(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeBlock(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeBlock(c)&&  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
12	[BUG]  [BUGGY]  if  (!Character.isUnicodeBlock(c)||  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeBlock(c)||  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeBlock(c)||  Character.UnicodeBlock.of(c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  if  (!Character.UnicodeBlock.isUnicodeBlock(c))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.UnicodeBlock.isUnicodeBlock(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.UnicodeBlock.isUnicodeBlock(c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
14	[BUG]  [BUGGY]  if  (!Character.isUnicodeBlock(c,  c))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeBlock(c,  c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeBlock(c,  c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
15	[BUG]  [BUGGY]  if  (!Character.isUnicodeBlock(c)||!Character.isUnicodeBlock(c))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeBlock(c)||!Character.isUnicodeBlock(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeBlock(c)||!Character.isUnicodeBlock(c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
16	[BUG]  [BUGGY]  if  (!Character.isUnicodeBlock(c)&&!chars[i].equals(c))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeBlock(c)&&!chars[i].equals(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeBlock(c)&&!chars[i].equals(c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
17	[BUG]  [BUGGY]  if(c!=  '?')  {  if(c!=  '?')  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?')  {  if(c!=  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    '?')    {    if(c!=  '?')  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
18	[BUG]  [BUGGY]  if(c!=  '?')  {  if(c  ==  '?')  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?')  {  if(c  ==  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    '?')    {    if(c  ==  '?')  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
19	[BUG]  [BUGGY]  if(c!=  '?')  {  if(c  >=  '?')  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?')  {  if(c  >=  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    '?')    {    if(c  >=  '?')  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
20	[BUG]  [BUGGY]  if(c!=  '?')  {  if(c  >>  '?')  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?')  {  if(c  >>  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    '?')    {    if(c  >>  '?')  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
21	[BUG]  [BUGGY]  if(c!=  '?')  {  if(c  [Delete]  '?')  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?')  {  if(c  [Delete]  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    '?')    {    if(c  [Delete]  '?')  {	  	non-compiled	[CE]  ')'  expected	9	None	add
22	[BUG]  [BUGGY]  if(c!=  '?')  {  if(c  [BUGGY]  '?')  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?')  {  if(c  [BUGGY]  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    '?')    {    if(c  [BUGGY]  '?')  {	  	non-compiled	[CE]  ')'  expected	9	None	add
23	[BUG]  [BUGGY]  if(c!=  '?')  {  If(c!=  '?')  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?')  {  If(c!=  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    '?')    {    If(c!=  '?')  {	  	non-compiled	[CE]  ';'  expected	9	None	add
24	[BUG]  [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c,  chars[i]))  {  [CE]  no  suitable  method  found  for  of(char,char)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c,  chars[i]))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c,  chars[i]))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  of(char,char)	4	None	replace
25	[BUG]  [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(chars[i]))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(chars[i]))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(chars[i]))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
26	[BUG]  [BUGGY]  if  (!Character.isUnicodeControl(c)||  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeControl(c)||  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeControl(c)||  Character.UnicodeBlock.of(c))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
27	[BUG]  [BUGGY]  if  (!Character.isStatic(c)||  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isStatic(c)||  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isStatic(c)||  Character.UnicodeBlock.of(c))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
28	[BUG]  [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c)||!chars[i].equals(c))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c)||!chars[i].equals(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c)||!chars[i].equals(c))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
29	[BUG]  [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c),  s)  {  [CE]  ')'  expected  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c),  s)  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(c),  s)  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  ')'  expected	4	None	replace
30	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c!=  'n'  &&!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c!=  'n'  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    'n'    &&!Character.isISOControl(c))    {    if(c!=  'n'  &&!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
31	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  >=  'n'  &&!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  >=  'n'  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    'n'    &&!Character.isISOControl(c))    {    if(c  >=  'n'  &&!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
32	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  ==  'n'  &&!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  ==  'n'  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    'n'    &&!Character.isISOControl(c))    {    if(c  ==  'n'  &&!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
33	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  >>  'n'  &&!Character.isISOControl(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  >>  'n'  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    'n'    &&!Character.isISOControl(c))    {    if(c  >>  'n'  &&!Character.isISOControl(c))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
34	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  If(c!=  'n'  &&!Character.isISOControl(c))  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  If(c!=  'n'  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    'n'    &&!Character.isISOControl(c))    {    If(c!=  'n'  &&!Character.isISOControl(c))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
35	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  [Delete]  'n'  &&!Character.isISOControl(c))  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  [Delete]  'n'  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    'n'    &&!Character.isISOControl(c))    {    if(c  [Delete]  'n'  &&!Character.isISOControl(c))  {	  	non-compiled	[CE]  ')'  expected	7	None	add
36	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  [BUGGY]  'n'  &&!Character.isISOControl(c))  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isISOControl(c))  {  if(c  [BUGGY]  'n'  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=    'n'    &&!Character.isISOControl(c))    {    if(c  [BUGGY]  'n'  &&!Character.isISOControl(c))  {	  	non-compiled	[CE]  ')'  expected	7	None	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c  ==  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c  ==  '?')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
38	[BUG]  [BUGGY]  if(c  ==  '?')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c  ==  '?')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c  ==  '?')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  ||  c  ==  '+')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  '?'  ||  c  ==  '+')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
40	[BUG]  [BUGGY]  if(c!=  '?'  ||  c  ==  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  ||  c  ==  '+')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '?'  ||  c  ==  '+')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
41	[BUG]  [BUGGY]  if(c!=  '')  {  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '')  {	  if(c!=    '?')    {    	non-compiled	[CE]  empty  character  literal	10	None	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '.')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  '.')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
43	[BUG]  [BUGGY]  if(c!=  '.')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '.')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '.')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  'n'  ||  c  ==  'r')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
45	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  ||  c  ==  'r')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  ':')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  ':')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
47	[BUG]  [BUGGY]  if(c!=  ':')  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  ':')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  ':')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
48	[BUG]  [BUGGY]  sb.append(c);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append(c);  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append(c);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	StringBuilder  sb  =  new  StringBuilder();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  sb.append('?');  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append('?');  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append('?');	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  sb.append(c);  continue;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append(c);  continue;  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append(c);  continue;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  StringBuffer  sb  =  new  StringBuffer();  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	StringBuffer  sb  =  new  StringBuffer();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  sb.append('n');  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append('n');  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append('n');	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
54	[BUG]  [BUGGY]  sb.append('[');  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append('[');  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append('[');	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  if(!Character.isUnicodeBlock(c)&&!Character.isISOControl(c))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeBlock(c)&&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeBlock(c)&&!Character.isISOControl(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
56	[BUG]  [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isSynthetic(c))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isSynthetic(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeBlock(c)||!Character.isSynthetic(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
57	[BUG]  [BUGGY]  if(!Character.isISOControl(c)||!Character.isUnicodeBlock(c))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isISOControl(c)||!Character.isUnicodeBlock(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isISOControl(c)||!Character.isUnicodeBlock(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
58	[BUG]  [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isVar(c))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isVar(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeBlock(c)||!Character.isVar(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
59	[BUG]  [BUGGY]  if(!Cycle.isUnicodeBlock(c)||!Character.isISOControl(c))  {  [CE]  cannot  find  symbol  Cycle  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Cycle.isUnicodeBlock(c)||!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Cycle.isUnicodeBlock(c)||!Character.isISOControl(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  Cycle	3	None	replace
60	[BUG]  [BUGGY]  if(c!=  null  &&!Character.isISOControl(c))  {  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  null  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  null  &&!Character.isISOControl(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	2	None	replace
61	[BUG]  [BUGGY]  if(c!=  null  &&!Character.isUnicodeBlock(c))  {  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  null  &&!Character.isUnicodeBlock(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  null  &&!Character.isUnicodeBlock(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	2	None	replace
62	[BUG]  [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isUpperCase(c))  {  [CE]  cannot  find  symbol  UnicodeBlock  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isUpperCase(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(Character.UnicodeBlock!=  null  &&!Character.isUpperCase(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  UnicodeBlock	2	None	replace
63	[BUG]  [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isSynthetic(c))  {  [CE]  cannot  find  symbol  UnicodeBlock  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isSynthetic(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(Character.UnicodeBlock!=  null  &&!Character.isSynthetic(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  UnicodeBlock	2	None	replace
64	[BUG]  [BUGGY]  if(Cycle.UnicodeBlock!=  null  &&!Character.isISOControl(c))  {  [CE]  cannot  find  symbol  Cycle  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(Cycle.UnicodeBlock!=  null  &&!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(Cycle.UnicodeBlock!=  null  &&!Character.isISOControl(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  Cycle	2	None	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  'n'  ||!Character.isISOControl(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
66	[BUG]  [BUGGY]  if(c!=  'n'  ||!Character.isISOControl(c))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||!Character.isISOControl(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  ||!Character.isISOControl(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
67	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isUnicodeBlock(c))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isUnicodeBlock(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  &&!Character.isUnicodeBlock(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isUpperCase(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  'n'  &&!Character.isUpperCase(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
69	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isUpperCase(c))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isUpperCase(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  &&!Character.isUpperCase(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isDigit(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  'n'  &&!Character.isDigit(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
71	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isDigit(c))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isDigit(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  &&!Character.isDigit(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
72	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isSynthetic(c))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isSynthetic(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  &&!Character.isSynthetic(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||  c!=  '.')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  'n'  ||  c!=  '.')  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
74	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  '.')  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||  c!=  '.')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  ||  c!=  '.')  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
75	[BUG]  [BUGGY]  sb.append(':');  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append(':');  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append(':');	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  if(!Character.isDefined(c)&&  Character.UnicodeBlock.of(c))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isDefined(c)&&  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isDefined(c)&&  Character.UnicodeBlock.of(c))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	11	None	replace
77	[BUG]  [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c),  sb)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c),  sb)  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(c),  sb)  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
78	[BUG]  [BUGGY]  if  (!Character.UnicodeBlock.isUnicode(c))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.UnicodeBlock.isUnicode(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.UnicodeBlock.isUnicode(c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
79	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)||  Character.UnicodeBlock!=  null)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)||  Character.UnicodeBlock!=  null)  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)||  Character.UnicodeBlock!=  null)  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
80	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)&&  Character.UnicodeBlock!=  null)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)&&  Character.UnicodeBlock!=  null)  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)&&  Character.UnicodeBlock!=  null)  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
81	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)||!Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)||!Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)||!Character.UnicodeBlock.of(c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
82	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)&&  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)&&  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)&&  Character.UnicodeBlock.of(c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
83	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isUnicodeChar(c))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isUnicodeChar(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  &&!Character.isUnicodeChar(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
84	[BUG]  [BUGGY]  if(c!=  ''  &&  c!=  '')  {  [CE]  empty  character  literal  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  ''  &&  c!=  '')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  ''  &&  c!=  '')  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  empty  character  literal	8	None	replace
85	[BUG]  [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isISOControl(c)||  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  UnicodeBlock  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isISOControl(c)||  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(Character.UnicodeBlock!=  null  &&!Character.isISOControl(c)||  Character.UnicodeBlock.of(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  UnicodeBlock	2	None	replace
86	[BUG]  [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isDefined(c))  {  [CE]  cannot  find  symbol  UnicodeBlock  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isDefined(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(Character.UnicodeBlock!=  null  &&!Character.isDefined(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  UnicodeBlock	2	None	replace
87	[BUG]  [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isWhitespace(c))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isWhitespace(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeBlock(c)||!Character.isWhitespace(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
88	[BUG]  [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isLetter(c))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isLetter(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeBlock(c)||!Character.isLetter(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  'n'  ||  c!=  'r')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
90	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  ||  c!=  'r')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '#')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  '#')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
92	[BUG]  [BUGGY]  if(c!=  '#')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '#')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '#')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
93	[BUG]  [BUGGY]  if  (!Character.isUnicodeBlock(c)&&  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeBlock(c)&&  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeBlock(c)&&  Character.UnicodeBlock.of(c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
94	[BUG]  [BUGGY]  if  (!Character.isUnicodeBlock(c)||!Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicodeBlock(c)||!Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicodeBlock(c)||!Character.UnicodeBlock.of(c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
95	[BUG]  [BUGGY]  if  (!Cycle.isUnicodeBlock(c))  {  [CE]  cannot  find  symbol  Cycle  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Cycle.isUnicodeBlock(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Cycle.isUnicodeBlock(c))  {	  if    (!Character.isUnicodeBlock(c))    {    	non-compiled	[CE]  cannot  find  symbol  Cycle	1	None	replace
96	[BUG]  [BUGGY]  if  (!Character.isDefined(c)||  Character.UnicodeBlock.of(c))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isDefined(c)||  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isDefined(c)||  Character.UnicodeBlock.of(c))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
97	[BUG]  [BUGGY]  if  (!Character.isControl(c)||  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isControl(c)||  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isControl(c)||  Character.UnicodeBlock.of(c))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
98	[BUG]  [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(char))  {  [CE]  '.class'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(char))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isISOControl(c)||  Character.UnicodeBlock.of(char))  {	  if    (!Character.isISOControl(c)||    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  '.class'  expected	4	None	replace
99	[BUG]  [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isUnicodeBlock(c))  {  [CE]  cannot  find  symbol  UnicodeBlock  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isUnicodeBlock(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(Character.UnicodeBlock!=  null  &&!Character.isUnicodeBlock(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  UnicodeBlock	2	None	replace
100	[BUG]  [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isWhitespace(c))  {  [CE]  cannot  find  symbol  UnicodeBlock  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(Character.UnicodeBlock!=  null  &&!Character.isWhitespace(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(Character.UnicodeBlock!=  null  &&!Character.isWhitespace(c))  {	  if(Character.UnicodeBlock!=    null    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol  UnicodeBlock	2	None	replace
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  ||  c!=  '+')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  '?'  ||  c!=  '+')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
102	[BUG]  [BUGGY]  if(c!=  '?'  ||  c!=  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  ||  c!=  '+')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '?'  ||  c!=  '+')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  &&  c!=  '+')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  '?'  &&  c!=  '+')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
104	[BUG]  [BUGGY]  if(c!=  '?'  &&  c!=  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  &&  c!=  '+')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '?'  &&  c!=  '+')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  &&  c!=  '.')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  '?'  &&  c!=  '.')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
106	[BUG]  [BUGGY]  if(c!=  '?'  &&  c!=  '.')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  &&  c!=  '.')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '?'  &&  c!=  '.')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  ||  c  ==  ':')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  '?'  ||  c  ==  ':')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
108	[BUG]  [BUGGY]  if(c!=  '?'  ||  c  ==  ':')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  '?'  ||  c  ==  ':')  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  '?'  ||  c  ==  ':')  {	  if(c!=    '?')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
109	[BUG]  [BUGGY]  if  (!Character.isUnicode(c)||!Character.isStatic(c))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if  (!Character.isUnicode(c)||!Character.isStatic(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if  (!Character.isUnicode(c)||!Character.isStatic(c))  {	  if    (!Character.isUnicode(c))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
110	[BUG]  [BUGGY]  if(!Character.isControl(c)&&  Character.UnicodeBlock.of(c))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isControl(c)&&  Character.UnicodeBlock.of(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isControl(c)&&  Character.UnicodeBlock.of(c))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
111	[BUG]  [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(char))  {  [CE]  '.class'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(char))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isISOControl(c)&&  Character.UnicodeBlock.of(char))  {	  if(!Character.isISOControl(c)&&    Character.UnicodeBlock.of(c))    {    	non-compiled	[CE]  '.class'  expected	11	None	replace
112	[BUG]  [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isDefined(c))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isDefined(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeBlock(c)||!Character.isDefined(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
113	[BUG]  [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isDigit(c))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(!Character.isUnicodeBlock(c)||!Character.isDigit(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(!Character.isUnicodeBlock(c)||!Character.isDigit(c))  {	  if(!Character.isUnicodeBlock(c)||!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isWhitespace(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	if(c!=  'n'  &&!Character.isWhitespace(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
115	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isWhitespace(c))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isWhitespace(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  &&!Character.isWhitespace(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
116	[BUG]  [BUGGY]  if(c!=  'n'  &&!Character.isUnicode(c))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  if(c!=  'n'  &&!Character.isUnicode(c))  {  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	if(c!=  'n'  &&!Character.isUnicode(c))  {	  if(c!=    'n'    &&!Character.isISOControl(c))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
117	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append(Character.toUpperCase(c));  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append(Character.toUpperCase(c));	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
118	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append(Character.toLowerCase(c));  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append(Character.toLowerCase(c));	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
119	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  char  c  =  s.charAt(i);  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	char  c  =  s.charAt(i);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
120	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c));  continue;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];    [BUGGY]  sb.append(Character.toUpperCase(c));  continue;  [BUGGY]    Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	sb.append(Character.toUpperCase(c));  continue;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
