bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	6	None	add
2	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  Final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  Final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    Final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));	  	non-compiled	[CE]  ';'  expected	6	None	add
3	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	6	None	add
4	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	6	None	add
5	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));;  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));;  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));;	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	6	None	add
6	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  continue;  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  continue;  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  continue;	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	6	None	add
7	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars,  len));  [CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars,  len));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;	16	None	replace
8	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.toHexString(Long.toHexString(chars));  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.toHexString(Long.toHexString(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(String.toHexString(Long.toHexString(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  ')'  expected	16	None	replace
9	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(long.toHexString(chars));  [CE]  class  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(long.toHexString(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(long.toHexString(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  class  expected	16	None	replace
10	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(length.toHexString(chars));  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(length.toHexString(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(length.toHexString(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
11	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Long.toHexString(Long.toHexString(chars));  [CE]  ')'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Long.toHexString(Long.toHexString(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Long.toHexString(Long.toHexString(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  ')'  expected	16	None	replace
12	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Long.toHexString(Long.class));  [CE]  ')'  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Long.toHexString(Long.class));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Long.toHexString(Long.class));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  ')'  expected	16	None	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  2);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  2);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
14	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  2);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  2);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  3);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  3);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
16	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  3);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  3);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  3);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  4);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  4);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
18	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  4);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  4);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  4);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  1);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
20	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  1);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(len  +  1);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
22	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len  +  1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(len  +  1);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
23	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars,  len));  [CE]  no  suitable  method  found  for  toUpperCase(char[],int)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars,  len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char[],int)	3	None	replace
24	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(s));  [CE]  no  suitable  method  found  for  toUpperCase(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(s));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(s));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(String)	3	None	replace
25	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.toUpperCase(chars));  [CE]  no  suitable  method  found  for  toUpperCase(char[])  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.toUpperCase(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.toUpperCase(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char[])	3	None	replace
26	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(s,  chars));  [CE]  no  suitable  method  found  for  toUpperCase(String,char[])  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(s,  chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(s,  chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(String,char[])	3	None	replace
27	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars),  s);  [CE]  no  suitable  method  found  for  toUpperCase(char[])  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars),  s);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars),  s);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char[])	3	None	replace
28	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  Character.toUpperCase(chars));  [CE]  no  suitable  method  found  for  toUpperCase(char[])  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  Character.toUpperCase(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s,  Character.toUpperCase(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char[])	3	None	replace
29	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toUpperCase(chars));  [CE]  no  suitable  method  found  for  toUpperCase(char[])  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toUpperCase(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s.toUpperCase(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char[])	3	None	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.length());	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
31	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length());	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
33	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  len));  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
34	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [CE]  no  suitable  constructor  found  for  StringBuilder(char[])  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toCharArray());	      	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(char[])	12	None	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
36	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [FE]  ComparisonFailure  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.length()  +  len);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
38	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  len);  [FE]  ComparisonFailure  [FE]                              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  len);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.toString());	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
40	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [FE]  ComparisonFailure  [FE]                                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString());	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.charAt(0));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
42	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  [FE]  ComparisonFailure  [FE]                                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.charAt(0));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
43	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.length);  [CE]  cannot  find  symbol  length  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s.length);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length);    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  len);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
45	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  len);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  len);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
46	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars.length));  [CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(chars.length);    	non-compiled	[CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;	2	None	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(32);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(32);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
48	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(32);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(32);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(32);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(256);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(256);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
50	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(256);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(256);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(256);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(128);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(128);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
52	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(128);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(128);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(128);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(16);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(16);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
54	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(16);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(16);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(16);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(40);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(40);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
56	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(40);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(40);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(40);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
57	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
58	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  StringBuilder  sb  =  new  StringBuilder(100);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  StringBuilder  sb  =  new  StringBuilder(100);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    StringBuilder  sb  =  new  StringBuilder(100);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
59	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  Final  StringBuilder  sb  =  new  StringBuilder(100);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  Final  StringBuilder  sb  =  new  StringBuilder(100);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    Final  StringBuilder  sb  =  new  StringBuilder(100);	  	non-compiled	[CE]  ';'  expected	20	None	add
60	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  static  final  StringBuilder  sb  =  new  StringBuilder(100);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  static  final  StringBuilder  sb  =  new  StringBuilder(100);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    static  final  StringBuilder  sb  =  new  StringBuilder(100);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
61	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100));  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100));	  	non-compiled	[CE]  ';'  expected	20	None	add
62	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(1000);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(1000);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(1000);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
63	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
64	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  Final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  Final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    Final  StringBuilder  sb  =  new  StringBuilder(chars.length);	  	non-compiled	[CE]  ';'  expected	1	None	add
65	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  StringBuilder  sb  =  new  StringBuilder(chars.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  StringBuilder  sb  =  new  StringBuilder(chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    StringBuilder  sb  =  new  StringBuilder(chars.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
66	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length;  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length;  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length;	  	non-compiled	[CE]  ')'  expected	1	None	add
67	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  static  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  static  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    static  final  StringBuilder  sb  =  new  StringBuilder(chars.length);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
68	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  }  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
69	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  continue;  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  continue;  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  continue;	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
70	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  chars.length);  [CE]  no  suitable  constructor  found  for  StringBuilder(String,int)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s,  chars.length);	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(String,int)	15	None	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(s);	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	compilable	  [FE]  ComparisonFailure  	15	1	replace
72	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s);	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	compilable	  [FE]  ComparisonFailure  	15	1	replace
73	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  len);  [CE]  no  suitable  constructor  found  for  StringBuilder(String,int)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s,  len);	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(String,int)	15	None	replace
74	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  chars);  [CE]  no  suitable  constructor  found  for  StringBuilder(String,char[])  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  chars);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s,  chars);	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(String,char[])	15	None	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.substring(len,  chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(s.substring(len,  chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	compilable	  [FE]  ComparisonFailure  	15	1	replace
76	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.substring(len,  chars.length));  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.substring(len,  chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s.substring(len,  chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	compilable	  [FE]  ComparisonFailure  	15	1	replace
77	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [CE]  no  suitable  constructor  found  for  StringBuilder(char[])  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(char[])	15	None	replace
78	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(64);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(64);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    final  StringBuilder  sb  =  new  StringBuilder(64);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	8	None	add
79	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  Final  StringBuilder  sb  =  new  StringBuilder(64);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  Final  StringBuilder  sb  =  new  StringBuilder(64);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    Final  StringBuilder  sb  =  new  StringBuilder(64);	  	non-compiled	[CE]  ';'  expected	8	None	add
80	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  StringBuilder  sb  =  new  StringBuilder(64);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  StringBuilder  sb  =  new  StringBuilder(64);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    StringBuilder  sb  =  new  StringBuilder(64);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	8	None	add
81	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(66);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(66);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    final  StringBuilder  sb  =  new  StringBuilder(66);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	8	None	add
82	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(32);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(32);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    final  StringBuilder  sb  =  new  StringBuilder(32);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	8	None	add
83	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(65);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(65);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    final  StringBuilder  sb  =  new  StringBuilder(65);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	8	None	add
84	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
85	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  0,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  0,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  0,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
86	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  chars,  0,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  chars,  0,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  chars,  0,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
87	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0],  chars[1]);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0],  chars[1]);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0],  chars[1]);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
88	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UnicodeBlock.of(chars[i]);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UnicodeBlock.of(chars[i]);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UnicodeBlock.of(chars[i]);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
89	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[i]);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[i]);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[i]);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
90	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.isISOControl(c);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.isISOControl(c);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.isISOControl(c);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
91	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UnicodeBlock.of(c);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UnicodeBlock.of(c);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UnicodeBlock.of(c);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
92	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(s));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(s));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(s));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
93	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(chars,  len));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(chars,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(chars,  len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
94	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.EXPR_RESULT));  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.EXPR_RESULT));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.EXPR_RESULT));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	19	None	replace
95	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	compilable	  [FE]  ComparisonFailure  	19	1	replace
96	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(chars));  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	compilable	  [FE]  ComparisonFailure  	19	1	replace
97	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT));  [CE]  cannot  find  symbol  DEFAULT  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	19	None	replace
98	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SIGNATURE));  [CE]  cannot  find  symbol  DEFAULT_SIGNATURE  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SIGNATURE));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SIGNATURE));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SIGNATURE	19	None	replace
99	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars,  len));  [CE]  no  suitable  method  found  for  toLowerCase(char[],int)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars,  len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char[],int)	4	None	replace
100	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.toLowerCase(chars));  [CE]  no  suitable  method  found  for  toLowerCase(char[])  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.toLowerCase(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.toLowerCase(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char[])	4	None	replace
101	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0],  chars[1]));  [CE]  no  suitable  method  found  for  toLowerCase(char,char)  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0],  chars[1]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0],  chars[1]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char,char)	4	None	replace
102	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars),  s);  [CE]  no  suitable  method  found  for  toLowerCase(char[])  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars),  s);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars),  s);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char[])	4	None	replace
103	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Standard.toLowerCase(chars));  [CE]  cannot  find  symbol  Standard  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Standard.toLowerCase(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Standard.toLowerCase(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  cannot  find  symbol  Standard	4	None	replace
104	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(chars));  [CE]  no  suitable  method  found  for  toLowerCase(char[])  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char[])	4	None	replace
105	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(s));  [CE]  no  suitable  method  found  for  toLowerCase(String)  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(s));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(s));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(String)	4	None	replace
106	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	17	None	add
107	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  Final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  Final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    Final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));	  	non-compiled	[CE]  ';'  expected	17	None	add
108	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	17	None	add
109	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.ToUpperCase(len));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.ToUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    final  StringBuilder  sb  =  new  StringBuilder(Character.ToUpperCase(len));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	17	None	add
110	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(character.toUpperCase(len));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(character.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    final  StringBuilder  sb  =  new  StringBuilder(character.toUpperCase(len));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	17	None	add
111	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  sb  =  new  StringBuilder(Character.toUpperCase(len));  [CE]  cannot  assign  a  value  to  final  variable  sb  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  sb  =  new  StringBuilder(Character.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    sb  =  new  StringBuilder(Character.toUpperCase(len));	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sb	17	None	add
112	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.UTF8);  [CE]  cannot  find  symbol  UTF8  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.UTF8);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars,  Character.UTF8);	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	non-compiled	[CE]  cannot  find  symbol  UTF8	5	None	replace
113	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Std.UTF8);  [CE]  cannot  find  symbol  Std  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Std.UTF8);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Std.UTF8);	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	non-compiled	[CE]  cannot  find  symbol  Std	5	None	replace
114	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.UTF8)+  1;  [CE]  cannot  find  symbol  UTF8  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.UTF8)+  1;  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.UTF8)+  1;	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	non-compiled	[CE]  cannot  find  symbol  UTF8	5	None	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));	  final    StringBuilder    sb    =    new    StringBuilder(len);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
116	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));	  final    StringBuilder    sb    =    new    StringBuilder(len);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
117	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0],  len));  [CE]  no  suitable  method  found  for  toUpperCase(char,int)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0],  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0],  len));	  final    StringBuilder    sb    =    new    StringBuilder(len);    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char,int)	14	None	replace
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0]));	  final    StringBuilder    sb    =    new    StringBuilder(len);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
119	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0]));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0]));	  final    StringBuilder    sb    =    new    StringBuilder(len);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
120	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100,  len);  [CE]  no  suitable  constructor  found  for  StringBuilder(int,int)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(100,  len);	  final    StringBuilder    sb    =    new    StringBuilder(100);    	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(int,int)	21	None	replace
121	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
122	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  }  else  {  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  }  else  {  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  }  else  {  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
123	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  0,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  0,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  0,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
124	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
125	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
126	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  Final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  Final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    Final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);	  	non-compiled	[CE]  ';'  expected	10	None	add
127	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  this.c  =  Character.UnicodeBlock.of(c);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  this.c  =  Character.UnicodeBlock.of(c);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  this.c  =  Character.UnicodeBlock.of(c);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
128	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
129	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars.length));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len  +  1));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len  +  1));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
131	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len  +  1));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len  +  1));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len  +  1));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
132	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[len]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[len]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
133	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[len]));  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[len]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[len]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
134	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
135	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars.length));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len)+  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len)+  1);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
137	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len)+  1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len)+  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len)+  1);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    	compilable	  [FE]  ComparisonFailure  	18	1	replace
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	compilable	  [FE]  ComparisonFailure  	7	1	replace
139	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[1]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	compilable	  [FE]  ComparisonFailure  	7	1	replace
140	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0],  len));  [CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0],  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0],  len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	non-compiled	[CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;	7	None	replace
141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0])+  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0])+  1);	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	compilable	  [FE]  ComparisonFailure  	7	1	replace
142	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0])+  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0])+  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0])+  1);	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	compilable	  [FE]  ComparisonFailure  	7	1	replace
143	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]  +  1));  [CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]  +  1));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]  +  1));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	non-compiled	[CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;	7	None	replace
144	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars,  len));  [CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars,  len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	non-compiled	[CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;	7	None	replace
145	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]),  s);  [CE]  no  suitable  constructor  found  for  StringBuilder(Character,String)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]),  s);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]),  s);	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(Character,String)	7	None	replace
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	compilable	  [FE]  ComparisonFailure  	7	1	replace
147	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0]));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[0]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	compilable	  [FE]  ComparisonFailure  	7	1	replace
148	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0],  chars.length));  [CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0],  chars.length));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0],  chars.length));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	non-compiled	[CE]  method  valueOf  in  class  Character  cannot  be  applied  to  given  types;	7	None	replace
149	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[0],  chars[1]));  [CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[0],  chars[1]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[0],  chars[1]));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;	16	None	replace
150	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars),  len);  [CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars),  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars),  len);	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;	16	None	replace
151	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(68);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(68);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    final  StringBuilder  sb  =  new  StringBuilder(68);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	8	None	add
152	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toUpperCase(len));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toUpperCase(len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
153	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toLowerCase(chars));  [CE]  no  suitable  method  found  for  toLowerCase(char[])  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toLowerCase(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s.toLowerCase(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char[])	4	None	replace
154	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars),  len);  [CE]  no  suitable  method  found  for  toLowerCase(char[])  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars),  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars),  len);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char[])	4	None	replace
155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toString());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(s.toString());	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	compilable	  [FE]  ComparisonFailure  	15	1	replace
156	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toString());  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(s.toString());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(s.toString());	  final    StringBuilder    sb    =    new    StringBuilder(chars);    	compilable	  [FE]  ComparisonFailure  	15	1	replace
157	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  sb.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  sb.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  sb.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
158	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(Character.UnicodeBlock.length  +  1);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(Character.UnicodeBlock.length  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(Character.UnicodeBlock.length  +  1);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
159	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  s.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  s.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  0,  s.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
160	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  1,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  1,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  sb,  1,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
161	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	compilable	  [FE]  ComparisonFailure  	5	1	replace
162	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(len));  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(String.valueOf(len));	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	compilable	  [FE]  ComparisonFailure  	5	1	replace
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	compilable	  [FE]  ComparisonFailure  	5	1	replace
164	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(chars));  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	compilable	  [FE]  ComparisonFailure  	5	1	replace
165	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
166	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  sb.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  sb.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  sb.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
167	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
168	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  s.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  s.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  0,  s.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
169	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  sb.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  sb.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  sb.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
170	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[2]));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[2]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[2]));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	6	None	add
171	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(character.valueOf(chars[0]));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.valueOf(chars[0]));  final  StringBuilder  sb  =  new  StringBuilder(character.valueOf(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    final  StringBuilder  sb  =  new  StringBuilder(character.valueOf(chars[0]));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	6	None	add
172	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(CHARacter.toUpperCase(len));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(CHARacter.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    final  StringBuilder  sb  =  new  StringBuilder(CHARacter.toUpperCase(len));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	17	None	add
173	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append('?');  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append('?');  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).append('?');	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
174	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).toString();  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).toString();  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).toString();	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
175	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).setLength(0);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).setLength(0);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).setLength(0);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
176	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(60);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(60);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
177	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(60);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(60);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(60);	  final    StringBuilder    sb    =    new    StringBuilder(64);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
178	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  0,  sb.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  0,  sb.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  0,  sb.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
179	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0].charValue());  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0].charValue());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0].charValue());	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
180	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UpperCase(chars[0],  chars[1]);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UpperCase(chars[0],  chars[1]);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.UpperCase(chars[0],  chars[1]);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
181	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  1,  sb.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  1,  sb.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  System.arraycopy(chars,  0,  sb,  1,  sb.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
182	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0]);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0]);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toLowerCase(chars[0]);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
183	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.START_OBJECT));  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.START_OBJECT));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.START_OBJECT));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	19	None	replace
184	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.UTF8));  [CE]  cannot  find  symbol  UTF8  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.UTF8));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.UTF8));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  UTF8	19	None	replace
185	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SCRIPT));  [CE]  cannot  find  symbol  DEFAULT_SCRIPT  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SCRIPT));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SCRIPT));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SCRIPT	19	None	replace
186	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(len);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
187	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(len);  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(len);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
188	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder();	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
189	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder();	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
190	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.substring(len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
191	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(len));  [FE]  ComparisonFailure  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.trim());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(s.trim());	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
193	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.trim());  [FE]  ComparisonFailure  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.trim());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(s.trim());	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
194	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(c)).append('?');  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(c)).append('?');  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(c)).append('?');	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
195	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(len)).append('?');  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(len)).append('?');  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(len)).append('?');	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
196	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars[0].charAt(0)));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars[0].charAt(0)));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars[0].charAt(0)));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
197	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars)).append('?');  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars)).append('?');  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars)).append('?');	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
198	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars[0].charValue()));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars[0].charValue()));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.toUpperCase(chars[0].charValue()));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
199	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.UnicodeBlock.of(c));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(100);  final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.UnicodeBlock.of(c));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(100);    final  StringBuilder  sb  =  new  StringBuilder(100).append(Character.UnicodeBlock.of(c));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	20	None	add
200	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length).append('?');  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length).append('?');  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length).append('?');	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
201	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  s.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  s.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length);    final  StringBuilder  sb  =  new  StringBuilder(chars.length);  System.arraycopy(chars,  0,  sb,  1,  s.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	1	None	add
202	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.PREFIX);  [CE]  cannot  find  symbol  PREFIX  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.PREFIX);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.PREFIX);	  final    StringBuilder    sb    =    new    StringBuilder(Character.UTF8);    	non-compiled	[CE]  cannot  find  symbol  PREFIX	5	None	replace
203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(512);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(512);	  final    StringBuilder    sb    =    new    StringBuilder(100);    	compilable	  [FE]  ComparisonFailure  	21	1	replace
204	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(512);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(512);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(512);	  final    StringBuilder    sb    =    new    StringBuilder(100);    	compilable	  [FE]  ComparisonFailure  	21	1	replace
205	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  continue;  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  continue;  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  continue;	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	17	None	add
206	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  */  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  */  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(len));    final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  */	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
207	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SIGNATURES));  [CE]  cannot  find  symbol  DEFAULT_SIGNATURES  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SIGNATURES));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SIGNATURES));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SIGNATURES	19	None	replace
208	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SRC_OVER));  [CE]  cannot  find  symbol  DEFAULT_SRC_OVER  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SRC_OVER));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.toHexString(Character.DEFAULT_SRC_OVER));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SRC_OVER	19	None	replace
209	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.toHexString(chars));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(String.toHexString(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(String.toHexString(chars));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toHexString(chars));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  2);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  2);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
211	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  2);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(chars.length  *  2);	  final    StringBuilder    sb    =    new    StringBuilder(chars.length);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
212	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0],  chars[1]));  [CE]  no  suitable  method  found  for  toUpperCase(char,char)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0],  chars[1]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars[0],  chars[1]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char,char)	3	None	replace
213	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars)+  1);  [CE]  no  suitable  method  found  for  toUpperCase(char[])  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars)+  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars)+  1);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char[])	3	None	replace
214	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars,  len),  chars);  [CE]  no  suitable  method  found  for  toUpperCase(char[],int)  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars,  len),  chars);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(chars,  len),  chars);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toUpperCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toUpperCase(char[],int)	3	None	replace
215	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
216	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(Character.toUpperCase(len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
217	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(chars.length);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
218	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars.length);  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(chars.length);	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
219	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
220	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));  [FE]  ComparisonFailure  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(len));	      	compilable	  [FE]  ComparisonFailure  	12	1	replace
221	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.arraycopy(chars,  0,  chars,  len));  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.arraycopy(chars,  0,  chars,  len));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(System.arraycopy(chars,  0,  chars,  len));	      	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	12	None	replace
222	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(s));  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(s));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(Character.toHexString(s));	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
223	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars.length());  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars.length());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(chars.length());	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
224	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars);  [CE]  no  suitable  constructor  found  for  StringBuilder(char[])  [FE]                                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	StringBuilder  sb  =  new  StringBuilder(chars);	      	non-compiled	[CE]  no  suitable  constructor  found  for  StringBuilder(char[])	12	None	replace
225	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(64);  continue;  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(64);  final  StringBuilder  sb  =  new  StringBuilder(64);  continue;  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(64);    final  StringBuilder  sb  =  new  StringBuilder(64);  continue;	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	8	None	add
226	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  0,  chars.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  0,  chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  0,  chars.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
227	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  len);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  len);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  len);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
228	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  chars.length  +  1);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  chars.length  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  chars.length  +  1);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
229	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  chars.length);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  chars.length);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(chars.length    +    1);    final  StringBuilder  sb  =  new  StringBuilder(chars.length  +  1);  System.arraycopy(chars,  0,  chars,  1,  chars.length);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	10	None	add
230	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0],  chars[1]);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0],  chars[1]);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0],  chars[1]);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
231	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0].charValue());  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0].charValue());  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0].charValue());	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
232	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[i]);  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[i]);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[i]);	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
233	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0].charAt(0));  [CE]  variable  sb  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(len);  final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0].charAt(0));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final    StringBuilder    sb    =    new    StringBuilder(len);    final  StringBuilder  sb  =  new  StringBuilder(len);  len  =  Character.toUpperCase(chars[0].charAt(0));	  	non-compiled	[CE]  variable  sb  is  already  defined  in  method  sanitize(String)	13	None	add
234	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[len]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[len]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
235	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[len]));  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[len]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars[len]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
236	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars)+  1);  [CE]  no  suitable  method  found  for  toLowerCase(char[])  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars)+  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toLowerCase(chars)+  1);	  final    StringBuilder    sb    =    new    StringBuilder(Character.toLowerCase(chars));    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(char[])	4	None	replace
237	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(chars[0]));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(chars[0]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.toHexString(chars[0]));	  final    StringBuilder    sb    =    new    StringBuilder(Character.valueOf(chars[0]));    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
238	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars)+  1);  [CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars)+  1);  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars)+  1);	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	non-compiled	[CE]  method  toHexString  in  class  Long  cannot  be  applied  to  given  types;	16	None	replace
239	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[len]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[len]));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
240	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[len]));  [FE]  ArrayIndexOutOfBoundsException  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[len]));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Long.toHexString(chars[len]));	  final    StringBuilder    sb    =    new    StringBuilder(Long.toHexString(chars));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
241	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.charAt(len  -  1));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.charAt(len  -  1));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.charAt(len  -  1));	  final    StringBuilder    sb    =    new    StringBuilder(len);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
242	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.quoteCharacter(chars));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;    [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder(Character.quoteCharacter(chars));  [BUGGY]    for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	final  StringBuilder  sb  =  new  StringBuilder(Character.quoteCharacter(chars));	  final    StringBuilder    sb    =    new    StringBuilder(len);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
