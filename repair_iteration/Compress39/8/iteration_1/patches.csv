bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
2	[BUG]  [BUGGY]  if(block!=  null  &&  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
3	[BUG]  [BUGGY]  if(block  ==  null  &&  block.length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block.length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block.length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
4	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
5	[BUG]  [BUGGY]  if(block!=  null  &&  block.length  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.length  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
6	[BUG]  [BUGGY]  sb.append(block.charAt(i));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append(block.charAt(i));  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i));	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  sb.append('?');  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append('?');  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  sb.append(c);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append(c);  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(c);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  sb.append(block.charAt(i));  continue;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append(block.charAt(i));  continue;  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i));  continue;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  sb.append(block.toCharArray());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append(block.toCharArray());  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.toCharArray());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  sb.append(block.toString());  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append(block.toString());  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.toString());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
14	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
15	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
16	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  &&  block  >>  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
17	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
18	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  >=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
19	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
21	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
23	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
24	[BUG]  [BUGGY]  if(block!=  null  ||  block.length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block.length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
25	[BUG]  [BUGGY]  if(block  ==  null  ||  block.length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  ||  block.length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
26	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	add
27	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	add
28	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  >=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	add
29	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
30	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >>  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >>  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  >>  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	add
31	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [Delete]  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [Delete]  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  [Delete]  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  ')'  expected	8	None	add
32	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [BUGGY]  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [BUGGY]  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  [BUGGY]  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  ')'  expected	8	None	add
33	[BUG]  [BUGGY]  if(block!=  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
35	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
36	[BUG]  [BUGGY]  if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	4	None	replace
37	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
38	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
39	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
40	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
41	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
42	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
43	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
44	[BUG]  [BUGGY]  if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	6	None	replace
45	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
46	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
47	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  >=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
48	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
49	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
50	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >>  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >>  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  >>  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
51	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [Delete]  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [Delete]  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  [Delete]  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
53	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
54	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CDATA))  {  [CE]  cannot  find  symbol  CDATA  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CDATA))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CDATA))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CDATA	9	None	replace
55	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  [CE]  cannot  find  symbol  SCRIPT  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  SCRIPT	9	None	replace
56	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))  {  [CE]  cannot  find  symbol  CHARACTER_SEPARATOR  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_SEPARATOR	9	None	replace
57	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER))  {  [CE]  cannot  find  symbol  CHARACTER  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER	9	None	replace
58	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  [CE]  cannot  find  symbol  NAME  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  NAME	9	None	replace
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
60	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
61	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {  [CE]  cannot  find  symbol  START  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  START	9	None	replace
62	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.VALUE_STRING))  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.VALUE_STRING))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.VALUE_STRING))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	9	None	replace
63	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.UNICODE))  {  [CE]  cannot  find  symbol  UNICODE  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.UNICODE))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.UNICODE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  UNICODE	9	None	replace
64	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  continue;  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null)  {  sb.append('?');  continue;  }  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  continue;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  sb.append(block.charAt(i),  block.charAt(i));  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append(block.charAt(i),  block.charAt(i));  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  block.charAt(i));	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  if(block!=  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
67	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.charAt(i));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append('?');  sb.append(block.charAt(i));  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.charAt(i));	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.getName());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  sb.append('?');  sb.append(block.getName());  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.getName());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.START)  {  [CE]  cannot  find  symbol  START  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.START)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.START)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  START	6	None	replace
72	[BUG]  [BUGGY]  if(block!=  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
73	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR))  {  [CE]  cannot  find  symbol  CHAR  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR	9	None	replace
74	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {  [CE]  cannot  find  symbol  CHAR_SEPARATOR  [FE]      ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_SEPARATOR	9	None	replace
75	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  [CE]  cannot  find  symbol  QUOTE  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE	9	None	replace
76	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.VALUE_SINGLE))  {  [CE]  cannot  find  symbol  VALUE_SINGLE  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.VALUE_SINGLE))  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.VALUE_SINGLE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_SINGLE	9	None	replace
77	[BUG]  [BUGGY]  if(block!=  null  &&  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
78	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [BUGGY]  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [BUGGY]  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  [BUGGY]  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
79	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  [BUGGY]  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);    [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block  [BUGGY]  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]    sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  &&  block  [BUGGY]  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
