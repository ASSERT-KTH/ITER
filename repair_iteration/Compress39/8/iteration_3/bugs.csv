bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.charAt(i));  continue;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block.charAt(i));  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.charAt(i));  continue;	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    continue;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
2	[BUG]  [BUGGY]  if(c!=  '?')  {  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c!=  '?')  {  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c!=  '?')  {  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    continue;    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
3	[BUG]  [BUGGY]  if(block  ==  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    continue;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
4	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.charAt(i  +  1));  continue;  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block.charAt(i  +  1));  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.charAt(i  +  1));  continue;	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    continue;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
5	[BUG]  [BUGGY]  if(block!=  null  &&  block.getName()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.getName()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.getName()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.getName()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
6	[BUG]  [BUGGY]  if(block!=  null  ||  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.getName()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
7	[BUG]  [BUGGY]  if(block  ==  null  &&  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block.getName()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.getName()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
8	[BUG]  [BUGGY]  if(block!=  null  &&  block.getName()  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.getName()  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.getName()  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.getName()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
9	[BUG]  [BUGGY]  if(block!=  null  &&  Block.SPECIALS.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  Block.SPECIALS.getName()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  Block.SPECIALS.getName()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.getName()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	77	None	replace
10	[BUG]  [BUGGY]  if(block!=  null  &&  block.getName()  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.getName()  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.getName()  >>  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.getName()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
11	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.charAt(i  +  1));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block.charAt(i  +  1));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.charAt(i  +  1));	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
12	[BUG]  [BUGGY]  if(block  ==  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null)  {  sb.append('?');  sb.append(block.charAt(i));  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
13	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i  +  1));  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i  +  1));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i  +  1));  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
14	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.charAt(i),  c);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block.charAt(i),  c);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.charAt(i),  c);	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
15	[BUG]  [BUGGY]  if(block!=  null  ||  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    >=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
16	[BUG]  [BUGGY]  if(block!=  null  ||  block.isSpecial())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.isSpecial())  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.isSpecial())  {	  if(block    >=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
17	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_STRING))  {  [CE]  cannot  find  symbol  CHAR_STRING  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_STRING))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_STRING))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_STRING	74	None	replace
18	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_VALUE))  {  [CE]  cannot  find  symbol  CHAR_VALUE  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_VALUE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_VALUE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_VALUE	74	None	replace
19	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_NAME))  {  [CE]  cannot  find  symbol  CHAR_NAME  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_NAME))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_NAME))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_NAME	74	None	replace
20	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_START))  {  [CE]  cannot  find  symbol  CHAR_START  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_START))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_START))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_START	74	None	replace
21	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SCRIPT))  {  [CE]  cannot  find  symbol  CHAR_SCRIPT  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SCRIPT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SCRIPT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_SCRIPT	74	None	replace
22	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SCALE))  {  [CE]  cannot  find  symbol  CHAR_SCALE  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SCALE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SCALE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_SCALE	74	None	replace
23	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.charAt(i)))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.charAt(i)))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.charAt(i)))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
24	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.charAt(0)))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.charAt(0)))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.charAt(0)))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.class))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block!=  null  &&  block.equals(Character.UnicodeBlock.class))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR))    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
26	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.class))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.class))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.class))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR))    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
27	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SECOND)  {  [CE]  cannot  find  symbol  SECOND  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SECOND)  {  [BUGGY]    null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SECOND)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block    	non-compiled	[CE]  cannot  find  symbol  SECOND	78	None	replace
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block    	compilable	  [FE]  ComparisonFailure  	32	1	replace
29	[BUG]  [BUGGY]  if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]    null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block    	compilable	  [FE]  ComparisonFailure  	32	1	replace
30	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SOURCE))  {  [CE]  cannot  find  symbol  SOURCE  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SOURCE))  {  [BUGGY]    null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SOURCE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block    	non-compiled	[CE]  cannot  find  symbol  SOURCE	32	None	replace
31	[BUG]  [BUGGY]  if(c!=  '?')  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c!=  '?')  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c!=  '?')  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block    >=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
32	[BUG]  [BUGGY]  if(c!=  '?')  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c!=  '?')  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c!=  '?')  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block    >=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
33	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append('?');    sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
34	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append(c);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append(c);  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append(c);  }	  sb.append('?');    sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
35	[BUG]  [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  final  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	final  StringBuilder  sb  =  new  StringBuilder();	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.length());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.length());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(block.length());	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charAt(i));  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charAt(i));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(block.charAt(i));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
38	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.length);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.length);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(block.length);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.toCharArray());  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.toCharArray());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(block.toCharArray());	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  sb  =  new  StringBuilder(block.charAt(i));  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb  =  new  StringBuilder(block.charAt(i));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb  =  new  StringBuilder(block.charAt(i));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charValue());  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charValue());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(block.charValue());	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  if(block  ==  null  ||  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    ||    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
43	[BUG]  [BUGGY]  if(block  ==  null  ||  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    ||    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
44	[BUG]  [BUGGY]  if(block  ==  null  ||  block.length  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.length  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.length  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    ||    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	25	None	replace
45	[BUG]  [BUGGY]  if(block  ==  null  ||  block.length  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.length  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.length  >>  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    ||    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	25	None	replace
46	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i).length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i).length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i).length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
47	[BUG]  [BUGGY]  if(block  ==  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
48	[BUG]  [BUGGY]  if(block!=  null  ||  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
49	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i),  c.length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i),  c.length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i),  c.length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
50	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i).length  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i).length  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i).length  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
51	[BUG]  [BUGGY]  if(block!=  null  &&  Block.SPECIALS.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  Block.SPECIALS.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  Block.SPECIALS.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	4	None	replace
52	[BUG]  [BUGGY]  sb.append(c.toString());  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(c.toString());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(c.toString());	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  sb.append(block!=  null?  null  :  block.toString());  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block!=  null?  null  :  block.toString());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block!=  null?  null  :  block.toString());	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  sb.append(block.toString()  +  c);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.toString()  +  c);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.toString()  +  c);	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  sb.append(block.toString()  +  chars[i]);  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.toString()  +  chars[i]);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.toString()  +  chars[i]);	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_STRING))  {  [CE]  cannot  find  symbol  CHARACTER_STRING  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_STRING))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_STRING))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_STRING	56	None	replace
57	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_VALUE))  {  [CE]  cannot  find  symbol  CHARACTER_VALUE  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_VALUE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_VALUE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_VALUE	56	None	replace
58	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_NAME))  {  [CE]  cannot  find  symbol  CHARACTER_NAME  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_NAME))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_NAME))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_NAME	56	None	replace
59	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_QUOTE))  {  [CE]  cannot  find  symbol  CHARACTER_QUOTE  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_QUOTE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_QUOTE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_QUOTE	56	None	replace
60	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))  {  [CE]  cannot  find  symbol  CHARACTER_SEPARATOR  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_SEPARATOR	56	None	replace
61	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_SCRIPT))  {  [CE]  cannot  find  symbol  CHARACTER_SCRIPT  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_SCRIPT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_SCRIPT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_SCRIPT	56	None	replace
62	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
63	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.getName()  +  1);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block.getName()  +  1);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.getName()  +  1);	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
64	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  System.arraycopy(chars,  0,  sb,  0,  block.length);  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  System.arraycopy(chars,  0,  sb,  0,  block.length);  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  System.arraycopy(chars,  0,  sb,  0,  block.length);  }	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
65	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
66	[BUG]  [BUGGY]  sb.append('?');  sb.append(block.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block.getQualifiedName());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block.getQualifiedName());	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
67	[BUG]  [BUGGY]  if(c  ==  '?')  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c  ==  '?')  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c  ==  '?')  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
68	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
69	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.END))  {  [CE]  cannot  find  symbol  END  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.END))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.END))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.START))    {    	non-compiled	[CE]  cannot  find  symbol  END	61	None	replace
70	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.STRING))  {  [CE]  cannot  find  symbol  STRING  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.STRING))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.STRING))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.START))    {    	non-compiled	[CE]  cannot  find  symbol  STRING	61	None	replace
71	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SHORT))  {  [CE]  cannot  find  symbol  SHORT  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SHORT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SHORT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.START))    {    	non-compiled	[CE]  cannot  find  symbol  SHORT	61	None	replace
72	[BUG]  [BUGGY]  if(block!=  null  ||  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
73	[BUG]  [BUGGY]  if(block  ==  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
74	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i)  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i)  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i)  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
75	[BUG]  [BUGGY]  if(block!=  null  &&  block.length()  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length()  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length()  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
76	[BUG]  [BUGGY]  if(block  >=  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  >=  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  >=  null  &&  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	33	None	replace
77	[BUG]  [BUGGY]  if(block!=  null  &&  block.length()  ==  Character.UnicodeBlock.UNICODE_SIZE)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length()  ==  Character.UnicodeBlock.UNICODE_SIZE)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length()  ==  Character.UnicodeBlock.UNICODE_SIZE)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
78	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append(block.charAt(i));  continue;  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append(block.charAt(i));  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append(block.charAt(i));  continue;  }	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
79	[BUG]  [BUGGY]  sb.append(block.charAt(i  +  1));  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i  +  1));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i  +  1));	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
80	[BUG]  [BUGGY]  sb.append(block.charAt(i  +  1));  continue;  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i  +  1));  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i  +  1));  continue;	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
81	[BUG]  [BUGGY]  sb.append(block.charAt(i),  c);  continue;  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i),  c);  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  c);  continue;	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
82	[BUG]  [BUGGY]  sb.append(block.charAt(i),  c);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i),  c);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  c);	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  if(block  ==  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
84	[BUG]  [BUGGY]  if(block!=  null  ||  block.charAt(i)  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.charAt(i)  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.charAt(i)  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
85	[BUG]  [BUGGY]  if(block!=  null  ||  block.length  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.length  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
86	[BUG]  [BUGGY]  if(block  >=  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  >=  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  >=  null  ||  block.length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	72	None	replace
87	[BUG]  [BUGGY]  if(c!=  '?')  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c!=  '?')  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c!=  '?')  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	replace
88	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
89	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
90	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
91	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
92	[BUG]  [BUGGY]  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
93	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
94	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SINGLE))  {  [CE]  cannot  find  symbol  TYPE_SINGLE  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SINGLE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SINGLE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.VALUE_SINGLE))    {    	non-compiled	[CE]  cannot  find  symbol  TYPE_SINGLE	76	None	replace
95	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SINGLE))  {  [CE]  cannot  find  symbol  CHAR_SINGLE  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SINGLE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SINGLE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.VALUE_SINGLE))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_SINGLE	76	None	replace
96	[BUG]  [BUGGY]  if(c  ==  '?')  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c  ==  '?')  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c  ==  '?')  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
97	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
98	[BUG]  [BUGGY]  sb.append(block);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block);	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
99	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append(c);  }  else  {  block.append('?');  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append(c);  }  else  {  block.append('?');  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append(c);  }  else  {  block.append('?');  }	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
100	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
101	[BUG]  [BUGGY]  if(c!=  '?')  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c!=  '?')  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c!=  '?')  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
102	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
103	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
104	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURE))  {  [CE]  cannot  find  symbol  SIGNATURE  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.NAME))    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE	58	None	replace
105	[BUG]  [BUGGY]  if(c!=  '?')  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c!=  '?')  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c!=  '?')  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	38	None	replace
106	[BUG]  [BUGGY]  if(c  ==  '?')  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(c  ==  '?')  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(c  ==  '?')  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	38	None	replace
107	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SECOND)  {  [CE]  cannot  find  symbol  SECOND  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SECOND)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.SECOND)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  SECOND	38	None	replace
108	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SECOND)  {  [CE]  cannot  find  symbol  SECOND  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SECOND)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SECOND)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  SECOND	38	None	replace
109	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
110	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
111	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
112	[BUG]  [BUGGY]  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
113	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
114	[BUG]  [BUGGY]  sb.append(block.charAt(i)+  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i)+  1);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i)+  1);	  sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
115	[BUG]  [BUGGY]  sb.append(block.charAt(i,  len));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i,  len));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i,  len));	  sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
116	[BUG]  [BUGGY]  sb.append(block.charAt(i++));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i++));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i++));	  sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
117	[BUG]  [BUGGY]  sb.append(c.charAt(i));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(c.charAt(i));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(c.charAt(i));	  sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
118	[BUG]  [BUGGY]  if(block  ==  null  ||  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.length()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
119	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCALE))  {  [CE]  cannot  find  symbol  SCALE  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCALE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCALE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CDATA))    {    	non-compiled	[CE]  cannot  find  symbol  SCALE	54	None	replace
120	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SIGNATURE))  {  [CE]  cannot  find  symbol  TYPE_SIGNATURE  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SIGNATURE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SIGNATURE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CDATA))    {    	non-compiled	[CE]  cannot  find  symbol  TYPE_SIGNATURE	54	None	replace
121	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
122	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
123	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
124	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
125	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
126	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  >=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
127	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
128	[BUG]  [BUGGY]  if(block  ==  null  &&  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
129	[BUG]  [BUGGY]  if(block!=  null  &&  Block.SPECIALS.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  Block.SPECIALS.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  Block.SPECIALS.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	1	None	replace
130	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i)  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i)  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i)  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
131	[BUG]  [BUGGY]  if(block!=  null  &&  block.sanitize(c)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.sanitize(c)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.sanitize(c)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
132	[BUG]  [BUGGY]  sb.append(c.toCharArray());  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(c.toCharArray());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(c.toCharArray());	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
133	[BUG]  [BUGGY]  sb.append(block.toCharArray()  +  1);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.toCharArray()  +  1);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.toCharArray()  +  1);	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
134	[BUG]  [BUGGY]  sb.append(block.toCharArray(),  c);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.toCharArray(),  c);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.toCharArray(),  c);	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
135	[BUG]  [BUGGY]  sb.append(block!=  null?  null  :  block.toCharArray());  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block!=  null?  null  :  block.toCharArray());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block!=  null?  null  :  block.toCharArray());	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
136	[BUG]  [BUGGY]  sb.append(block  ==  null?  null  :  block.toCharArray());  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block  ==  null?  null  :  block.toCharArray());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block  ==  null?  null  :  block.toCharArray());	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
137	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CDATA))  {  [CE]  cannot  find  symbol  CDATA  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CDATA))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.CDATA))  {	  if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CDATA	53	None	replace
138	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHARACTER))  {  [CE]  cannot  find  symbol  CHARACTER  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHARACTER))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHARACTER))  {	  if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER	53	None	replace
139	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.TYPE_SINGLE))  {  [CE]  cannot  find  symbol  TYPE_SINGLE  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.TYPE_SINGLE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.TYPE_SINGLE))  {	  if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  TYPE_SINGLE	53	None	replace
140	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    >>    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
141	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    >>    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
142	[BUG]  [BUGGY]  if(block!=  null  ||  block.length  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.length  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length  >>  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
143	[BUG]  [BUGGY]  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
144	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
145	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
146	[BUG]  [BUGGY]  If(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  If(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	If(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
147	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	add
148	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	add
149	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  >>  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	add
150	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  >=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	add
151	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  [Delete]  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  [Delete]  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  [Delete]  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	20	None	add
152	[BUG]  [BUGGY]  if(block  ==  null  &&  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block.length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
153	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.END)  {  [CE]  cannot  find  symbol  END  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.END)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.END)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  END	71	None	replace
154	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.FIELD_NAME)  {  [CE]  cannot  find  symbol  FIELD_NAME  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.FIELD_NAME)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.FIELD_NAME)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	71	None	replace
155	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.START)  {  [CE]  cannot  find  symbol  START  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.START)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block  ==  Character.UnicodeBlock.START)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  START	71	None	replace
156	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.START)  {  [CE]  cannot  find  symbol  START  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.START)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block!=  Character.UnicodeBlock.START)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  START	71	None	replace
157	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.START)  {  [CE]  cannot  find  symbol  START  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.START)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.START)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  START	71	None	replace
158	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SYNTHETIC)  {  [CE]  cannot  find  symbol  SYNTHETIC  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SYNTHETIC)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SYNTHETIC)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	71	None	replace
159	[BUG]  [BUGGY]  sb.append('?').append(block.charAt(i));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?').append(block.charAt(i));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?').append(block.charAt(i));	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
160	[BUG]  [BUGGY]  sb.append('?',  block);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?',  block);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?',  block);	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
161	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  }	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
162	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	add
163	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	add
164	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  >=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	add
165	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=  null  ||  block  >=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	add
166	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >>  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  >>  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  >>  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	add
167	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [Delete]  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [Delete]  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  [Delete]  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	22	None	add
168	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
169	[BUG]  [BUGGY]  If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	If(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
170	[BUG]  [BUGGY]  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
171	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
172	[BUG]  [BUGGY]  if(block!=  null  &&  block.length  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length  >>  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
173	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_STRING))  {  [CE]  cannot  find  symbol  TYPE_STRING  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_STRING))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_STRING))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.VALUE_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  TYPE_STRING	62	None	replace
174	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_STRING))  {  [CE]  cannot  find  symbol  QUOTE_STRING  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_STRING))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_STRING))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.VALUE_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_STRING	62	None	replace
175	[BUG]  [BUGGY]  sb.append(block.charAt(i),  block.charAt(i  +  1));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i),  block.charAt(i  +  1));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  block.charAt(i  +  1));	  sb.append(block.charAt(i),    block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
176	[BUG]  [BUGGY]  sb.append(block.charAt(i),  block.charAt(i++));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i),  block.charAt(i++));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  block.charAt(i++));	  sb.append(block.charAt(i),    block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
177	[BUG]  [BUGGY]  sb.append(block.charAt(i  +  1),  block.charAt(i  +  1));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i  +  1),  block.charAt(i  +  1));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i  +  1),  block.charAt(i  +  1));	  sb.append(block.charAt(i),    block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
178	[BUG]  [BUGGY]  sb.append(block.charAt(i),  block.charAt(i)+  1);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i),  block.charAt(i)+  1);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  block.charAt(i)+  1);	  sb.append(block.charAt(i),    block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
179	[BUG]  [BUGGY]  sb.append(block.charAt(i),  block.charAt(0));  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i),  block.charAt(0));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  block.charAt(0));	  sb.append(block.charAt(i),    block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
180	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SCRIPT))  {  [CE]  cannot  find  symbol  TYPE_SCRIPT  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SCRIPT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_SCRIPT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SCRIPT))    {    	non-compiled	[CE]  cannot  find  symbol  TYPE_SCRIPT	55	None	replace
181	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CASE))  {  [CE]  cannot  find  symbol  CASE  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CASE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CASE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SCRIPT))    {    	non-compiled	[CE]  cannot  find  symbol  CASE	55	None	replace
182	[BUG]  [BUGGY]  if(block  ==  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
183	[BUG]  [BUGGY]  if(block!=  null  ||  block.length()  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.length()  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length()  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
184	[BUG]  [BUGGY]  if(block!=  null  ||  Block.SPECIALS.length()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  Block.SPECIALS.length()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  Block.SPECIALS.length()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	66	None	replace
185	[BUG]  [BUGGY]  if(block  >=  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  >=  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  >=  null  ||  block.length()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	66	None	replace
186	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
187	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
188	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  ';'  expected	59	None	add
189	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  >=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
190	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >>  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >>  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  >>  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
191	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  ';'  expected	59	None	add
192	[BUG]  [BUGGY]  sb.append('?');  continue;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  continue;	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
193	[BUG]  [BUGGY]  if(block  ==  null)  {  sb.append('?');  continue;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null)  {  sb.append('?');  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null)  {  sb.append('?');  continue;  }	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
194	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append(c);  continue;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append(c);  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append(c);  continue;  }	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
195	[BUG]  [BUGGY]  sb.append(c);  continue;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(c);  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(c);  continue;	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
196	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
197	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  ==  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
198	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  >=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
199	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >>  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  >>  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  >>  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
200	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [Delete]  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [Delete]  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  [Delete]  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  ')'  expected	52	None	add
201	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [BUGGY]  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  [BUGGY]  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  [BUGGY]  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  ')'  expected	52	None	add
202	[BUG]  [BUGGY]  sb.append(block);  continue;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block);  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block);  continue;	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
203	[BUG]  [BUGGY]  sb.append(block,  '?');  continue;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block,  '?');  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block,  '?');  continue;	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
204	[BUG]  [BUGGY]  sb.append(block.charAt(i),  block.charAt(i  +  2));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i),  block.charAt(i  +  2));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i),  block.charAt(i  +  2));	  sb.append(block.charAt(i),    block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
205	[BUG]  [BUGGY]  if(block!=  null)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
206	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  >=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
207	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {  [CE]  cannot  find  symbol  SIGNATURES  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block    >>    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURES	30	None	replace
208	[BUG]  [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
209	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i).length()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i).length()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i).length()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
210	[BUG]  [BUGGY]  if(block!=  null  &&  Block.SPECIALS.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  Block.SPECIALS.length()  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  Block.SPECIALS.length()  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	33	None	replace
211	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  >=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    >=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
212	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SIGNATURES)  {  [CE]  cannot  find  symbol  SIGNATURES  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SIGNATURES)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SIGNATURES)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block    >=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURES	47	None	replace
213	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.UTF8)  {  [CE]  cannot  find  symbol  UTF8  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.UTF8)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.UTF8)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block    >=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  UTF8	47	None	replace
214	[BUG]  [BUGGY]  sb.append('?');  sb.append(block!=  null?  null  :  block.getName());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block!=  null?  null  :  block.getName());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block!=  null?  null  :  block.getName());	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
215	[BUG]  [BUGGY]  sb.append(block.getName());  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.getName());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.getName());	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
216	[BUG]  [BUGGY]  sb.append('?');  sb.append(block  ==  null?  null  :  block.getName());  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block  ==  null?  null  :  block.getName());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block  ==  null?  null  :  block.getName());	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
217	[BUG]  [BUGGY]  if(block!=  null)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
218	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	replace
219	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock))  {  [CE]  cannot  find  symbol  UnicodeBlock  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol  UnicodeBlock	57	None	replace
220	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_INT))  {  [CE]  cannot  find  symbol  TYPE_INT  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_INT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_INT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.QUOTE))    {    	non-compiled	[CE]  cannot  find  symbol  TYPE_INT	75	None	replace
221	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
222	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_CHAR))  {  [CE]  cannot  find  symbol  START_CHAR  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_CHAR))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_CHAR))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.START))    {    	non-compiled	[CE]  cannot  find  symbol  START_CHAR	61	None	replace
223	[BUG]  [BUGGY]  sb.append(block!=  null?  null  :  block.charAt(i));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block!=  null?  null  :  block.charAt(i));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block!=  null?  null  :  block.charAt(i));	  sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
224	[BUG]  [BUGGY]  sb.append(block.charAt(i).toCharArray());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i).toCharArray());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i).toCharArray());	  sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
225	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.STRING)  {  [CE]  cannot  find  symbol  STRING  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.STRING)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.STRING)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  STRING	71	None	replace
226	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.Start)  {  [CE]  cannot  find  symbol  Start  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.Start)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.Start)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  Start	71	None	replace
227	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(CHARacter.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(CHARacter.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  ==  null  &&  block.equals(CHARacter.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
228	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append('n');  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append('n');  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append('n');  }	  sb.append('?');    sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
229	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append(']');  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append(']');  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  else  {  sb.append(']');  }	  sb.append('?');    sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
230	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	replace
231	[BUG]  [BUGGY]  sb.append(block.charAt(i)+  1);  continue;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i)+  1);  continue;  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i)+  1);  continue;	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
232	[BUG]  [BUGGY]  if(block!=  null  &&  block.length  <  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length  <  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length  <  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
233	[BUG]  [BUGGY]  if(block!=  null  &&  block.length  [Delete]  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length  [Delete]  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length  [Delete]  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
234	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    >=    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
235	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
236	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
237	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SOURCE)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SOURCE)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SOURCE)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SOURCE)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SOURCE)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SOURCE)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
238	[BUG]  [BUGGY]  sb.append(block  ==  null?  null  :  block.toString());  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block  ==  null?  null  :  block.toString());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block  ==  null?  null  :  block.toString());	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
239	[BUG]  [BUGGY]  sb.append(block  ==  null? "null "  :  block.toString());  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block  ==  null? "null "  :  block.toString());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block  ==  null? "null "  :  block.toString());	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
240	[BUG]  [BUGGY]  sb.append(block!=  null? " "  :  block.toString());  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block!=  null? " "  :  block.toString());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block!=  null? " "  :  block.toString());	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
241	[BUG]  [BUGGY]  if(block!=  null  &&  Block.UnicodeBlock.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  Block.UnicodeBlock.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  Block.UnicodeBlock.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	1	None	replace
242	[BUG]  [BUGGY]  if(block!=  null  &&  Block.unicodeBlock.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  Block.unicodeBlock.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  Block.unicodeBlock.charAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	1	None	replace
243	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i)  >>  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i)  >>  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i)  >>  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
244	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SIGNATURES)  {  [CE]  cannot  find  symbol  SIGNATURES  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SIGNATURES)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.SIGNATURES)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURES	38	None	replace
245	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.CDATA)  {  [CE]  cannot  find  symbol  CDATA  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.CDATA)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.CDATA)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  CDATA	38	None	replace
246	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  }  else  {  sb.append(block.charAt(i));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  }  else  {  sb.append(block.charAt(i));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  }  else  {  sb.append(block.charAt(i));  }	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
247	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  }  else  {  sb.append(block.charAt(i));  continue;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  }  else  {  sb.append(block.charAt(i));  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  }  else  {  sb.append(block.charAt(i));  continue;  }	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
248	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_START))  {  [CE]  cannot  find  symbol  CHARACTER_START  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_START))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_START))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_START	56	None	replace
249	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_FIELD_NAMES))  {  [CE]  cannot  find  symbol  CHARACTER_FIELD_NAMES  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_FIELD_NAMES))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_FIELD_NAMES))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_FIELD_NAMES	56	None	replace
250	[BUG]  [BUGGY]  if(block  >=  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  >=  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  >=  null  &&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	4	None	replace
251	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.CDATA)  {  [CE]  cannot  find  symbol  CDATA  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.CDATA)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.CDATA)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block    >>    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  CDATA	50	None	replace
252	[BUG]  [BUGGY]  sb.append(block  ==  null? "null "  :  block.toCharArray());  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block  ==  null? "null "  :  block.toCharArray());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block  ==  null? "null "  :  block.toCharArray());	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
253	[BUG]  [BUGGY]  if(block!=  null  &&  block.getName()  [Delete]  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.getName()  [Delete]  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.getName()  [Delete]  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.getName()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ')'  expected	77	None	replace
254	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i  +  1));  continue;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i  +  1));  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i  +  1));  continue;  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    continue;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
255	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SEMI)  {  [CE]  cannot  find  symbol  SEMI  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SEMI)  {  [BUGGY]    Character.UnicodeBlock.SPECIALS)  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SEMI)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block    	non-compiled	[CE]  cannot  find  symbol  SEMI	79	None	replace
256	[BUG]  [BUGGY]  if(block!=  null  &&  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
257	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
258	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SIGNATURES))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
259	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
260	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
261	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_SCRIPT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START_SCRIPT))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_SCRIPT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START_SCRIPT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_SCRIPT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START_SCRIPT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
262	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
263	[BUG]  [BUGGY]  if(block!=  null)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
264	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
265	[BUG]  [BUGGY]  if(block!=  null  ||  Block.SPECIALS.length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  package  Block  does  not  exist  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  Block.SPECIALS.length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  Block.SPECIALS.length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  package  Block  does  not  exist	72	None	replace
266	[BUG]  [BUGGY]  if(block!=  null  ||  block.length  <  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.length  <  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.length  <  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
267	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i++));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i++));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.charAt(i++));  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
268	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_NAME))  {  [CE]  cannot  find  symbol  TYPE_NAME  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_NAME))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.TYPE_NAME))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.NAME))    {    	non-compiled	[CE]  cannot  find  symbol  TYPE_NAME	58	None	replace
269	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  [BUGGY]  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  [BUGGY]  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  ==  null  ||  block  [BUGGY]  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	20	None	add
270	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
271	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.CDATA)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.CDATA)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.CDATA)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
272	[BUG]  [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
273	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.START))  {  [CE]  cannot  find  symbol  START  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.START))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.START))  {	  if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  START	53	None	replace
274	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.VALUE_STRING))  {  [CE]  cannot  find  symbol  VALUE_STRING  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.VALUE_STRING))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.VALUE_STRING))  {	  if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	53	None	replace
275	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charAt(i),  block.charAt(i));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charAt(i),  block.charAt(i));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(block.charAt(i),  block.charAt(i));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
276	[BUG]  [BUGGY]  sb.append(block.charValue(i));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charValue(i));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charValue(i));	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
277	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append(c);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append(c);  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append(c);  }	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
278	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.char))  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.char))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.char))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
279	[BUG]  [BUGGY]  if(block!=  null  ||  blocks.length  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  blocks  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  blocks.length  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  blocks.length  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  blocks	72	None	replace
280	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.DEFAULT)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.DEFAULT)  {  [BUGGY]    Character.UnicodeBlock.SPECIALS)  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.DEFAULT)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	79	None	replace
281	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SCRIPT)  {  [CE]  cannot  find  symbol  SCRIPT  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SCRIPT)  {  [BUGGY]    Character.UnicodeBlock.SPECIALS)  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SCRIPT)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block    	non-compiled	[CE]  cannot  find  symbol  SCRIPT	79	None	replace
282	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SINGLE)  {  [CE]  cannot  find  symbol  SINGLE  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SINGLE)  {  [BUGGY]    Character.UnicodeBlock.SPECIALS)  {  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SINGLE)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block    	non-compiled	[CE]  cannot  find  symbol  SINGLE	79	None	replace
283	[BUG]  [BUGGY]  if(block!=  null  &&  block.length  >  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length  >  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length  >  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
284	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_LEADING))  {  [CE]  cannot  find  symbol  CHAR_LEADING  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_LEADING))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_LEADING))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_LEADING	74	None	replace
285	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_LENGTH))  {  [CE]  cannot  find  symbol  CHAR_LENGTH  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_LENGTH))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_LENGTH))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_LENGTH	74	None	replace
286	[BUG]  [BUGGY]  if(block!=  null  ||  block.isSpecialized())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.isSpecialized())  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.isSpecialized())  {	  if(block    >=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
287	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.DECEMBER)  {  [CE]  cannot  find  symbol  DECEMBER  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.DECEMBER)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.DECEMBER)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	49	None	replace
288	[BUG]  [BUGGY]  if(!Character.isISOControl(c))  {  sb.append('?');  sb.append(block.charAt(i));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(!Character.isISOControl(c))  {  sb.append('?');  sb.append(block.charAt(i));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(!Character.isISOControl(c))  {  sb.append('?');  sb.append(block.charAt(i));  }	  sb.append('?');    sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
289	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(sb!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(sb!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  }	  sb.append('?');    sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
290	[BUG]  [BUGGY]  if(chars[i]!=  '.')  {  sb.append('?');  sb.append(block.charAt(i));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(chars[i]!=  '.')  {  sb.append('?');  sb.append(block.charAt(i));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(chars[i]!=  '.')  {  sb.append('?');  sb.append(block.charAt(i));  }	  sb.append('?');    sb.append(block.charAt(i));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
291	[BUG]  [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [BUGGY]  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  [BUGGY]  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  [BUGGY]  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	22	None	add
292	[BUG]  [BUGGY]  if(block!=  null  &&  block.isSpecialized())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.isSpecialized())  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.isSpecialized())  {	  if(block!=    null    &&    block.length    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
293	[BUG]  [BUGGY]  sb.append(block!=  null?  block.toString()  :  s);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block!=  null?  block.toString()  :  s);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block!=  null?  block.toString()  :  s);	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
294	[BUG]  [BUGGY]  sb.append(block  ==  '?'?  block.toString()  :  block.toString());  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block  ==  '?'?  block.toString()  :  block.toString());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block  ==  '?'?  block.toString()  :  block.toString());	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
295	[BUG]  [BUGGY]  sb.append(block.charAt(i).toString());  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.charAt(i).toString());  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.charAt(i).toString());	  sb.append(block.toString());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
296	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_OBJECT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.VALUE_SINGLE))    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	76	None	replace
297	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_SINGLE))  {  [CE]  cannot  find  symbol  QUOTE_SINGLE  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_SINGLE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_SINGLE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.VALUE_SINGLE))    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_SINGLE	76	None	replace
298	[BUG]  [BUGGY]  if(block  ==  null  ||  blocks.length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  blocks  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  blocks.length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block  ==  null  ||  blocks.length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    ||    block.length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  blocks	25	None	replace
299	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  If(block!=  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
300	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {  [CE]  cannot  find  symbol  SYNTHETIC  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block    >=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	28	None	replace
301	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  QUOTE_FIELD_NAMES  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_FIELD_NAMES))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE_FIELD_NAMES))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_FIELD_NAMES	26	None	replace
302	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	38	None	replace
303	[BUG]  [BUGGY]  if(block!=  null)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	38	None	replace
304	[BUG]  [BUGGY]  if(block!=  null  &&  block.separatorCharAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.separatorCharAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.separatorCharAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
305	[BUG]  [BUGGY]  if(block!=  null  &&  block.scharAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.scharAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.scharAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
306	[BUG]  [BUGGY]  if(block!=  null  &&  block.strAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.strAt(i)!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.strAt(i)!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i)!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
307	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	15	1	replace
308	[BUG]  [BUGGY]  if(block!=  Character.UnicodeBlock.SPECIALS)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block    ==    null    &&    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block    ==    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	15	1	replace
309	[BUG]  [BUGGY]  if(block!=  null  &&  block.length()  >  0)  {  sb.append('?');  sb.append(block.charAt(i));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length()  >  0)  {  sb.append('?');  sb.append(block.charAt(i));  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length()  >  0)  {  sb.append('?');  sb.append(block.charAt(i));  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
310	[BUG]  [BUGGY]  sb.append('?');  sb.append(block,  c);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append('?');  sb.append(block,  c);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append('?');  sb.append(block,  c);	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
311	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append(c);  }  else  {  final  char  c  =  block.charAt(i);  sb.append('?');  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append(c);  }  else  {  final  char  c  =  block.charAt(i);  sb.append('?');  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append(c);  }  else  {  final  char  c  =  block.charAt(i);  sb.append('?');  }	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
312	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append(c);  }  else  {  sb.append('?');  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append(c);  }  else  {  sb.append('?');  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append(c);  }  else  {  sb.append('?');  }	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
313	[BUG]  [BUGGY]  if(block!=  null  &&  block.length()  >  0)  {  sb.append('?');  continue;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.length()  >  0)  {  sb.append('?');  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.length()  >  0)  {  sb.append('?');  continue;  }	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
314	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i)  ==  '?')  {  sb.append('?');  continue;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i)  ==  '?')  {  sb.append('?');  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i)  ==  '?')  {  sb.append('?');  continue;  }	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
315	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i)!=  '?')  {  sb.append('?');  continue;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i)!=  '?')  {  sb.append('?');  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i)!=  '?')  {  sb.append('?');  continue;  }	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
316	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(i)!=  '/')  {  sb.append('?');  continue;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(i)!=  '/')  {  sb.append('?');  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(i)!=  '/')  {  sb.append('?');  continue;  }	  if(block!=    null)    {    sb.append('?');    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
317	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(100);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
318	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars[i]);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(chars[i]);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(chars[i]);	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
319	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charAt(0));  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(block.charAt(0));  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	StringBuilder  sb  =  new  StringBuilder(block.charAt(0));	  StringBuilder    sb    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
320	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
321	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.STARTED)  {  [CE]  cannot  find  symbol  STARTED  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.STARTED)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.STARTED)  {	  if(block!=    null    &&    block!=    Character.UnicodeBlock.START)    {    	non-compiled	[CE]  cannot  find  symbol  STARTED	71	None	replace
322	[BUG]  [BUGGY]  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	If(block!=  null  &&  block!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
323	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.START)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.START)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.START)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.START)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.START)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.START)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
324	[BUG]  [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SEMI)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block!=  Character.UnicodeBlock.SEMI)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block!=  Character.UnicodeBlock.SEMI)  {  If(block!=  null  &&  block  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    If(block!=    null    &&    block    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
325	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(sb!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(sb!=  null)  {  sb.append('?');  sb.append(block.charAt(i));  continue;  }	  if(block!=    null)    {    sb.append('?');    sb.append(block.charAt(i));    continue;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
326	[BUG]  [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  {  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  if(block  {  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block    ==    Character.UnicodeBlock.SPECIALS)    {    if(block  {  null  ||  block  ==  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
327	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.FINAL))  {  [CE]  cannot  find  symbol  FINAL  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.FINAL))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.FINAL))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.START))    {    	non-compiled	[CE]  cannot  find  symbol  FINAL	61	None	replace
328	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(block.charAt(i));  continue;  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(sb!=  null)  {  sb.append(block.charAt(i));  continue;  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(sb!=  null)  {  sb.append(block.charAt(i));  continue;  }	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
329	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append(block.charAt(i));  continue;  }  else  {  sb.append('?');  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append(block.charAt(i));  continue;  }  else  {  sb.append('?');  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append(block.charAt(i));  continue;  }  else  {  sb.append('?');  }	  sb.append(block.charAt(i));    continue;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
330	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
331	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.SCRIPT))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
332	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SYNTHETIC))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
333	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.QUOTE))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
334	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {  If(block!=  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
335	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.NAME))  {  If(block  ==  null  &&  block.equals(Character.UnicodeBlock.NAME))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    If(block!=    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
336	[BUG]  [BUGGY]  if(block!=  null  &&  block.compareTo(Character.UnicodeBlock.SPECIALS)>  0)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.compareTo(Character.UnicodeBlock.SPECIALS)>  0)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.compareTo(Character.UnicodeBlock.SPECIALS)>  0)  {	  if(block!=    null    &&    block    >=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
337	[BUG]  [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  {  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  if(block  {  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block  {  null  ||  block!=  Character.UnicodeBlock.SPECIALS)  {	  	non-compiled	[CE]  ')'  expected	20	None	add
338	[BUG]  [BUGGY]  if(block!=  null  ||  block.charAt(i).length()!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.charAt(i).length()!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.charAt(i).length()!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    ||    block.length()!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
339	[BUG]  [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SINGLE)  {  [CE]  cannot  find  symbol  SINGLE  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block!=  Character.UnicodeBlock.SINGLE)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block!=  Character.UnicodeBlock.SINGLE)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  SINGLE	37	None	replace
340	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	if(block!=  null)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	37	1	replace
341	[BUG]  [BUGGY]  if(block!=  null)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {	  if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    if(block!=    null    ||    block!=    Character.UnicodeBlock.SPECIALS)    {    	compilable	  [FE]  ComparisonFailure  	37	1	replace
342	[BUG]  [BUGGY]  if(!Character.isISOControl(c))  {  sb.append('?');  sb.append(block.getName());  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(!Character.isISOControl(c))  {  sb.append('?');  sb.append(block.getName());  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(!Character.isISOControl(c))  {  sb.append('?');  sb.append(block.getName());  }	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
343	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append('?');  sb.append(block.getName());  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(sb!=  null)  {  sb.append('?');  sb.append(block.getName());  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(sb!=  null)  {  sb.append('?');  sb.append(block.getName());  }	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
344	[BUG]  [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  sb.append(c);  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  sb.append(c);  }  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null)  {  sb.append('?');  sb.append(block.getName());  }  else  {  sb.append(c);  }	  sb.append('?');    sb.append(block.getName());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
345	[BUG]  [BUGGY]  if(block!=  null  &&  block.charAt(0)  ==  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.charAt(0)  ==  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.charAt(0)  ==  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.length()    ==    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
346	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_BUFFER))  {  [CE]  cannot  find  symbol  CHARACTER_BUFFER  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_BUFFER))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_BUFFER))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_BUFFER	56	None	replace
347	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_TAGGER))  {  [CE]  cannot  find  symbol  CHARACTER_TAGGER  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_TAGGER))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHARACTER_TAGGER))  {	  if(block!=    null    &&    block.equals(Character.UnicodeBlock.CHARACTER_SEPARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  CHARACTER_TAGGER	56	None	replace
348	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {  [CE]  cannot  find  symbol  CHAR_SEPARATOR  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR))  {	  if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_SEPARATOR	53	None	replace
349	[BUG]  [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHAR))  {  [CE]  cannot  find  symbol  CHAR  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHAR))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  ||  block.equals(Character.UnicodeBlock.CHAR))  {	  if(block!=    null    ||    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  CHAR	53	None	replace
350	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_ARRAY))  {  [CE]  cannot  find  symbol  START_ARRAY  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_ARRAY))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.START_ARRAY))  {	  if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	60	None	replace
351	[BUG]  [BUGGY]  if(block!=  null  &&  block.separatorCharAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.separatorCharAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.separatorCharAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
352	[BUG]  [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR)&&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [CE]  cannot  find  symbol  CHAR_SEPARATOR  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR)&&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block!=  null  &&  block.equals(Character.UnicodeBlock.CHAR_SEPARATOR)&&  block.charAt(i).length!=  Character.UnicodeBlock.SPECIALS)  {	  if(block!=    null    &&    block.charAt(i).length!=    Character.UnicodeBlock.SPECIALS)    {    	non-compiled	[CE]  cannot  find  symbol  CHAR_SEPARATOR	4	None	replace
353	[BUG]  [BUGGY]  sb.append(block!=  null?  block.toCharArray()  :  s);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block!=  null?  block.toCharArray()  :  s);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block!=  null?  block.toCharArray()  :  s);	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
354	[BUG]  [BUGGY]  sb.append(block.toCharArray(),  i);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  sb.append(block.toCharArray(),  i);  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	sb.append(block.toCharArray(),  i);	  sb.append(block.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
355	[BUG]  [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  |&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);      [BUGGY]  if(block  ==  null  &&  block.equals(Character.UnicodeBlock.SPECIALS))  {  if(block  ==  null  |&  block.equals(Character.UnicodeBlock.SPECIALS))  {  [BUGGY]      sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	if(block    ==    null    &&    block.equals(Character.UnicodeBlock.SPECIALS))    {    if(block  ==  null  |&  block.equals(Character.UnicodeBlock.SPECIALS))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
