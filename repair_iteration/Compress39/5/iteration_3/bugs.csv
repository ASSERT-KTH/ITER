bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[0];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    final  char  c  =(char)chars[0];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	78	None	add
2	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  Final  char  c  =(char)chars[0];  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  Final  char  c  =(char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    Final  char  c  =(char)chars[0];	  	non-compiled	[CE]  not  a  statement	78	None	add
3	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(Char)chars[0];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(Char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    final  char  c  =(Char)chars[0];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	78	None	add
4	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  final  String  c  =(char)chars[0];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  final  String  c  =(char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    final  String  c  =(char)chars[0];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	78	None	add
5	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  char  c  =(char)chars[0];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  char  c  =(char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    char  c  =(char)chars[0];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	78	None	add
6	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  Character  c  =(char)chars[0];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  Character  c  =(char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    Character  c  =(char)chars[0];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	78	None	add
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  *  2];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
8	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  *  2];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  *  1];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ComparisonFailure  	127	1	replace
10	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  1];  [FE]  ComparisonFailure  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  *  1];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ComparisonFailure  	127	1	replace
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  4];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  *  4];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
12	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  4];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  4];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  *  4];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =(char)chars[i  *  len];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
14	[BUG]  [BUGGY]  char  c  =(char)chars[i  *  len];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i  *  len];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
15	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  128);  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  128);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  *  128);	  final    char    c    =(char)chars[i    *    len];    	non-compiled	[CE]  ']'  expected	127	None	replace
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  *  3];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
17	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  *  3];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
18	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len,  chars[i]);  [CE]  no  suitable  method  found  for  substring(int,int,char)  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len,  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len,  chars[i]);	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,char)	35	None	replace
19	[BUG]  [BUGGY]  char  c  =  s.substring(i  +  1,  len);  [CE]  incompatible  types  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.substring(i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.substring(i  +  1,  len);	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  incompatible  types	35	None	replace
20	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len,  chars[i].length());  [CE]  char  cannot  be  dereferenced  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len,  chars[i].length());  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len,  chars[i].length());	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	35	None	replace
21	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len  +  1);  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len  +  1);	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	35	None	replace
22	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len,  chars[i++]);  [CE]  no  suitable  method  found  for  substring(int,int,char)  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len,  chars[i++]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len,  chars[i++]);	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,char)	35	None	replace
23	[BUG]  [BUGGY]  String  c  =  s.substring(i,  i  +  1,  len);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]                                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i,  i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i,  i  +  1,  len);	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	35	None	replace
24	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len),  chars[i];  [CE]  ']'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len),  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len),  chars[i];	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  ']'  expected	35	None	replace
25	[BUG]  [BUGGY]  String  c  =(String)chars[i];  [CE]  inconvertible  types  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(String)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(String)chars[i];	  final    String    c    =(String)chars[i];    	non-compiled	[CE]  inconvertible  types	54	None	replace
26	[BUG]  [BUGGY]  char  c  =(String)chars[i];  [CE]  inconvertible  types  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(String)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(String)chars[i];	  final    String    c    =(String)chars[i];    	non-compiled	[CE]  inconvertible  types	54	None	replace
27	[BUG]  [BUGGY]  final  String  c  =(String)chars[i  +  1];  [CE]  inconvertible  types  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String)chars[i  +  1];	  final    String    c    =(String)chars[i];    	non-compiled	[CE]  inconvertible  types	54	None	replace
28	[BUG]  [BUGGY]  char  c  =(char)chars[i].charAt(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].charAt(i  +  1);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
29	[BUG]  [BUGGY]  char  c  =(char)chars[i].charAt(i]);  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].charAt(i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].charAt(i]);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  ')'  expected	85	None	replace
30	[BUG]  [BUGGY]  char  c  =(char)chars[i].charAt(i++);  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].charAt(i++);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
31	[BUG]  [BUGGY]  String  c  =(String)chars[i].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(String)chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(String)chars[i].charAt(i);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
32	[BUG]  [BUGGY]  char  c  =(char)chars[i  +  1].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i  +  1].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i  +  1].charAt(i);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
33	[BUG]  [BUGGY]  char  c  =(char)chars[i].charAt(0);  [CE]  char  cannot  be  dereferenced  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].charAt(0);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].charAt(0);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
34	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharArray()  +  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharArray()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharArray()  +  1;	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
35	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharArray(0,  len);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharArray(0,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharArray(0,  len);	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
36	[BUG]  [BUGGY]  char  c  =  chars[i],  s.toCharArray();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i],  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i],  s.toCharArray();	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
37	[BUG]  [BUGGY]  final  char  c  =  s[i],  chars.toCharArray();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i],  chars.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i],  chars.toCharArray();	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
38	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharArray(i);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharArray(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharArray(i);	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
39	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(len);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(len);	  final    char    c    =    chars[i].charAt(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	103	None	replace
40	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(len  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(len  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(len  +  1);	  final    char    c    =    chars[i].charAt(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	103	None	replace
41	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)];  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)];	  final    char    c    =    chars[i].charAt(i));    	non-compiled	[CE]  ';'  expected	18	None	replace
42	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i  +  1));	  final    char    c    =    chars[i].charAt(i));    	non-compiled	[CE]  ';'  expected	18	None	replace
43	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i));	  final    char    c    =    chars[i].charAt(i));    	non-compiled	[CE]  ';'  expected	18	None	replace
44	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(0);  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(0);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(0);	  final    char    c    =    chars[i].charAt(i));    	non-compiled	[CE]  char  cannot  be  dereferenced	18	None	replace
45	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(i  +  1);	  final    String    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	102	None	replace
46	[BUG]  [BUGGY]  final  String  c  =  chars[i].getCharAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].getCharAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].getCharAt(i);	  final    String    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	102	None	replace
47	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i,  i);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i,  i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i,  i);	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
48	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i,  len  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i,  len  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i,  len  +  1);	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
49	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i,  len);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i,  len);	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
50	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(i,  len);  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(i,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(i,  len);	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
51	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i,  i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i,  i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i,  i  +  1);	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
52	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toCharArray()  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toCharArray()  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toCharArray()  +  1);	  final    String    c    =    chars[i],    s.toCharArray());    	non-compiled	[CE]  ';'  expected	122	None	replace
53	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toCharArray(i);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toCharArray(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toCharArray(i);	  final    String    c    =    chars[i],    s.toCharArray());    	non-compiled	[CE]  ';'  expected	122	None	replace
54	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toCharArray(i));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toCharArray(i));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toCharArray(i));	  final    String    c    =    chars[i],    s.toCharArray());    	non-compiled	[CE]  ';'  expected	122	None	replace
55	[BUG]  [BUGGY]  final  String  c  =  s[i],  chars.toCharArray());  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  s[i],  chars.toCharArray());  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  s[i],  chars.toCharArray());	  final    String    c    =    chars[i],    s.toCharArray());    	non-compiled	[CE]  ';'  expected	122	None	replace
56	[BUG]  [BUGGY]  final  String  c  =  chars[i]  +  2;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  +  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  +  2;	  final    String    c    =    chars[i]    +    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
57	[BUG]  [BUGGY]  final  String  c  =  chars[i]  +  3;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  +  3;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  +  3;	  final    String    c    =    chars[i]    +    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
58	[BUG]  [BUGGY]  final  String  c  =  chars[i]  +  '.';  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  +  '.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  +  '.';	  final    String    c    =    chars[i]    +    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
59	[BUG]  [BUGGY]  final  String  c  =  chars[i]  +  '0';  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  +  '0';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  +  '0';	  final    String    c    =    chars[i]    +    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
60	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ",null ";  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ",null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ",null ";	  final    String    c    =    chars[i]    +   ",null   ";    	non-compiled	[CE]  incompatible  types	116	None	replace
61	[BUG]  [BUGGY]  final  String  c  =  chars[i]  + ",null ",  s);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  + ",null ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  + ",null ",  s);	  final    String    c    =    chars[i]    +   ",null   ";    	non-compiled	[CE]  	116	None	replace
62	[BUG]  [BUGGY]  String  c  =  chars[i];  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	non-compiled	[CE]  incompatible  types	13	None	replace
63	[BUG]  [BUGGY]  Char  c  =  chars[i];  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	Character  c  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	compilable	  [FE]  ComparisonFailure  	13	1	replace
65	[BUG]  [BUGGY]  Character  c  =  chars[i];  [FE]  ComparisonFailure  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	compilable	  [FE]  ComparisonFailure  	13	1	replace
66	[BUG]  [BUGGY]  final  Character  c  =  chars[i]  +  '0';  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i]  +  '0';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =  chars[i]  +  '0';	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  incompatible  types	86	None	replace
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i]  +  '0';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  int  c  =  chars[i]  +  '0';	  final    char    c    =    chars[i]    +    '0';    	compilable	  [FE]  ComparisonFailure  	86	1	replace
68	[BUG]  [BUGGY]  final  int  c  =  chars[i]  +  '0';  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i]  +  '0';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =  chars[i]  +  '0';	  final    char    c    =    chars[i]    +    '0';    	compilable	  [FE]  ComparisonFailure  	86	1	replace
69	[BUG]  [BUGGY]  char  c  =  chars[i]  +  '0';  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  +  '0';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  +  '0';	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  possible  loss  of  precision	86	None	replace
70	[BUG]  [BUGGY]  String  c  =(chars[i]!=  null)?  s  :  chars[i];  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]!=  null)?  s  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]!=  null)?  s  :  chars[i];	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	100	None	replace
71	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  s  :  chars[i];  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  s  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  s  :  chars[i];	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	100	None	replace
72	[BUG]  [BUGGY]  String  c  =(chars[i]  ==  null)?  s  :  chars[i];  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]  ==  null)?  s  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]  ==  null)?  s  :  chars[i];	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	100	None	replace
73	[BUG]  [BUGGY]  String  c  =(s[i]!=  null)?  chars[i]  :  chars[i];  [CE]  array  required,  but  String  found  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(s[i]!=  null)?  chars[i]  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(s[i]!=  null)?  chars[i]  :  chars[i];	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  array  required,  but  String  found	100	None	replace
74	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  s  :  chars[i].toCharArray();	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	100	None	replace
75	[BUG]  [BUGGY]  Char  c  =(chars[i]!=  null)?  s  :  chars[i];  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(chars[i]!=  null)?  s  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(chars[i]!=  null)?  s  :  chars[i];	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
76	[BUG]  [BUGGY]  char  c  =  s.toString();  [CE]  incompatible  types  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.toString();	  String    c    =    s.toString();    	non-compiled	[CE]  incompatible  types	36	None	replace
77	[BUG]  [BUGGY]  String  c  =  s.toString()  +  i;  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toString()  +  i;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toString()  +  i;	  String    c    =    s.toString();    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	36	None	replace
78	[BUG]  [BUGGY]  String  c  =  s.toString()  +  1;  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toString()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toString()  +  1;	  String    c    =    s.toString();    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	36	None	replace
79	[BUG]  [BUGGY]  String  c  =  s.toString()  + "n ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toString()  + "n ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toString()  + "n ";	  String    c    =    s.toString();    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	36	None	replace
80	[BUG]  [BUGGY]  String  c  =  s.toString()  + ": "  +  i;  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toString()  + ": "  +  i;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toString()  + ": "  +  i;	  String    c    =    s.toString();    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	36	None	replace
81	[BUG]  [BUGGY]  String  c  =  s.toString()  +(i  <  len);  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toString()  +(i  <  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toString()  +(i  <  len);	  String    c    =    s.toString();    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	36	None	replace
82	[BUG]  [BUGGY]  String  c  =  chars[i]  + "n   ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i]  + "n   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i]  + "n   ";	  char    c    =    chars[i]    +   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	92	None	replace
83	[BUG]  [BUGGY]  char  c  =  chars[i]  + "null ";  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + "null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + "null ";	  char    c    =    chars[i]    +   "n   ";    	non-compiled	[CE]  incompatible  types	92	None	replace
84	[BUG]  [BUGGY]  char  c  =  chars[i]  + ".null ";  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ".null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ".null ";	  char    c    =    chars[i]    +   "n   ";    	non-compiled	[CE]  incompatible  types	92	None	replace
85	[BUG]  [BUGGY]  String  c  =  chars[i]  + ".null ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i]  + ".null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i]  + ".null ";	  char    c    =    chars[i]    +   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	92	None	replace
86	[BUG]  [BUGGY]  char  c  =  chars[i]  + ",null ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ",null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ",null ";	  char    c    =    chars[i]    +   "n   ";    	non-compiled	[CE]  incompatible  types	92	None	replace
87	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i]);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i]);	  final    char    c    =    chars[i].charAt(i]);    	non-compiled	[CE]  ')'  expected	15	None	replace
88	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i]  +  1);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i]  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i]  +  1);	  final    char    c    =    chars[i].charAt(i]);    	non-compiled	[CE]  ')'  expected	15	None	replace
89	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i])+  1;  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i])+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i])+  1;	  final    char    c    =    chars[i].charAt(i]);    	non-compiled	[CE]  ')'  expected	15	None	replace
90	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1]);  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i  +  1]);	  final    char    c    =    chars[i].charAt(i]);    	non-compiled	[CE]  ')'  expected	15	None	replace
91	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i  +  1);	  char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	33	None	replace
92	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i++);  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i++);	  char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	33	None	replace
93	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i).toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i).toCharArray();	  char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	33	None	replace
94	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".no ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".no ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".no ";	  final    String    c    =    chars[i]    +   ".no   ";    	non-compiled	[CE]  incompatible  types	117	None	replace
95	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".no ",  chars[i];  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".no ",  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".no ",  chars[i];	  final    String    c    =    chars[i]    +   ".no   ";    	non-compiled	[CE]  	117	None	replace
96	[BUG]  [BUGGY]  final  String  c  =  chars[i]  + ".no ",  s);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  + ".no ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  + ".no ",  s);	  final    String    c    =    chars[i]    +   ".no   ";    	non-compiled	[CE]  	117	None	replace
97	[BUG]  [BUGGY]  final  Character  c  =  chars[i]  +  '.';  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i]  +  '.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =  chars[i]  +  '.';	  final    char    c    =    chars[i]    +    '.';    	non-compiled	[CE]  incompatible  types	121	None	replace
98	[BUG]  [BUGGY]  char  c  =  chars[i]  +  '.';  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  +  '.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  +  '.';	  final    char    c    =    chars[i]    +    '.';    	non-compiled	[CE]  possible  loss  of  precision	121	None	replace
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i]  +  '.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  int  c  =  chars[i]  +  '.';	  final    char    c    =    chars[i]    +    '.';    	compilable	  [FE]  ComparisonFailure  	121	1	replace
100	[BUG]  [BUGGY]  final  int  c  =  chars[i]  +  '.';  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i]  +  '.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =  chars[i]  +  '.';	  final    char    c    =    chars[i]    +    '.';    	compilable	  [FE]  ComparisonFailure  	121	1	replace
101	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  2];	  final    char    c    =    chars[i    +    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	1	replace
102	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  2];	  final    char    c    =    chars[i    +    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	1	replace
103	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  4];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  4];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
104	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  4];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  4];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  4];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
105	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  3];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
106	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  3];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
107	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  10];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  10];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
108	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  10];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  10];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  10];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
109	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  12];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  12];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
110	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  12];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  12];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  12];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
111	[BUG]  [BUGGY]  final  String  c  =  chars[i].toCharArray()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toCharArray()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toCharArray()  +  1;	  final    char    c    =    chars[i].toCharArray()    +    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
112	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().trim()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().trim()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().trim()  +  1;	  final    char    c    =    chars[i].toCharArray()    +    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
113	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().charAt(i);	  final    char    c    =    chars[i].toCharArray()    +    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
114	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().length  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().length  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().length  +  1;	  final    char    c    =    chars[i].toCharArray()    +    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
115	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray()  +  2;  [CE]  char  cannot  be  dereferenced  [FE]                                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray()  +  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray()  +  2;	  final    char    c    =    chars[i].toCharArray()    +    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
116	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    *    1];    final  char  c  =  chars[i  *  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	66	None	add
117	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    *    1];    final  char  c  =  chars[i  *  2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	66	None	add
118	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  1)];  [CE]  ']'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  1)];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    *    1];    final  char  c  =  chars[i  *  1)];	  	non-compiled	[CE]  ']'  expected	66	None	add
119	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  3];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  1];  final  char  c  =  chars[i  *  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    *    1];    final  char  c  =  chars[i  *  3];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	66	None	add
120	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  1];  Final  char  c  =  chars[i  *  1];  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  1];  Final  char  c  =  chars[i  *  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    *    1];    Final  char  c  =  chars[i  *  1];	  	non-compiled	[CE]  not  a  statement	66	None	add
121	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  1];  char  c  =  chars[i  *  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  1];  char  c  =  chars[i  *  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    *    1];    char  c  =  chars[i  *  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	66	None	add
122	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    2];    final  char  c  =  chars[i  +  2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	70	None	add
123	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  3];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    2];    final  char  c  =  chars[i  +  3];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	70	None	add
124	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  2];  Final  char  c  =  chars[i  +  2];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  2];  Final  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    2];    Final  char  c  =  chars[i  +  2];	  	non-compiled	[CE]  not  a  statement	70	None	add
125	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  4];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  4];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    2];    final  char  c  =  chars[i  +  4];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	70	None	add
126	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  2];  final  char  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    2];    final  char  c  =  chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	70	None	add
127	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  2];  char  c  =  chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  2];  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    2];    char  c  =  chars[i  +  2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	70	None	add
128	[BUG]  [BUGGY]  String  c  =(chars[i]!=  null)?  chars[i]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]!=  null)?  chars[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]!=  null)?  chars[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	98	None	replace
129	[BUG]  [BUGGY]  String  c  =(s[i]!=  null)?  chars[i]  :  s.toString();  [CE]  array  required,  but  String  found  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(s[i]!=  null)?  chars[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(s[i]!=  null)?  chars[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  array  required,  but  String  found	98	None	replace
130	[BUG]  [BUGGY]  char  c  =(s[i]!=  null)?  chars[i]  :  s.toString();  [CE]  array  required,  but  String  found  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(s[i]!=  null)?  chars[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(s[i]!=  null)?  chars[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  array  required,  but  String  found	98	None	replace
131	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  s[i]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  s[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  s[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	98	None	replace
132	[BUG]  [BUGGY]  String  c  =(chars[i]  ==  null)?  chars[i]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]  ==  null)?  chars[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]  ==  null)?  chars[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	98	None	replace
133	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	98	None	replace
134	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(i).toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(i).toCharArray();	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	19	None	replace
135	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).toString();  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).toString();	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	19	None	replace
136	[BUG]  [BUGGY]  final  char  c  =  s[i].charAt(i).toCharArray();  [CE]  array  required,  but  String  found  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].charAt(i).toCharArray();	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	19	None	replace
137	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).toCharArray(s);  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).toCharArray(s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).toCharArray(s);	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	19	None	replace
138	[BUG]  [BUGGY]  final  String  c  =  chars[i].substring(i);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].substring(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].substring(i);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
139	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
140	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i,  len);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i,  len);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
141	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i++);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i++);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
142	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(0,  len);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(0,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(0,  len);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
143	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(1);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(1);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
144	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".n ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".n ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".n ";	  final    String    c    =    chars[i]    +   ".n       ";    	non-compiled	[CE]  incompatible  types	64	None	replace
145	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".null ",  chars[i]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".null ",  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".null ",  chars[i]);	  final    String    c    =    chars[i]    +   ".n       ";    	non-compiled	[CE]  	64	None	replace
146	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Character  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Character  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Character  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	104	None	add
147	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  String  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  String  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    String  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	104	None	add
148	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  char  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  char  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    char  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	104	None	add
149	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Char  c  =  s.charAt(i);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Char  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Char  c  =  s.charAt(i);	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
150	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Character  c  =  chars.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Character  c  =  chars.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Character  c  =  chars.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	104	None	add
151	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Character  s  =  s.charAt(i);  [CE]  variable  s  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Character  s  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Character  s  =  s.charAt(i);	  	non-compiled	[CE]  variable  s  is  already  defined  in  method  sanitize(String)	104	None	add
152	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Color  c  =  s.charAt(i);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Color  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Color  c  =  s.charAt(i);	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
153	[BUG]  [BUGGY]  char  c  =  chars[i  +  1];  char  c  =  chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1];  char  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    chars[i    +    1];    char  c  =  chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	45	None	add
154	[BUG]  [BUGGY]  char  c  =  chars[i  +  1];  String  c  =  chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1];  String  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    chars[i    +    1];    String  c  =  chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	45	None	add
155	[BUG]  [BUGGY]  char  c  =  chars[i  +  1];  Character  c  =  chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1];  Character  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    chars[i    +    1];    Character  c  =  chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	45	None	add
156	[BUG]  [BUGGY]  char  c  =  chars[i  +  1];  Char  c  =  chars[i  +  1];  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1];  Char  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    chars[i    +    1];    Char  c  =  chars[i  +  1];	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
157	[BUG]  [BUGGY]  char  c  =  chars[i  +  1];  int  c  =  chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1];  int  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    chars[i    +    1];    int  c  =  chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	45	None	add
158	[BUG]  [BUGGY]  char  c  =  chars[i  +  1];  final  char  c  =  chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1];  final  char  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    chars[i    +    1];    final  char  c  =  chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	45	None	add
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  int  c  =(char)chars[i];	  final    char    c    =(char)chars[i];    final    int    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	84	1	replace
160	[BUG]  [BUGGY]  final  int  c  =(char)chars[i];  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =(char)chars[i];	  final    char    c    =(char)chars[i];    final    int    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	84	1	replace
161	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =(int)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  int  c  =(int)chars[i];	  final    char    c    =(char)chars[i];    final    int    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	84	1	replace
162	[BUG]  [BUGGY]  final  int  c  =(int)chars[i];  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =(int)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =(int)chars[i];	  final    char    c    =(char)chars[i];    final    int    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	84	1	replace
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  int  c  =(int)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	int  c  =(int)chars[i];	  final    char    c    =(char)chars[i];    final    int    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	84	1	replace
164	[BUG]  [BUGGY]  int  c  =(int)chars[i];  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  int  c  =(int)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	int  c  =(int)chars[i];	  final    char    c    =(char)chars[i];    final    int    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	84	1	replace
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  Character  c  =(Character)chars[i];	  final    char    c    =(char)chars[i];    Final    char    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	2	1	replace
166	[BUG]  [BUGGY]  final  Character  c  =(Character)chars[i];  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =(Character)chars[i];	  final    char    c    =(char)chars[i];    Final    char    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	2	1	replace
167	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).charAt(i  +  1);	  final    char    c    =    chars[i].charAt(i).charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	90	None	replace
168	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i).charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i).charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i).charAt(i);	  final    char    c    =    chars[i].charAt(i).charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	90	None	replace
169	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(i).charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(i).charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(i).charAt(i);	  final    char    c    =    chars[i].charAt(i).charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	90	None	replace
170	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i,  len);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).charAt(i,  len);	  final    char    c    =    chars[i].charAt(i).charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	90	None	replace
171	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i++);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).charAt(i++);	  final    char    c    =    chars[i].charAt(i).charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	90	None	replace
172	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  Character  c  =(Character)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  Character  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    Character  c  =(Character)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	58	None	add
173	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  String  c  =(Character)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  String  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    String  c  =(Character)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	58	None	add
174	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  char  c  =(Character)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  char  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    char  c  =(Character)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	58	None	add
175	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  Character  chars[i]  =(Character)chars[i];  [CE]  ']'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  Character  chars[i]  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    Character  chars[i]  =(Character)chars[i];	  	non-compiled	[CE]  ']'  expected	58	None	add
176	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  Char  c  =(Character)chars[i];  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  Char  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    Char  c  =(Character)chars[i];	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
177	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  chars[i]  =(Character)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  chars[i]  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    chars[i]  =(Character)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	58	None	add
178	[BUG]  [BUGGY]  final  String  c  =  chars[i].trim().replace('',  '/');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].trim().replace('',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].trim().replace('',  '/');	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  empty  character  literal	113	None	replace
179	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('',  '/').toLowerCase();  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('',  '/').toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('',  '/').toLowerCase();	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  empty  character  literal	113	None	replace
180	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('',  '/').charAt(i);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('',  '/').charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('',  '/').charAt(i);	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  empty  character  literal	113	None	replace
181	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase().replace('',  '/');  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase().replace('',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase().replace('',  '/');	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  empty  character  literal	113	None	replace
182	[BUG]  [BUGGY]  final  String  c  =  chars[i]  +  1L;  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  +  1L;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  +  1L;	  final    char    c    =    chars[i]    +    1L;    	non-compiled	[CE]  incompatible  types	24	None	replace
183	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  128;  [CE]  possible  loss  of  precision  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  128;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  128;	  final    char    c    =    chars[i]    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
184	[BUG]  [BUGGY]  final  Character  c  =  chars[i]  +  1L;  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i]  +  1L;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =  chars[i]  +  1L;	  final    char    c    =    chars[i]    +    1L;    	non-compiled	[CE]  incompatible  types	24	None	replace
185	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  10.0;  [CE]  possible  loss  of  precision  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  10.0;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  10.0;	  final    char    c    =    chars[i]    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
186	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  1B;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  1B;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  1B;	  final    char    c    =    chars[i]    +    1L;    	non-compiled	[CE]  ';'  expected	24	None	replace
187	[BUG]  [BUGGY]  String  c  =  chars[i]  +  1;  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i]  +  1;	  char    c    =    chars[i]    +    1;    	non-compiled	[CE]  incompatible  types	42	None	replace
188	[BUG]  [BUGGY]  char  c  =  chars[i]  +  2;  [CE]  possible  loss  of  precision  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  +  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  +  2;	  char    c    =    chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
189	[BUG]  [BUGGY]  char  c  =  chars[i]  +  3;  [CE]  possible  loss  of  precision  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  +  3;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  +  3;	  char    c    =    chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
190	[BUG]  [BUGGY]  char  c  =  chars[i]  +  4;  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  +  4;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  +  4;	  char    c    =    chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
191	[BUG]  [BUGGY]  char  c  =  chars[i]  +  5;  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  +  5;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  +  5;	  char    c    =    chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
192	[BUG]  [BUGGY]  Char  c  =  chars[i]  +  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =  chars[i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =  chars[i]  +  1;	  char    c    =    chars[i]    +    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
193	[BUG]  [BUGGY]  final  int  c  =  chars[i  +  1];  final  int  c  =  chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i  +  1];  final  int  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =  chars[i  +  1];  final  int  c  =  chars[i  +  2];	  final    char    c    =    chars[i    +    1];    final    char    c    =    chars[i    +    2];    	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	50	None	replace
194	[BUG]  [BUGGY]  String  c  =  chars[i  +  1];  final  char  c  =  chars[i  +  2];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i  +  1];  final  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i  +  1];  final  char  c  =  chars[i  +  2];	  final    char    c    =    chars[i    +    1];    final    char    c    =    chars[i    +    2];    	non-compiled	[CE]  incompatible  types	50	None	replace
195	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	Character  c  =  s.charAt(i  +  1);	  Character    c    =    s.charAt(i);    	compilable	  [FE]  StringIndexOutOfBoundsException  	105	1	replace
196	[BUG]  [BUGGY]  Character  c  =  s.charAt(i  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  s.charAt(i  +  1);	  Character    c    =    s.charAt(i);    	compilable	  [FE]  StringIndexOutOfBoundsException  	105	1	replace
197	[BUG]  [BUGGY]  Character  c  =  chars[i].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i].charAt(i);	  Character    c    =    s.charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	105	None	replace
198	[BUG]  [BUGGY]  Character  c  =  chars.charAt(i);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars.charAt(i);	  Character    c    =    s.charAt(i);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
199	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	Character  c  =(char)chars[i];	  Char    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	60	1	replace
200	[BUG]  [BUGGY]  Character  c  =(char)chars[i];  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(char)chars[i];	  Char    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	60	1	replace
201	[BUG]  [BUGGY]  Char  c  =(Character)chars[i];  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(Character)chars[i];	  Char    c    =(char)chars[i];    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
202	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)+  2;  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)+  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)+  2;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
203	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)+  3;  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)+  3;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)+  3;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
204	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)+  4;  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)+  4;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)+  4;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
205	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)+  5;  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)+  5;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)+  5;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
206	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)/  1;  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)/  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)/  1;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
207	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(i)+  1;  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(i)+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(i)+  1;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
208	[BUG]  [BUGGY]  final  String  c  =  chars[i].toString();  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toString();	  final    String    c    =    chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
209	[BUG]  [BUGGY]  final  String  c  =  s[i].toCharArray();  [CE]  array  required,  but  String  found  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  s[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  s[i].toCharArray();	  final    String    c    =    chars[i].toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	25	None	replace
210	[BUG]  [BUGGY]  final  String  c  =  chars[i].toCharArray(s);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toCharArray(s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toCharArray(s);	  final    String    c    =    chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
211	[BUG]  [BUGGY]  final  String  c  =  chars[i].getName();  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].getName();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].getName();	  final    String    c    =    chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
212	[BUG]  [BUGGY]  char  c  =  chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].toCharArray();	  final    String    c    =    chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
213	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  *  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =  chars[i  *  1];	  char    c    =    chars[i    +    1];    	compilable	  [FE]  ComparisonFailure  	46	1	replace
214	[BUG]  [BUGGY]  char  c  =  chars[i  *  1];  [FE]  ComparisonFailure  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  *  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i  *  1];	  char    c    =    chars[i    +    1];    	compilable	  [FE]  ComparisonFailure  	46	1	replace
215	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =  chars[i  +  3];	  char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	1	replace
216	[BUG]  [BUGGY]  char  c  =  chars[i  +  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i  +  3];	  char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	1	replace
217	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =  chars[i  +  2];	  char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	1	replace
218	[BUG]  [BUGGY]  char  c  =  chars[i  +  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i  +  2];	  char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	1	replace
219	[BUG]  [BUGGY]  char  c  =  chars[i  +  1]  *  chars[i];  [CE]  possible  loss  of  precision  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1]  *  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i  +  1]  *  chars[i];	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  possible  loss  of  precision	46	None	replace
220	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  final  char  c  =  chars[i  +  11];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  final  char  c  =  chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    final  char  c  =  chars[i  +  11];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	73	None	add
221	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  Final  char  c  =  chars[i  +  11];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  Final  char  c  =  chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    Final  char  c  =  chars[i  +  11];	  	non-compiled	[CE]  not  a  statement	73	None	add
222	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  final  char  c  =  chars[i  +  12];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  final  char  c  =  chars[i  +  12];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    final  char  c  =  chars[i  +  12];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	73	None	add
223	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  char  c  =  chars[i  +  11];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  char  c  =  chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    char  c  =  chars[i  +  11];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	73	None	add
224	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  final  String  c  =  chars[i  +  11];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  final  String  c  =  chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    final  String  c  =  chars[i  +  11];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	73	None	add
225	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  String  c  =  chars[i  +  11];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  String  c  =  chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    String  c  =  chars[i  +  11];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	73	None	add
226	[BUG]  [BUGGY]  final  char  c  =  s[i].toString();  [CE]  array  required,  but  String  found  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].toString();	  final    char    c    =    chars[i].toString();    	non-compiled	[CE]  array  required,  but  String  found	29	None	replace
227	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toString();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toString();	  final    char    c    =    chars[i].toString();    	non-compiled	[CE]  ';'  expected	29	None	replace
228	[BUG]  [BUGGY]  final  char  c  =  chars[i].toString().trim();  [CE]  char  cannot  be  dereferenced  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toString().trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toString().trim();	  final    char    c    =    chars[i].toString();    	non-compiled	[CE]  char  cannot  be  dereferenced	29	None	replace
229	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =(char)chars[0];	  final    char    c    =(char)chars[0];    	compilable	  [FE]  ComparisonFailure  	79	1	replace
230	[BUG]  [BUGGY]  char  c  =(char)chars[0];  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[0];	  final    char    c    =(char)chars[0];    	compilable	  [FE]  ComparisonFailure  	79	1	replace
231	[BUG]  [BUGGY]  final  String  c  =(String)chars[0];  [CE]  inconvertible  types  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String)chars[0];	  final    char    c    =(char)chars[0];    	non-compiled	[CE]  inconvertible  types	79	None	replace
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[1];	  final    char    c    =(char)chars[0];    	compilable	  [FE]  ComparisonFailure  	79	1	replace
233	[BUG]  [BUGGY]  final  char  c  =(char)chars[1];  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[1];	  final    char    c    =(char)chars[0];    	compilable	  [FE]  ComparisonFailure  	79	1	replace
234	[BUG]  [BUGGY]  final  char  c  =(char)chars[0]  +  1;  [CE]  possible  loss  of  precision  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[0]  +  1;	  final    char    c    =(char)chars[0];    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
235	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".next ";  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".next ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".next ";	  final    String    c    =    chars[i]    +   ".next   ";    	non-compiled	[CE]  incompatible  types	119	None	replace
236	[BUG]  [BUGGY]  final  String  c  =  chars[i]  + ".next ",  s);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  + ".next ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  + ".next ",  s);	  final    String    c    =    chars[i]    +   ".next   ";    	non-compiled	[CE]  	119	None	replace
237	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".next ".charAt(i);  [CE]  possible  loss  of  precision  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".next ".charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".next ".charAt(i);	  final    String    c    =    chars[i]    +   ".next   ";    	non-compiled	[CE]  possible  loss  of  precision	119	None	replace
238	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  5;  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  5;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  5;	  final    char    c    =    chars[i]    +    2;    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
239	[BUG]  [BUGGY]  final  Character  c  =  chars[i]  +  2;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i]  +  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =  chars[i]  +  2;	  final    char    c    =    chars[i]    +    2;    	non-compiled	[CE]  incompatible  types	21	None	replace
240	[BUG]  [BUGGY]  final  String  c  =  chars[i].toCharArray(len);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toCharArray(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toCharArray(len);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
241	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(i);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(i);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
242	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(len  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(len  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(len  +  1);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
243	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(in);  [CE]  cannot  find  symbol  in  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(in);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(in);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  cannot  find  symbol  in	82	None	replace
244	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(code);  [CE]  cannot  find  symbol  code  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(code);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(code);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  cannot  find  symbol  code	82	None	replace
245	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(b);  [CE]  cannot  find  symbol  b  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(b);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(b);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  cannot  find  symbol  b	82	None	replace
246	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	31	None	add
247	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  String  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  String  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    String  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	31	None	add
248	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  c  =  s.charAt(i);  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  c  =  s.charAt(i);  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  c  =  s.charAt(i);  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
249	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  sb.append('?');  continue;  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  sb.append('?');  continue;  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  sb.append('?');  continue;  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
250	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  this.char  c  =  s.charAt(i);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  this.char  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i);  this.char  c  =  s.charAt(i);	  	non-compiled	[CE]  <identifier>  expected	31	None	add
251	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  Character  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  Character  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    Character  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	31	None	add
252	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  String  c  =  s.charAt(i);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  String  c  =  s.charAt(i);  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  String  c  =  s.charAt(i);  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
253	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  sb.append('?');  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  sb.append('?');  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i);  }  else  {  if(!Character.isISOControl(c))  {  sb.append('?');  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
254	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	Character  c  =(Character)chars[i  +  1];	  Character    c    =(Character)chars[i];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
255	[BUG]  [BUGGY]  Character  c  =(Character)chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i  +  1];	  Character    c    =(Character)chars[i];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
256	[BUG]  [BUGGY]  Character  c  =(Character)chars[i].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i].charAt(i);	  Character    c    =(Character)chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	59	None	replace
257	[BUG]  [BUGGY]  Character  c  =(Character)chars[i]  +  1;  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i]  +  1;	  Character    c    =(Character)chars[i];    	non-compiled	[CE]  incompatible  types	59	None	replace
258	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	Character  c  =(Character)chars[0];	  Character    c    =(Character)chars[i];    	compilable	  [FE]  ComparisonFailure  	59	1	replace
259	[BUG]  [BUGGY]  Character  c  =(Character)chars[0];  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[0];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[0];	  Character    c    =(Character)chars[i];    	compilable	  [FE]  ComparisonFailure  	59	1	replace
260	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  incomparable  types:  char  and  <null>	101	None	replace
261	[BUG]  [BUGGY]  String  c  =  s.toCharArray();  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toCharArray();	  char    c    =    s.toCharArray();    	non-compiled	[CE]  incompatible  types	106	None	replace
262	[BUG]  [BUGGY]  char  c  =  s.toCharArray()  +  i;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.toCharArray()  +  i;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.toCharArray()  +  i;	  char    c    =    s.toCharArray();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	106	None	replace
263	[BUG]  [BUGGY]  Char  c  =  s.toCharArray();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =  s.toCharArray();	  char    c    =    s.toCharArray();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
264	[BUG]  [BUGGY]  char  c  =  s.toCharArray(i);  [CE]  method  toCharArray  in  class  String  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.toCharArray(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.toCharArray(i);	  char    c    =    s.toCharArray();    	non-compiled	[CE]  method  toCharArray  in  class  String  cannot  be  applied  to  given  types;	106	None	replace
265	[BUG]  [BUGGY]  Character  c  =  s.toCharArray();  [CE]  incompatible  types  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  s.toCharArray();	  char    c    =    s.toCharArray();    	non-compiled	[CE]  incompatible  types	106	None	replace
266	[BUG]  [BUGGY]  final  char  c  =  s[i].toCharArray(chars);  [CE]  array  required,  but  String  found  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].toCharArray(chars);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].toCharArray(chars);	  final    char    c    =    chars[i].toCharArray(s);    	non-compiled	[CE]  array  required,  but  String  found	27	None	replace
267	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(s.charAt(i));  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(s.charAt(i));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(s.charAt(i));	  final    char    c    =    chars[i].toCharArray(s);    	non-compiled	[CE]  char  cannot  be  dereferenced	27	None	replace
268	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(c);  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(c);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(c);	  final    char    c    =    chars[i].toCharArray(s);    	non-compiled	[CE]  char  cannot  be  dereferenced	27	None	replace
269	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =(char)chars[i  +  1];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
270	[BUG]  [BUGGY]  char  c  =(char)chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i  +  1];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
271	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  +  2];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
272	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  +  2];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
273	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  +  3];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
274	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  +  3];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
275	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  +  11];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
276	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  11];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  +  11];	  final    char    c    =(char)chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
277	[BUG]  [BUGGY]  char  c  =  chars.charAt(i).toCharArray();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars.charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars.charAt(i).toCharArray();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
278	[BUG]  [BUGGY]  char  c  =  s.charAt(i),  chars.toCharArray();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i),  chars.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i),  chars.toCharArray();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  ';'  expected	37	None	replace
279	[BUG]  [BUGGY]  char  c  =  s.charAt(i,  len).toCharArray();  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i,  len).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i,  len).toCharArray();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	37	None	replace
280	[BUG]  [BUGGY]  String  c  =  s.charAt(i).toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.charAt(i).toCharArray();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	37	None	replace
281	[BUG]  [BUGGY]  char  c  =  s.charAt(i)+ ".toCharArray();  [CE]  unclosed  string  literal  [FE]                                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i)+ ".toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i)+ ".toCharArray();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
282	[BUG]  [BUGGY]  final  String  c  =  chars[i].trim().replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].trim().replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].trim().replace('.',  '/');	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
283	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('.',  '/').charAt(i);	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
284	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('.',  '/').toLowerCase();	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
285	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').charValue();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('.',  '/').charValue();	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
286	[BUG]  [BUGGY]  final  char  c  =  s.charAt(i).trim().replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s.charAt(i).trim().replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s.charAt(i).trim().replace('.',  '/');	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
287	[BUG]  [BUGGY]  char  c  =  chars[i].charValue();  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	111	None	replace
288	[BUG]  [BUGGY]  char  c  =  chars[i]  +  chars[i].charValue();  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  +  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  +  chars[i].charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	111	None	replace
289	[BUG]  [BUGGY]  char  c  =  s.charValue();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
290	[BUG]  [BUGGY]  char  c  =  s.charValue(i);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charValue(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charValue(i);	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
291	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+ "n   ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+ "n   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+ "n   ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	75	None	replace
292	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+ ".null ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+ ".null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+ ".null ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	75	None	replace
293	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+ ".n   ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+ ".n   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+ ".n   ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	75	None	replace
294	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+ ",n   ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+ ",n   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+ ",n   ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	75	None	replace
295	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  1]  + ".null ";  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  1]  + ".null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  1]  + ".null ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  incompatible  types	75	None	replace
296	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "none ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "none ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "none ";	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  incompatible  types	95	None	replace
297	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".none ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".none ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".none ";	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  incompatible  types	95	None	replace
298	[BUG]  [BUGGY]  char  c  =  chars[i]  + "none ";  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + "none ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + "none ";	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  incompatible  types	95	None	replace
299	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ",none ";  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ",none ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ",none ";	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  incompatible  types	95	None	replace
300	[BUG]  [BUGGY]  final  String  c  =  chars[i]  + ": ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  + ": ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  + ": ";	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	95	None	replace
301	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "  null ";  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "  null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "  null ";	  final    String    c    =    chars[i]    +       "null   ";    	non-compiled	[CE]  incompatible  types	94	None	replace
302	[BUG]  [BUGGY]  final  String  c  =  chars[i].substring(i  +  1,  len);  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].substring(i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].substring(i  +  1,  len);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
303	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len,  i);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len,  i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1,  len,  i);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
304	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1,  len  +  1);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
305	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len.length());  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len.length());  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1,  len.length());	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  int  cannot  be  dereferenced	87	None	replace
306	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len.length);  [CE]  int  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len.length);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1,  len.length);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  int  cannot  be  dereferenced	87	None	replace
307	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len).trim();  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len).trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1,  len).trim();	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
308	[BUG]  [BUGGY]  String  c  =  chars[i  +  1];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    final    char    c    =    chars[i    +    1];    	non-compiled	[CE]  incompatible  types	48	None	replace
309	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  int  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    final    char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	1	replace
310	[BUG]  [BUGGY]  final  int  c  =  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    final    char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	1	replace
311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  int  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	int  c  =  chars[i];	  char    c    =    chars[i];    int    c    =    chars[i];    	compilable	  [FE]  ComparisonFailure  	11	1	replace
312	[BUG]  [BUGGY]  int  c  =  chars[i];  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  int  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	int  c  =  chars[i];	  char    c    =    chars[i];    int    c    =    chars[i];    	compilable	  [FE]  ComparisonFailure  	11	1	replace
313	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  return  sb.toString();  }  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  return  sb.toString();  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  return  sb.toString();  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	1	None	replace
314	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)Character.toLowerCase(chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)Character.toLowerCase(chars[i]);	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	1	1	replace
315	[BUG]  [BUGGY]  final  char  c  =(char)Character.toLowerCase(chars[i]);  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)Character.toLowerCase(chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)Character.toLowerCase(chars[i]);	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i];    	compilable	  [FE]  ComparisonFailure  	1	1	replace
316	[BUG]  [BUGGY]  final  String  c  =(String)chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String)chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String)chars[i].toCharArray();	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
317	[BUG]  [BUGGY]  char  c  =(char)chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].toCharArray();	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
318	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].toString();  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].toString();	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
319	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].toCharArray()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].toCharArray()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].toCharArray()  +  1;	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
320	[BUG]  [BUGGY]  final  char  c  =(char)s[i].toCharArray();  [CE]  array  required,  but  String  found  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)s[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)s[i].toCharArray();	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	80	None	replace
321	[BUG]  [BUGGY]  final  String  c  =  chars[i]  +  chars[i];  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  +  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  +  chars[i];	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  incompatible  types	120	None	replace
322	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  chars[i].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  chars[i].charAt(i);	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	120	None	replace
323	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  chars[i].toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  chars[i].toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  chars[i].toLowerCase();	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	120	None	replace
324	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  chars[i].toCharArray();	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	120	None	replace
325	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  chars[i].replace('',  '/');  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  chars[i].replace('',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  chars[i].replace('',  '/');	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  empty  character  literal	120	None	replace
326	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  chars[i].trim();  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  chars[i].trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  chars[i].trim();	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	120	None	replace
327	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "   ";  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "   ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
328	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "/ ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "/ ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "/ ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
329	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "_ ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "_ ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "_ ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
330	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "/n   ";  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "/n   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "/n   ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
331	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].charAt(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].charAt(i  +  1);	  final    char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	125	None	replace
332	[BUG]  [BUGGY]  final  String  c  =(String)chars[i].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String)chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String)chars[i].charAt(i);	  final    char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	125	None	replace
333	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].charAt(i]);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].charAt(i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].charAt(i]);	  final    char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  ')'  expected	125	None	replace
334	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].charAt(i++);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].charAt(i++);	  final    char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	125	None	replace
335	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  +  1].charAt(i);	  final    char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	125	None	replace
336	[BUG]  [BUGGY]  final  char  c  =  chars[i].getChars(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getChars(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getChars(i  +  1);	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
337	[BUG]  [BUGGY]  final  String  c  =  chars[i].getChars(i);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].getChars(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].getChars(i);	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
338	[BUG]  [BUGGY]  final  char  c  =  chars[i].getChars(i,  len);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getChars(i,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getChars(i,  len);	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
339	[BUG]  [BUGGY]  final  char  c  =  chars[i].getChar(i);  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getChar(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getChar(i);	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
340	[BUG]  [BUGGY]  final  char  c  =  chars[i].getChars(i  +  1,  len);  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getChars(i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getChars(i  +  1,  len);	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
341	[BUG]  [BUGGY]  final  char  c  =  chars[i].getChars(i++);  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getChars(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getChars(i++);	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
342	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(len);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase(len);	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
343	[BUG]  [BUGGY]  final  String  c  =  chars[i].trim().toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].trim().toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].trim().toLowerCase();	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
344	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(false);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(false);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase(false);	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
345	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(s);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase(s);	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
346	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(null);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(null);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase(null);	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
347	[BUG]  [BUGGY]  char  c  =  chars[i]  + ",n   ";  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ",n   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ",n   ";	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  incompatible  types	93	None	replace
348	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";ne   ";  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";ne   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";ne   ";	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  incompatible  types	93	None	replace
349	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";nar   ";  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";nar   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";nar   ";	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  incompatible  types	93	None	replace
350	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";ne: ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";ne: ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";ne: ";	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  incompatible  types	93	None	replace
351	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";n't  be  null. ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";n't  be  null. ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";n't  be  null. ";	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  incompatible  types	93	None	replace
352	[BUG]  [BUGGY]  String  c  =(chars[i]!=  null)?  chars[i]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]!=  null)?  chars[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]!=  null)?  chars[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	97	None	replace
353	[BUG]  [BUGGY]  String  c  =(s[i]!=  null)?  chars[i]  :  s.toCharArray();  [CE]  array  required,  but  String  found  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(s[i]!=  null)?  chars[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(s[i]!=  null)?  chars[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	97	None	replace
354	[BUG]  [BUGGY]  char  c  =(s[i]!=  null)?  chars[i]  :  s.toCharArray();  [CE]  array  required,  but  String  found  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(s[i]!=  null)?  chars[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(s[i]!=  null)?  chars[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	97	None	replace
355	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	97	None	replace
356	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  s[i]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  s[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  s[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	97	None	replace
357	[BUG]  [BUGGY]  String  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	97	None	replace
358	[BUG]  [BUGGY]  char  c  =(char)chars[i];  char  c  =(char)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i];  char  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =(char)chars[i];    char  c  =(char)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	43	None	add
359	[BUG]  [BUGGY]  char  c  =(char)chars[i];  String  c  =(char)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i];  String  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =(char)chars[i];    String  c  =(char)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	43	None	add
360	[BUG]  [BUGGY]  char  c  =(char)chars[i];  Character  c  =(char)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i];  Character  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =(char)chars[i];    Character  c  =(char)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	43	None	add
361	[BUG]  [BUGGY]  char  c  =(char)chars[i];  Char  c  =(char)chars[i];  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i];  Char  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =(char)chars[i];    Char  c  =(char)chars[i];	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
362	[BUG]  [BUGGY]  char  c  =(char)chars[i];  char  c  =(Char)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i];  char  c  =(Char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =(char)chars[i];    char  c  =(Char)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	43	None	add
363	[BUG]  [BUGGY]  char  c  =(char)chars[i];  int  c  =(char)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i];  int  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =(char)chars[i];    int  c  =(char)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	43	None	add
364	[BUG]  [BUGGY]  final  String  c  =  chars[i].trim().replace(',',  '.');  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].trim().replace(',',  '.');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].trim().replace(',',  '.');	  final    String    c    =    chars[i].trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	38	None	replace
365	[BUG]  [BUGGY]  char  c  =  chars[i].trim();  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].trim();	  final    String    c    =    chars[i].trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	38	None	replace
366	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1,  len);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i  +  1,  len);	  final    char    c    =    chars[i].charAt(i    +    1);    	non-compiled	[CE]  char  cannot  be  dereferenced	14	None	replace
367	[BUG]  [BUGGY]  final  char  c  =  chars[i].toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toLowerCase();	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
368	[BUG]  [BUGGY]  final  String  c  =  chars[i].toLowerCase(len);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toLowerCase(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toLowerCase(len);	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
369	[BUG]  [BUGGY]  final  String  c  =  chars[i].toLowerCase(false);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toLowerCase(false);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toLowerCase(false);	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
370	[BUG]  [BUGGY]  final  String  c  =  chars[i].toUpperCase();  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toUpperCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toUpperCase();	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
371	[BUG]  [BUGGY]  final  char  c  =  chars[i].toLowerCase(len);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toLowerCase(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toLowerCase(len);	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
372	[BUG]  [BUGGY]  final  String  c  =  chars[i].toLowerCase()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toLowerCase()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toLowerCase()  +  1;	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
373	[BUG]  [BUGGY]  String  c  =  chars.charAt(i);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars.charAt(i);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
374	[BUG]  [BUGGY]  String  c  =  s.substring(i,  chars.length);  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i,  chars.length);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i,  chars.length);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	34	None	replace
375	[BUG]  [BUGGY]  String  c  =  s.charAt(i,  len);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.charAt(i,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.charAt(i,  len);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	34	None	replace
376	[BUG]  [BUGGY]  String  c  =  s.substring(i,  chars[i]);  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i,  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i,  chars[i]);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	34	None	replace
377	[BUG]  [BUGGY]  String  c  =  s.charAt(i)+  1;  [CE]  incompatible  types  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.charAt(i)+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.charAt(i)+  1;	  String    c    =    s.charAt(i);    	non-compiled	[CE]  incompatible  types	34	None	replace
378	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no   ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no   ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
379	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no  action ";  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no  action ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no  action ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
380	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no ",  s);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no ",  s);	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  	96	None	replace
381	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no-existing ";  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no-existing ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no-existing ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
382	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no-color ";  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no-color ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no-color ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
383	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =  s.charAt(i  +  1);	  char    c    =    s.charAt(i);    	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	replace
384	[BUG]  [BUGGY]  char  c  =  s.charAt(i  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i  +  1);	  char    c    =    s.charAt(i);    	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	replace
385	[BUG]  [BUGGY]  char  c  =  s.charAt(i)+  1;  [CE]  possible  loss  of  precision  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i)+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i)+  1;	  char    c    =    s.charAt(i);    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
386	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =  s.charAt(i++);	  char    c    =    s.charAt(i);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
387	[BUG]  [BUGGY]  char  c  =  s.charAt(i++);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i++);	  char    c    =    s.charAt(i);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
388	[BUG]  [BUGGY]  char  c  =  s.charAt(i];  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i];	  char    c    =    s.charAt(i);    	non-compiled	[CE]  ')'  expected	32	None	replace
389	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+'.';  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+'.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+'.';	  final    char    c    =    chars[i    +    1]+'.';    	non-compiled	[CE]  incompatible  types	76	None	replace
390	[BUG]  [BUGGY]  final  Character  c  =  chars[i  +  1]+'.';  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i  +  1]+'.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =  chars[i  +  1]+'.';	  final    char    c    =    chars[i    +    1]+'.';    	non-compiled	[CE]  incompatible  types	76	None	replace
391	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i  +  1]+'.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  int  c  =  chars[i  +  1]+'.';	  final    char    c    =    chars[i    +    1]+'.';    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	76	1	replace
392	[BUG]  [BUGGY]  final  int  c  =  chars[i  +  1]+'.';  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i  +  1]+'.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =  chars[i  +  1]+'.';	  final    char    c    =    chars[i    +    1]+'.';    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	76	1	replace
393	[BUG]  [BUGGY]  char  c  =  chars[i  +  1]+'.';  [CE]  possible  loss  of  precision  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1]+'.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i  +  1]+'.';	  final    char    c    =    chars[i    +    1]+'.';    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
394	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toString();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toString();	  final    String    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	77	None	replace
395	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toCharArray()  +  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toCharArray()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toCharArray()  +  1;	  final    String    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	77	None	replace
396	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toCharArray(0,  len);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toCharArray(0,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toCharArray(0,  len);	  final    String    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	77	None	replace
397	[BUG]  [BUGGY]  final  String  c  =  s[i],  chars.toCharArray();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  s[i],  chars.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  s[i],  chars.toCharArray();	  final    String    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	77	None	replace
398	[BUG]  [BUGGY]  Char  c  =  chars[i  +  1];  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    char    c    =    chars[i    +    1];    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
399	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	Character  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
400	[BUG]  [BUGGY]  Character  c  =  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
401	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i  +  1);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
402	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i,  len);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i,  len);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
403	[BUG]  [BUGGY]  final  String  c  =  chars[i].trim().charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].trim().charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].trim().charAt(i);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
404	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i++);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i++);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
405	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i).charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i).charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i).charAt(i);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
406	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i));	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  ';'  expected	40	None	replace
407	[BUG]  [BUGGY]  final  String  c  =  chars[i].toCharArray().trim();  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toCharArray().trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toCharArray().trim();	  final    char    c    =    chars[i].toCharArray().trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	83	None	replace
408	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().trim(i);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().trim(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().trim(i);	  final    char    c    =    chars[i].toCharArray().trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	83	None	replace
409	[BUG]  [BUGGY]  final  char  c  =  s[i].toCharArray().trim();  [CE]  array  required,  but  String  found  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].toCharArray().trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].toCharArray().trim();	  final    char    c    =    chars[i].toCharArray().trim();    	non-compiled	[CE]  array  required,  but  String  found	83	None	replace
410	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(i  +  1,  len).trim();  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(i  +  1,  len).trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().substring(i  +  1,  len).trim();	  final    char    c    =    chars[i].toCharArray().trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	83	None	replace
411	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(i);  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().substring(i);	  final    char    c    =    chars[i].toCharArray().trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	83	None	replace
412	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(0);  [CE]  char  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(0);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(0);	  char    c    =    chars[i];    char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	110	None	replace
413	[BUG]  [BUGGY]  final  char  c  =  s[i].toCharArray(chars[i]);  [CE]  array  required,  but  String  found  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].toCharArray(chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].toCharArray(chars[i]);	  final    char    c    =    s[i].toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	26	None	replace
414	[BUG]  [BUGGY]  final  char  c  =  s[i].toCharArray().charAt(i);  [CE]  array  required,  but  String  found  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].toCharArray().charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].toCharArray().charAt(i);	  final    char    c    =    s[i].toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	26	None	replace
415	[BUG]  [BUGGY]  final  Character  c  =  chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =  chars[i].toCharArray();	  final    char    c    =    s[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	26	None	replace
416	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  Character  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    Final    char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
417	[BUG]  [BUGGY]  final  Character  c  =  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    Final    char    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
418	[BUG]  [BUGGY]  Final  char  c  =  chars[i  +  1];  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Final  char  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Final  char  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    Final    char    c    =    chars[i    +    1];    	non-compiled	[CE]  not  a  statement	49	None	replace
419	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]  *  chars[i];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]  *  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]  *  chars[i];	  final    String    c    =    chars[i    +    1];    	non-compiled	[CE]  incompatible  types	72	None	replace
420	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  11];  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  11];	  final    String    c    =    chars[i    +    1];    	non-compiled	[CE]  incompatible  types	72	None	replace
421	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toString()  +  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toString()  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toString()  +  1);	  final    String    c    =    chars[i],    s.toString());    	non-compiled	[CE]  ';'  expected	124	None	replace
422	[BUG]  [BUGGY]  final  String  c  =  s[i],  chars.toString());  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  s[i],  chars.toString());  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  s[i],  chars.toString());	  final    String    c    =    chars[i],    s.toString());    	non-compiled	[CE]  ';'  expected	124	None	replace
423	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toString()  +  1);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toString()  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toString()  +  1);	  final    String    c    =    chars[i],    s.toString());    	non-compiled	[CE]  ';'  expected	124	None	replace
424	[BUG]  [BUGGY]  String  c  =  chars[i];  Char  c  =  chars[i];  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i];  Char  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i];  Char  c  =  chars[i];	  char    c    =    chars[i];    Char    c    =    chars[i];    	non-compiled	[CE]  incompatible  types	10	None	replace
425	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  len];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    *    len];    final  char  c  =(char)chars[i  *  len];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	126	None	add
426	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  Len];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  Len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    *    len];    final  char  c  =(char)chars[i  *  Len];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	126	None	add
427	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  LEN];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  LEN];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    *    len];    final  char  c  =(char)chars[i  *  LEN];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	126	None	add
428	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(Char)chars[i  *  len];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(Char)chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    *    len];    final  char  c  =(Char)chars[i  *  len];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	126	None	add
429	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  len];  Final  char  c  =(char)chars[i  *  len];  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  len];  Final  char  c  =(char)chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    *    len];    Final  char  c  =(char)chars[i  *  len];	  	non-compiled	[CE]  not  a  statement	126	None	add
430	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  String  c  =(char)chars[i  *  len];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  String  c  =(char)chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    *    len];    final  String  c  =(char)chars[i  *  len];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	126	None	add
431	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  6;  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  6;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  6;	  final    char    c    =    chars[i]    +    3;    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
432	[BUG]  [BUGGY]  final  char  c  =(Char)chars[i];  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(Char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(Char)chars[i];	  final    char    c    =(char)chars[i];    final    char    c    =(Char)chars[i];    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
433	[BUG]  [BUGGY]  Char  c  =(Char)chars[i];  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(Char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(Char)chars[i];	  final    char    c    =(char)chars[i];    final    char    c    =(Char)chars[i];    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
434	[BUG]  [BUGGY]  char  c  =  chars[i]  + ".none ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ".none ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ".none ";	  final    String    c    =    chars[i]    +   ".none   ";    	non-compiled	[CE]  incompatible  types	118	None	replace
435	[BUG]  [BUGGY]  final  String  c  =  chars[i]  + ".none ",  s);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  + ".none ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  + ".none ",  s);	  final    String    c    =    chars[i]    +   ".none   ";    	non-compiled	[CE]  	118	None	replace
436	[BUG]  [BUGGY]  final  String  c  =  chars[i].trim().toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].trim().toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].trim().toCharArray();	  final    char    c    =    chars[i].trim().toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	41	None	replace
437	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toCharArray(s);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toCharArray(s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toCharArray(s);	  final    char    c    =    chars[i].trim().toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	41	None	replace
438	[BUG]  [BUGGY]  final  char  c  =  s[i].trim().toCharArray();  [CE]  array  required,  but  String  found  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].trim().toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].trim().toCharArray();	  final    char    c    =    chars[i].trim().toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	41	None	replace
439	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toString();  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toString();	  final    char    c    =    chars[i].trim().toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	41	None	replace
440	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toCharArray(len);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toCharArray(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toCharArray(len);	  final    char    c    =    chars[i].trim().toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	41	None	replace
441	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').replace(':',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').replace(':',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/').replace(':',  '/');	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
442	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/',  len);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/',  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/',  len);	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
443	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/')+  1;  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/')+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/')+  1;	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
444	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/').toCharArray();	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
445	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/',  chars[i]);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/',  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/',  chars[i]);	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
446	[BUG]  [BUGGY]  final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
447	[BUG]  [BUGGY]  final  String  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [CE]  array  required,  but  String  found  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  array  required,  but  String  found	108	None	replace
448	[BUG]  [BUGGY]  final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
449	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
450	[BUG]  [BUGGY]  final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [CE]  cannot  find  symbol  String  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  cannot  find  symbol  String	108	None	replace
451	[BUG]  [BUGGY]  final  String  c  =(Strings[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [CE]  cannot  find  symbol  Strings  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(Strings[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(Strings[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  cannot  find  symbol  Strings	108	None	replace
452	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  3];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    final  char  c  =  chars[i  +  3];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	68	None	add
453	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  4];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  4];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    final  char  c  =  chars[i  +  4];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	68	None	add
454	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  Final  char  c  =  chars[i  +  3];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  Final  char  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    Final  char  c  =  chars[i  +  3];	  	non-compiled	[CE]  not  a  statement	68	None	add
455	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  5];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  5];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    final  char  c  =  chars[i  +  5];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	68	None	add
456	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  final  int  c  =  chars[i  +  3];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  final  int  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    final  int  c  =  chars[i  +  3];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	68	None	add
457	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  char  c  =  chars[i  +  3];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  char  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    char  c  =  chars[i  +  3];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	68	None	add
458	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  sb.append('?');  }  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  sb.append('?');  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  sb.append('?');  }	  final    char    c    =(char)chars[i];    final    String    c    =(char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	4	None	replace
459	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  sb.append('/');  }  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  sb.append('/');  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  sb.append('/');  }	  final    char    c    =(char)chars[i];    final    String    c    =(char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	4	None	replace
460	[BUG]  [BUGGY]  final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
461	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
462	[BUG]  [BUGGY]  final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
463	[BUG]  [BUGGY]  final  String  c  =(Strings[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [CE]  cannot  find  symbol  Strings  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(Strings[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(Strings[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  cannot  find  symbol  Strings	107	None	replace
464	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  2];  [CE]  incomparable  types:  char  and  <null>  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  2];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
465	[BUG]  [BUGGY]  final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [CE]  cannot  find  symbol  String  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  cannot  find  symbol  String	107	None	replace
466	[BUG]  [BUGGY]  String  c  =  chars[i]  *  2;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  chars[i]  *  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  chars[i]  *  2;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  incompatible  types	47	None	replace
467	[BUG]  [BUGGY]  char  c  =  chars[i]  *  2  +  1;  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  2  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  2  +  1;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
468	[BUG]  [BUGGY]  char  c  =  chars[i]  *  4;  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  4;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  4;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
469	[BUG]  [BUGGY]  char  c  =  chars[i]  *  3;  [CE]  possible  loss  of  precision  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  3;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  3;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
470	[BUG]  [BUGGY]  char  c  =  chars[i]  *  1;  [CE]  possible  loss  of  precision  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  1;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
471	[BUG]  [BUGGY]  char  c  =  chars[i]  *  5;  [CE]  possible  loss  of  precision  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  5;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  5;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
472	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  int  c  =  chars[i];	  final    char    c    =    chars[i    +    1];    final    int    c    =    chars[i    +    1];    	compilable	  [FE]  ComparisonFailure  	81	1	replace
473	[BUG]  [BUGGY]  final  int  c  =  chars[i];  [FE]  ComparisonFailure  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =  chars[i];	  final    char    c    =    chars[i    +    1];    final    int    c    =    chars[i    +    1];    	compilable	  [FE]  ComparisonFailure  	81	1	replace
474	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  int  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	int  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    final    int    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	1	replace
475	[BUG]  [BUGGY]  int  c  =  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  int  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	int  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    final    int    c    =    chars[i    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	1	replace
476	[BUG]  [BUGGY]  final  String  c  =  chars[i]  +  4;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i]  +  4;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i]  +  4;	  final    char    c    =    chars[i]    +    4;    	non-compiled	[CE]  incompatible  types	23	None	replace
477	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  11];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
478	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  11];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  11];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
479	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  12];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  +  12];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
480	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  12];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  12];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  12];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
481	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  13];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  +  13];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
482	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  13];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  13];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  13];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
483	[BUG]  [BUGGY]  final  String  c  =(String)chars[i]  +  1;  [CE]  inconvertible  types  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String)chars[i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String)chars[i]  +  1;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  inconvertible  types	57	None	replace
484	[BUG]  [BUGGY]  final  char  c  =(char)chars[i]  +  2;  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i]  +  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i]  +  2;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	57	None	replace
485	[BUG]  [BUGGY]  final  char  c  =(char)chars[i]  +  3;  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i]  +  3;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i]  +  3;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	57	None	replace
486	[BUG]  [BUGGY]  final  char  c  =(char)chars[i]  +  4;  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i]  +  4;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i]  +  4;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	57	None	replace
487	[BUG]  [BUGGY]  final  Character  c  =(Character)chars[i]  +  1;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =(Character)chars[i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =(Character)chars[i]  +  1;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  incompatible  types	57	None	replace
488	[BUG]  [BUGGY]  final  char  c  =(char)chars[i]  +  1L;  [CE]  possible  loss  of  precision  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i]  +  1L;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i]  +  1L;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	57	None	replace
489	[BUG]  [BUGGY]  char  c  =(char)chars[i]  +  1;  [CE]  possible  loss  of  precision  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i]  +  1;	  char    c    =(char)chars[i];    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
490	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(i++);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(i++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(i++);	  final    char    c    =    chars[i].charAt(i++);    	non-compiled	[CE]  char  cannot  be  dereferenced	16	None	replace
491	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i++,  len);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i++,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i++,  len);	  final    char    c    =    chars[i].charAt(i++);    	non-compiled	[CE]  char  cannot  be  dereferenced	16	None	replace
492	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i,  len++);  [CE]  cannot  assign  a  value  to  final  variable  len  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i,  len++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i,  len++);	  final    char    c    =    chars[i].charAt(i++);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  len	16	None	replace
493	[BUG]  [BUGGY]  String  c  =(char)chars[i];  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(char)chars[i];	  final    char    c    =(char)chars[i];    String    c    =(char)chars[i];    	non-compiled	[CE]  incompatible  types	6	None	replace
494	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1];  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i  +  1];	  final    char    c    =    chars[i].charAt(i];    	non-compiled	[CE]  ')'  expected	89	None	replace
495	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i];  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i];	  final    char    c    =    chars[i].charAt(i];    	non-compiled	[CE]  ')'  expected	89	None	replace
496	[BUG]  [BUGGY]  String  c  =(chars[i]!=  null)?  chars[i]  :  chars[i];  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]!=  null)?  chars[i]  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]!=  null)?  chars[i]  :  chars[i];	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
497	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  s[i];  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  s[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i]  :  s[i];	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
498	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  s[i];  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  s[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  chars[i]  :  s[i];	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
499	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i];  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i];	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
500	[BUG]  [BUGGY]  String  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i];  [CE]  incomparable  types:  char  and  <null>  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i];	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
501	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
502	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  c  =(char)chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    final  char  c  =(char)chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	55	None	add
503	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  c  =(Char)chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  c  =(Char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    final  char  c  =(Char)chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	55	None	add
504	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  Final  char  c  =(char)chars[i  +  1];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  Final  char  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    Final  char  c  =(char)chars[i  +  1];	  	non-compiled	[CE]  not  a  statement	55	None	add
505	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  String  c  =(char)chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  String  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    final  String  c  =(char)chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	55	None	add
506	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  c  =(char)chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  c  =(char)chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    final  char  c  =(char)chars[i  +  2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	55	None	add
507	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  char  c  =(char)chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  char  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    char  c  =(char)chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	55	None	add
508	[BUG]  [BUGGY]  final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
509	[BUG]  [BUGGY]  final  String  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  array  required,  but  String  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	109	None	replace
510	[BUG]  [BUGGY]  final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
511	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
512	[BUG]  [BUGGY]  final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  cannot  find  symbol  String  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  cannot  find  symbol  String	109	None	replace
513	[BUG]  [BUGGY]  final  String  c  =(s[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  array  required,  but  String  found  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(s[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(s[i  +  1]  ==  null)?  chars[i  +  1]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	109	None	replace
514	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/').toLowerCase();	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
515	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').replace(':',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').replace(':',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/').replace(':',  '/');	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
516	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/',  chars[i]);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/',  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/',  chars[i]);	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
517	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/',  len);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/',  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/',  len);	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
518	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/').toCharArray();	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
519	[BUG]  [BUGGY]  char  c  =  chars[i],  c  =  chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i],  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i],  c  =  chars[i];	  char    c    =    chars[i];    char    c    =    chars[i];    	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	7	None	replace
520	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/')+  1;  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/')+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/')+  1;	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
521	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').replace('-',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').replace('-',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/').replace('-',  '/');	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
522	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  LENE];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  len];  final  char  c  =(char)chars[i  *  LENE];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    *    len];    final  char  c  =(char)chars[i  *  LENE];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	126	None	add
523	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase(this);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase(this);	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	39	None	replace
524	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  final  int  c  =  chars[i  +  11];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  final  int  c  =  chars[i  +  11];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    final  int  c  =  chars[i  +  11];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	73	None	add
525	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
526	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
527	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
528	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
529	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  '/')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  1]!=  '/')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
530	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  '/')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  '/')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  '/')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
531	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '-')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  1]  ==  '-')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
532	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '-')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '-')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  '-')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
533	[BUG]  [BUGGY]  final  String  c  =  chars[i].toCharArray(i);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toCharArray(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toCharArray(i);	  final    String    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	102	None	replace
534	[BUG]  [BUGGY]  final  char  c  =  chars[i]  *  2;  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  *  2;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  *  2;	  final    char    c    =    chars[i]    +    2;    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
535	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  1]+'.';  [CE]  possible  loss  of  precision  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  1]+'.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  1]+'.';	  final    char    c    =    chars[i    +    1]+'.';    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
536	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ",.null ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ",.null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ",.null ";	  final    String    c    =    chars[i]    +   ".n       ";    	non-compiled	[CE]  incompatible  types	64	None	replace
537	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".no-data ";  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".no-data ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".no-data ";	  final    String    c    =    chars[i]    +   ".n       ";    	non-compiled	[CE]  incompatible  types	64	None	replace
538	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  s  :  chars[i].toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  s  :  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  s  :  chars[i].toCharArray();	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	100	None	replace
539	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].charAt(i);  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  s  :  chars[i].charAt(i);	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	100	None	replace
540	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].trim();  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  s  :  chars[i].trim();	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	100	None	replace
541	[BUG]  [BUGGY]  Character  c  =  chars[i];  Char  c  =  c;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i];  Char  c  =  c;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i];  Char  c  =  c;	  char    c    =    chars[i];    Char    c    =    chars[i];    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
542	[BUG]  [BUGGY]  Character  c  =  chars[i];  Char  c  =  c.charAt(i);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i];  Char  c  =  c.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i];  Char  c  =  c.charAt(i);	  char    c    =    chars[i];    Char    c    =    chars[i];    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
543	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)-  1;  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)-  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)-  1;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
544	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";null ";  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";null ";	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  incompatible  types	93	None	replace
545	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";n ",  i++;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";n ",  i++;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";n ",  i++;	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  	93	None	replace
546	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i,  0,  len);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i,  0,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i,  0,  len);	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
547	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i,  0);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i,  0);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i,  0);	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
548	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  1L  +  1L;  [CE]  possible  loss  of  precision  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  1L  +  1L;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  1L  +  1L;	  final    char    c    =    chars[i]    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
549	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharArray());  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharArray());  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharArray());	  final    String    c    =    chars[i],    s.toString());    	non-compiled	[CE]  ';'  expected	124	None	replace
550	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.charAt(i);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.charAt(i);	  final    String    c    =    chars[i],    s.toString());    	non-compiled	[CE]  ';'  expected	124	None	replace
551	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/').charAt(i);	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
552	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').charValue();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/').charValue();	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
553	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/'  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/'  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/'  +  1);	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
554	[BUG]  [BUGGY]  char  c  =  chars[i],  c  =  chars[i].charValue();  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i],  c  =  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i],  c  =  chars[i].charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	111	None	replace
555	[BUG]  [BUGGY]  char  c  =  chars[i]  *  chars[i].charValue();  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  chars[i].charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	111	None	replace
556	[BUG]  [BUGGY]  final  String  c  =(char)chars[i];  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(char)chars[i];	  final    String    c    =(String)chars[i];    	non-compiled	[CE]  incompatible  types	54	None	replace
557	[BUG]  [BUGGY]  final  String  c  =(String)chars[i].toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(String)chars[i].toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(String)chars[i].toLowerCase();	  final    String    c    =(String)chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	54	None	replace
558	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  chars[i];  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'  +  chars[i];	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  possible  loss  of  precision	86	None	replace
559	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  chars[i].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'  +  chars[i].charAt(i);	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  char  cannot  be  dereferenced	86	None	replace
560	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  i;  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  i;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'  +  i;	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  possible  loss  of  precision	86	None	replace
561	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  chars[i].charValue();  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'  +  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'  +  chars[i].charValue();	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  char  cannot  be  dereferenced	86	None	replace
562	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  s[i]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  s[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  s[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	97	None	replace
563	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '/';  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '/';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '/';	  final    String    c    =    chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
564	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase().replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase().replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase().replace('.',  '/');	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
565	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.trim().replace('.',  '/');  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.trim().replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.trim().replace('.',  '/');	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  ';'  expected	112	None	replace
566	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/')+  1;  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/')+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('.',  '/')+  1;	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
567	[BUG]  [BUGGY]  char  c  =  chars[i],  c  =  chars[i].charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i],  c  =  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i],  c  =  chars[i].charAt(i);	  char    c    =    chars[i];    char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	110	None	replace
568	[BUG]  [BUGGY]  char  c  =  chars[i]  *  chars[i].charAt(i);  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  chars[i].charAt(i);	  char    c    =    chars[i];    char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	110	None	replace
569	[BUG]  [BUGGY]  char  c  =(chars[i  +  1]!=  null)?  s  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i  +  1]!=  null)?  s  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i  +  1]!=  null)?  s  :  chars[i  +  1];	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
570	[BUG]  [BUGGY]  char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  s;  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  s;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i  +  1]!=  '-')?  chars[i  +  1]  :  s;	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  incompatible  types	46	None	replace
571	[BUG]  [BUGGY]  char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  s;  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  s;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i  +  1]  ==  '/')?  chars[i  +  1]  :  s;	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  incompatible  types	46	None	replace
572	[BUG]  [BUGGY]  final  char  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [CE]  array  required,  but  String  found  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  array  required,  but  String  found	108	None	replace
573	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  s.toString();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
574	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  10];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  *  10];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
575	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  10];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  10];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  *  10];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
576	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  6];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(char)chars[i  *  6];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
577	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  *  6];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  *  6];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i  *  6];	  final    char    c    =(char)chars[i    *    len];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	1	replace
578	[BUG]  [BUGGY]  final  char  c  =  chars[i].getChars(len);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getChars(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getChars(len);	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
579	[BUG]  [BUGGY]  Final  char  c  =(char)chars[i];  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Final  char  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Final  char  c  =(char)chars[i];	  final    char    c    =(char)chars[i];    Final    char    c    =(char)chars[i];    	non-compiled	[CE]  not  a  statement	2	None	replace
580	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(i  +  1,  len);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().substring(i  +  1,  len);	  final    char    c    =    chars[i].toCharArray().trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	83	None	replace
581	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".none ",  s);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".none ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".none ",  s);	  final    String    c    =    chars[i]    +   ".none   ";    	non-compiled	[CE]  	118	None	replace
582	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  Char  c  =  s.charAt(i);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  Char  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    Char  c  =  s.charAt(i);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
583	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  int  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  int  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    int  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	31	None	add
584	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  ch  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  ch  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  ch  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	31	None	add
585	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i));  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i));	  	non-compiled	[CE]  ';'  expected	31	None	add
586	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(0,  i  +  1,  len);  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(0,  i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(0,  i  +  1,  len);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
587	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  i);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1,  i);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
588	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "  cannot  be  null. ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "  cannot  be  null. ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "  cannot  be  null. ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
589	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no-config ";  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no-config ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no-config ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
590	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no-string ";  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no-string ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no-string ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
591	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "no-resource ";  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "no-resource ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "no-resource ";	  final    String    c    =    chars[i]    +       "no   ";    	non-compiled	[CE]  incompatible  types	96	None	replace
592	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].charAt(len);  [CE]  char  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].charAt(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].charAt(len);	  final    char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	125	None	replace
593	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].getCharAt(i);  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].getCharAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].getCharAt(i);	  final    char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	125	None	replace
594	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  Class  <?>  c  =(Class  <?>)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  Class  <?>  c  =(Class  <?>)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    Class  <?>  c  =(Class  <?>)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	58	None	add
595	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  Character  chars  =(Character)chars[i];  [CE]  variable  chars  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  Character  chars  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    Character  chars  =(Character)chars[i];	  	non-compiled	[CE]  variable  chars  is  already  defined  in  method  sanitize(String)	58	None	add
596	[BUG]  [BUGGY]  final  char  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  array  required,  but  String  found  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(s[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	109	None	replace
597	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  s.toCharArray();	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    s.toCharArray();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
598	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '.'+i;  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '.'+i;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '.'+i;	  final    char    c    =    chars[i]    +    '.';    	non-compiled	[CE]  possible  loss  of  precision	121	None	replace
599	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '.',  len;  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '.',  len;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '.',  len;	  final    char    c    =    chars[i]    +    '.';    	non-compiled	[CE]  possible  loss  of  precision	121	None	replace
600	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i)+  1;  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(i)+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).charAt(i)+  1;	  final    char    c    =    chars[i].charAt(i).charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	90	None	replace
601	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(len);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).charAt(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).charAt(len);	  final    char    c    =    chars[i].charAt(i).charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	90	None	replace
602	[BUG]  [BUGGY]  char  c  =  s.charAt(i).toCharObject();  [CE]  char  cannot  be  dereferenced  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i).toCharObject();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i).toCharObject();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	37	None	replace
603	[BUG]  [BUGGY]  char  c  =  s.charAt(i).toCharString();  [CE]  char  cannot  be  dereferenced  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i).toCharString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i).toCharString();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	37	None	replace
604	[BUG]  [BUGGY]  char  c  =  s.charAt(i).toCharExpression();  [CE]  char  cannot  be  dereferenced  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i).toCharExpression();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i).toCharExpression();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	37	None	replace
605	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+ ".nothing ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+ ".nothing ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+ ".nothing ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	75	None	replace
606	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i]  +  1;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i]  +  1;	  final    char    c    =    chars[i].charAt(i];    	non-compiled	[CE]  ')'  expected	89	None	replace
607	[BUG]  [BUGGY]  final  char  c  =(chars[i].charAt(i));  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i].charAt(i));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i].charAt(i));	  final    char    c    =    chars[i].charAt(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	103	None	replace
608	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  1].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  1].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  1].toCharArray();	  final    String    c    =    chars[i    +    1];    	non-compiled	[CE]  char  cannot  be  dereferenced	72	None	replace
609	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  1].trim();  [CE]  char  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  1].trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  1].trim();	  final    String    c    =    chars[i    +    1];    	non-compiled	[CE]  char  cannot  be  dereferenced	72	None	replace
610	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Class  <?>  c  =  s.charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Class  <?>  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Class  <?>  c  =  s.charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	104	None	add
611	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Character  char  c  =  s.charAt(i);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Character  char  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Character  char  c  =  s.charAt(i);	  	non-compiled	[CE]  not  a  statement	104	None	add
612	[BUG]  [BUGGY]  char  c  =  chars[i  +  1];  char  c  =  chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i  +  1];  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    chars[i    +    1];    char  c  =  chars[i  +  2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	45	None	add
613	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toCharBuffer();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toCharBuffer();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toCharBuffer();	  final    String    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	77	None	replace
614	[BUG]  [BUGGY]  final  char  c  =(char)chars[0]  +  i;  [CE]  possible  loss  of  precision  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0]  +  i;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[0]  +  i;	  final    char    c    =(char)chars[0];    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
615	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharBuffer();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharBuffer();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharBuffer();	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
616	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.charAt(i);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.charAt(i);	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
617	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharBuffer(i);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharBuffer(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharBuffer(i);	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
618	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i  +  3);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i  +  3);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i  +  3);	  final    char    c    =    chars[i].charAt(i    +    1);    	non-compiled	[CE]  char  cannot  be  dereferenced	14	None	replace
619	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  ch  =(char)chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  char  ch  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    final  char  ch  =(char)chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	55	None	add
620	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".no. ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".no. ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".no. ";	  final    String    c    =    chars[i]    +   ".no   ";    	non-compiled	[CE]  incompatible  types	117	None	replace
621	[BUG]  [BUGGY]  char  c  =  chars.charAt(i);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars.charAt(i);	  char    c    =    s.charAt(i);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
622	[BUG]  [BUGGY]  char  c  =  chars[i]  + "/null ";  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + "/null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + "/null ";	  char    c    =    chars[i]    +   "n   ";    	non-compiled	[CE]  incompatible  types	92	None	replace
623	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].getChars(i);  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].getChars(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].getChars(i);	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
624	[BUG]  [BUGGY]  final  char  c  =(char)chars[i].toCharBuffer();  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i].toCharBuffer();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i].toCharBuffer();	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
625	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i).toCharStream();  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i).toCharStream();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i).toCharStream();	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	19	None	replace
626	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)+  1].toCharArray();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)+  1].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)+  1].toCharArray();	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  ';'  expected	19	None	replace
627	[BUG]  [BUGGY]  char  c  =(char)chars[i].charValue();  [CE]  char  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].charValue();	  char    c    =(char)chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	44	None	replace
628	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().restrictByNotNullOrUndefined();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().restrictByNotNullOrUndefined();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().restrictByNotNullOrUndefined();	  final    char    c    =    chars[i].trim().toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	41	None	replace
629	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(0,  i);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(0,  i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(0,  i);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
630	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(len);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(len);	  final    char    c    =    chars[i].substring(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	88	None	replace
631	[BUG]  [BUGGY]  Char  c  =(char)chars[i  +  1];  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(char)chars[i  +  1];	  Char    c    =(char)chars[i];    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
632	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  final  char  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    final  char  c  =  chars[i  +  2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	68	None	add
633	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  3];  final  String  c  =  chars[i  +  3];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  3];  final  String  c  =  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    3];    final  String  c  =  chars[i  +  3];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	68	None	add
634	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(len++);  [CE]  cannot  assign  a  value  to  final  variable  len  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(len++);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(len++);	  final    char    c    =    chars[i].charAt(i++);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  len	16	None	replace
635	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  10];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  +  10];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
636	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  10];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  10];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  10];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
637	[BUG]  [BUGGY]  char  c  =  chars[i].charAt(i)+  1;  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i].charAt(i)+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i].charAt(i)+  1;	  char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	33	None	replace
638	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(0,  len);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(0,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(0,  len);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
639	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(p);  [CE]  cannot  find  symbol  p  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(p);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(p);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  cannot  find  symbol  p	82	None	replace
640	[BUG]  [BUGGY]  char  c  =(char)chars[i].charAt(len);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].charAt(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].charAt(len);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
641	[BUG]  [BUGGY]  char  c  =(char)chars[i].charAt(i];  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].charAt(i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].charAt(i];	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  ')'  expected	85	None	replace
642	[BUG]  [BUGGY]  char  c  =(char)chars[i].getCharAt(i);  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i].getCharAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(char)chars[i].getCharAt(i);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
643	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  16];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  16];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
644	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  16];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  16];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  16];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
645	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  i);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(s,  i);	  final    char    c    =    chars[i].toCharArray(s);    	non-compiled	[CE]  char  cannot  be  dereferenced	27	None	replace
646	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len,  i);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len,  i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len,  i);	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	35	None	replace
647	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)+  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)+  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)+  1);	  final    char    c    =    chars[i].charAt(i));    	non-compiled	[CE]  ';'  expected	18	None	replace
648	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  s[i]  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  s[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  s[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	98	None	replace
649	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i].toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i].toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
650	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].charAt(i);  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].charAt(i);	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
651	[BUG]  [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i].charAt(i);  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  ==  null)?  chars[i]  :  chars[i].charAt(i);	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
652	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i],  ch  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =  chars[i],  ch  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	compilable	  [FE]  ComparisonFailure  	13	1	replace
653	[BUG]  [BUGGY]  char  c  =  chars[i],  ch  =  chars[i];  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i],  ch  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i],  ch  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	compilable	  [FE]  ComparisonFailure  	13	1	replace
654	[BUG]  [BUGGY]  char  c  =  chars[i];  String  ch  =  chars[i];  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i];  String  ch  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i];  String  ch  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	non-compiled	[CE]  incompatible  types	13	None	replace
655	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  2];  final  String  c  =  chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  2];  final  String  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    2];    final  String  c  =  chars[i  +  2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	70	None	add
656	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].toCharArray();  }  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].toCharArray();  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].toCharArray();  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  incomparable  types:  char  and  <null>	101	None	replace
657	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  char.charAt(i);  }  [CE]  class  expected  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  char.charAt(i);  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  char.charAt(i);  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  class  expected	101	None	replace
658	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].toCharArray();  }  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].toCharArray();  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].toCharArray();  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  incomparable  types:  char  and  <null>	101	None	replace
659	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].;  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].;  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
660	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].charAt(i);  }  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].charAt(i);  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].charAt(i);  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  incomparable  types:  char  and  <null>	101	None	replace
661	[BUG]  [BUGGY]  String  c  =  s.charAt(i).toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.charAt(i).toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.charAt(i).toLowerCase();	  String    c    =    s.charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	34	None	replace
662	[BUG]  [BUGGY]  sb.append(charAt(i));  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  sb.append(charAt(i));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	sb.append(charAt(i));	  String    c    =    s.charAt(i);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
663	[BUG]  [BUGGY]  c  =  s.charAt(i);  [CE]  cannot  find  symbol  c  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	c  =  s.charAt(i);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  cannot  find  symbol  c	34	None	replace
664	[BUG]  [BUGGY]  String  c  =  s.charAt(i).replace('',  '');  [CE]  empty  character  literal  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.charAt(i).replace('',  '');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.charAt(i).replace('',  '');	  String    c    =    s.charAt(i);    	non-compiled	[CE]  empty  character  literal	34	None	replace
665	[BUG]  [BUGGY]  final  String  c  =  chars[i].toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toLowerCase(Locale.ENGLISH);	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  Locale	61	None	replace
666	[BUG]  [BUGGY]  char  c  =  chars[i]  *  8;  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  8;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  8;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
667	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "  null. ";  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "  null. ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "  null. ";	  final    String    c    =    chars[i]    +       "null   ";    	non-compiled	[CE]  incompatible  types	94	None	replace
668	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ",null ",  s);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ",null ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ",null ",  s);	  final    String    c    =    chars[i]    +   ",null   ";    	non-compiled	[CE]  	116	None	replace
669	[BUG]  [BUGGY]  final  int  c  =  chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  int  c  =  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  int  c  =  chars[i].toCharArray();	  final    char    c    =    s[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	26	None	replace
670	[BUG]  [BUGGY]  final  char  c  =  s[i].toCharArray()  +  1;  [CE]  array  required,  but  String  found  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].toCharArray()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].toCharArray()  +  1;	  final    char    c    =    s[i].toCharArray();    	non-compiled	[CE]  array  required,  but  String  found	26	None	replace
671	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  3];  [CE]  incomparable  types:  char  and  <null>  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  3];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  3];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
672	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  2];  [CE]  incomparable  types:  char  and  <null>  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  null)?  chars[i  +  1]  :  chars[i  +  2];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
673	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  4];  [CE]  incomparable  types:  char  and  <null>  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  4];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  4];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
674	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  char  c  =(char)chars[i];  }  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  char  c  =(char)chars[i];  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  char  c  =(char)chars[i];  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	1	None	replace
675	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  final  char  c  =  chars[i];  }  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =  chars[i];  final  char  c  =  chars[i];  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =  chars[i];  final  char  c  =  chars[i];  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	1	None	replace
676	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    final  char  c  =(char)chars[1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	78	None	add
677	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    final  char  c  =(char)chars[2];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	78	None	add
678	[BUG]  [BUGGY]  char  c  =  s[i];  [CE]  array  required,  but  String  found  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s[i];	  char    c    =    chars[i];    String    c    =    chars[i];    	non-compiled	[CE]  array  required,  but  String  found	8	None	replace
679	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(0,  i).trim().replace('',  '/');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(0,  i).trim().replace('',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(0,  i).trim().replace('',  '/');	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  empty  character  literal	113	None	replace
680	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('',  '/').charValue();  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('',  '/').charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('',  '/').charValue();	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  empty  character  literal	113	None	replace
681	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  1]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	1	replace
682	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	1	replace
683	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "/null ";  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "/null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "/null ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
684	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".   ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".   ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".   ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
685	[BUG]  [BUGGY]  final  char  c  =(char)chars[i]  +  6;  [CE]  possible  loss  of  precision  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i]  +  6;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(char)chars[i]  +  6;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  possible  loss  of  precision	57	None	replace
686	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.toCharBuffer());  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.toCharBuffer());  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.toCharBuffer());	  final    String    c    =    chars[i],    s.toCharArray());    	non-compiled	[CE]  ';'  expected	122	None	replace
687	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(len);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(len);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
688	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i).toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i).toCharArray();	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
689	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i  +  1,  len);  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i  +  1,  len);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
690	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".next ",  chars[i];  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".next ",  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".next ",  chars[i];	  final    String    c    =    chars[i]    +   ".next   ";    	non-compiled	[CE]  	119	None	replace
691	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ",.next ";  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ",.next ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ",.next ";	  final    String    c    =    chars[i]    +   ".next   ";    	non-compiled	[CE]  incompatible  types	119	None	replace
692	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  1];  String  c  =  chars[i  +  2];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  1];  String  c  =  chars[i  +  2];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  1];  String  c  =  chars[i  +  2];	  final    char    c    =    chars[i    +    1];    String    c    =    chars[i    +    1];    	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	53	None	replace
693	[BUG]  [BUGGY]  Character  c  =  chars[i  +  1];  String  c  =  c.charAt(i  +  1];  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i  +  1];  String  c  =  c.charAt(i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i  +  1];  String  c  =  c.charAt(i  +  1];	  final    char    c    =    chars[i    +    1];    String    c    =    chars[i    +    1];    	non-compiled	[CE]  ')'  expected	53	None	replace
694	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "None ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "None ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "None ";	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  incompatible  types	95	None	replace
695	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "  nodes. ";  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "  nodes. ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "  nodes. ";	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  incompatible  types	95	None	replace
696	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + "none ",  s);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + "none ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + "none ",  s);	  final    String    c    =    chars[i]    +       "none   ";    	non-compiled	[CE]  	95	None	replace
697	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray()  *  1;  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray()  *  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray()  *  1;	  final    char    c    =    chars[i].toCharArray()    +    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
698	[BUG]  [BUGGY]  Character  c  =(Character)chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i].toCharArray();	  Character    c    =(Character)chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	59	None	replace
699	[BUG]  [BUGGY]  Character  c  =(Character)chars[i].getCharAt(i);  [CE]  char  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i].getCharAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i].getCharAt(i);	  Character    c    =(Character)chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	59	None	replace
700	[BUG]  [BUGGY]  char  c  =(char)chars[i];  char  ch  =(char)chars[i];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(char)chars[i];  char  ch  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =(char)chars[i];    char  ch  =(char)chars[i];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	43	None	add
701	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharArray(len);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharArray(len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharArray(len);	  final    char    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	28	None	replace
702	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  11];  final  char  c  =  chars[i  +  9];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  11];  final  char  c  =  chars[i  +  9];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =    chars[i    +    11];    final  char  c  =  chars[i  +  9];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	73	None	add
703	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";no ";  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";no ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";no ";	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  incompatible  types	93	None	replace
704	[BUG]  [BUGGY]  char  c  =  chars[i]  + ";n ",  chars[i]);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  + ";n ",  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  + ";n ",  chars[i]);	  char    c    =    chars[i]    +   ";n   ";    	non-compiled	[CE]  	93	None	replace
705	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =  chars[i  *  len];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
706	[BUG]  [BUGGY]  final  char  c  =  chars[i  *  len];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  *  len];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  *  len];	  final    char    c    =    chars[i    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	1	replace
707	[BUG]  [BUGGY]  Character  c  =(Character)chars[i].charValue();  [CE]  char  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i].charValue();	  Character    c    =(Character)chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	59	None	replace
708	[BUG]  [BUGGY]  Character  c  =(Character)chars[i].getCharacter();  [CE]  char  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i].getCharacter();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i].getCharacter();	  Character    c    =(Character)chars[i];    	non-compiled	[CE]  char  cannot  be  dereferenced	59	None	replace
709	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i++];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	Character  c  =(Character)chars[i++];	  Character    c    =(Character)chars[i];    	compilable	  [FE]  ComparisonFailure  	59	1	replace
710	[BUG]  [BUGGY]  Character  c  =(Character)chars[i++];  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i++];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =(Character)chars[i++];	  Character    c    =(Character)chars[i];    	compilable	  [FE]  ComparisonFailure  	59	1	replace
711	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)+  len;  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)+  len;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)+  len;	  final    char    c    =    chars[i].charAt(i)+    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
712	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i),  s.toCharArray();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i),  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i),  s.toCharArray();	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  ';'  expected	19	None	replace
713	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i)/.toCharArray();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i)/.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i)/.toCharArray();	  final    char    c    =    chars[i].charAt(i).toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
714	[BUG]  [BUGGY]  Character  c  =  s.charAt(i).toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  s.charAt(i).toCharArray();	  Character    c    =    s.charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	105	None	replace
715	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".next ",  chars[i]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".next ",  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".next ",  chars[i]);	  final    String    c    =    chars[i]    +   ".next   ";    	non-compiled	[CE]  	119	None	replace
716	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('/',  '.');  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('/',  '.');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('/',  '.');	  final    char    c    =    chars[i].trim().toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	41	None	replace
717	[BUG]  [BUGGY]  char  c  =(chars[i  +  1]  ==  null)?  s  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i  +  1]  ==  null)?  s  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i  +  1]  ==  null)?  s  :  chars[i  +  1];	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
718	[BUG]  [BUGGY]  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  chars[i  +  1];	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
719	[BUG]  [BUGGY]  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i  +  1]!=  null)?  chars[i  +  1]  :  s.toCharArray();	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
720	[BUG]  [BUGGY]  char  c  =(chars[i  +  1]  ==  null)? "null "  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i  +  1]  ==  null)? "null "  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i  +  1]  ==  null)? "null "  :  chars[i  +  1];	  char    c    =    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
721	[BUG]  [BUGGY]  final  String  c  =  chars[i],  s.substring(1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i],  s.substring(1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i],  s.substring(1);	  final    String    c    =    chars[i],    s.toCharArray();    	non-compiled	[CE]  ';'  expected	77	None	replace
722	[BUG]  [BUGGY]  final  String  c  =  chars[i].toLowerCase(s);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toLowerCase(s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toLowerCase(s);	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
723	[BUG]  [BUGGY]  final  char  c  =  chars[i].toUpperCase();  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toUpperCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toUpperCase();	  final    String    c    =    chars[i].toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	61	None	replace
724	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".js ";  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".js ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".js ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
725	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ": ";  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ": ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ": ";	  final    String    c    =    chars[i]    +   "n       ";    	non-compiled	[CE]  incompatible  types	62	None	replace
726	[BUG]  [BUGGY]  final  String  c  =(char)chars[i]  +  1;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =(char)chars[i]  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =(char)chars[i]  +  1;	  final    char    c    =(char)chars[i]    +    1;    	non-compiled	[CE]  incompatible  types	57	None	replace
727	[BUG]  [BUGGY]  final  char  c  =  chars[i].getChars('.');  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getChars('.');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getChars('.');	  final    char    c    =    chars[i].getChars(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
728	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  char  c  =(Char)chars[i];  }  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  char  c  =(Char)chars[i];  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  char  c  =(Char)chars[i];  }	  final    char    c    =(char)chars[i];    final    char    c    =(Char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	3	None	replace
729	[BUG]  [BUGGY]  Char  c  =(char)chars[i].charAt(i);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(char)chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(char)chars[i].charAt(i);	  char    c    =(char)chars[i].charAt(i);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
730	[BUG]  [BUGGY]  Char  c  =(chars[i]!=  null)?  chars[i]  :  s.toCharArray();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(chars[i]!=  null)?  chars[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(chars[i]!=  null)?  chars[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
731	[BUG]  [BUGGY]  Char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(chars[i]  ==  null)?  chars[i]  :  s.toCharArray();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toCharArray();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
732	[BUG]  [BUGGY]  static  final  String  c  =  chars[i  +  1]+'.';  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  static  final  String  c  =  chars[i  +  1]+'.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	static  final  String  c  =  chars[i  +  1]+'.';	  final    char    c    =    chars[i    +    1]+'.';    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
733	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  len);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(s,  len);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
734	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray('.');  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray('.');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray('.');	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
735	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(len,  chars[i]);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(len,  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(len,  chars[i]);	  final    char    c    =    chars[i].toCharArray(len);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
736	[BUG]  [BUGGY]  final  String  c  =  chars[i].charAt(i]);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].charAt(i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].charAt(i]);	  final    String    c    =    chars[i].charAt(i);    	non-compiled	[CE]  ')'  expected	102	None	replace
737	[BUG]  [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i).charAt(i);  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i);  char  c  =  s.charAt(i).charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char    c    =    s.charAt(i);    char  c  =  s.charAt(i).charAt(i);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	31	None	add
738	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len  *  len);  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len  *  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len  *  len);	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	35	None	replace
739	[BUG]  [BUGGY]  String  c  =  s.substring(i  +  1,  len).trim();  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.substring(i  +  1,  len).trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.substring(i  +  1,  len).trim();	  String    c    =    s.substring(i    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	35	None	replace
740	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray()  /  1;  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray()  /  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray()  /  1;	  final    char    c    =    chars[i].toCharArray()    +    1;    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
741	[BUG]  [BUGGY]  char  c  =  s.charAt(i).toLowerCase();  [CE]  char  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(i).toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(i).toLowerCase();	  char    c    =    s.charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	32	None	replace
742	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(0);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	char  c  =  s.charAt(0);	  char    c    =    s.charAt(i);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
743	[BUG]  [BUGGY]  char  c  =  s.charAt(0);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  s.charAt(0);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  s.charAt(0);	  char    c    =    s.charAt(i);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
744	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(i);  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(i);	  char    c    =    chars[i];    char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
745	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(0);  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(0);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(0);	  char    c    =    chars[i];    char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
746	[BUG]  [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].replace('.',  '/').replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].replace('.',  '/').replace('.',  '/');	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
747	[BUG]  [BUGGY]  final  String  c  =  chars[i].toLowerCase().replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].toLowerCase().replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].toLowerCase().replace('.',  '/');	  final    String    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
748	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  return  sb.toString();  }  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  return  sb.toString();  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  }  else  {  final  String  c  =  s.toString();  return  sb.toString();  }	  final    char    c    =(char)chars[i];    final    String    c    =(char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	4	None	replace
749	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".no ",  chars[i]);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".no ",  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".no ",  chars[i]);	  final    String    c    =    chars[i]    +   ".no   ";    	non-compiled	[CE]  	117	None	replace
750	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].toCharArray();  [CE]  incomparable  types:  char  and  <null>  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].toCharArray();	  char    c    =    chars[i].charAt(i);    	non-compiled	[CE]  incomparable  types:  char  and  <null>	33	None	replace
751	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().charAt(i  +  len);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().charAt(i  +  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().charAt(i  +  len);	  final    char    c    =    chars[i].trim().charAt(i);    	non-compiled	[CE]  char  cannot  be  dereferenced	40	None	replace
752	[BUG]  [BUGGY]  final  char  c  =  chars[i].toPath();  [CE]  char  cannot  be  dereferenced  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toPath();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toPath();	  final    char    c    =    chars[i].toString();    	non-compiled	[CE]  char  cannot  be  dereferenced	29	None	replace
753	[BUG]  [BUGGY]  final  char  c  =  chars[i].getName();  [CE]  char  cannot  be  dereferenced  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].getName();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].getName();	  final    char    c    =    chars[i].toString();    	non-compiled	[CE]  char  cannot  be  dereferenced	29	None	replace
754	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('/',  '/');  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('/',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('/',  '/');	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	113	None	replace
755	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace(',  '/');  [CE]  unclosed  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace(',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace(',  '/');	  final    char    c    =    chars[i].trim().replace('',    '/');    	non-compiled	[CE]  unclosed  character  literal	113	None	replace
756	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '.')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  1]  ==  '.')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
757	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '.')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  '.')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  '.')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	1	replace
758	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  System.arraycopy(chars,  0,  chars,  0,  chars.length);  }  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  System.arraycopy(chars,  0,  chars,  0,  chars.length);  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  System.arraycopy(chars,  0,  chars,  0,  chars.length);  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	1	None	replace
759	[BUG]  [BUGGY]  Character  c  =  s.charAt(i);  Serializable  c  =  s.charAt(i);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  s.charAt(i);  Serializable  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =    s.charAt(i);    Serializable  c  =  s.charAt(i);	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
760	[BUG]  [BUGGY]  String  c  =  s.toString()  + ": "  +  chars[i];  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toString()  + ": "  +  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toString()  + ": "  +  chars[i];	  String    c    =    s.toString();    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	36	None	replace
761	[BUG]  [BUGGY]  String  c  =  s.toString()  + ", "  +  i;  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  String  c  =  s.toString()  + ", "  +  i;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	String  c  =  s.toString()  + ", "  +  i;	  String    c    =    s.toString();    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	36	None	replace
762	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  chars[i]);  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(s,  chars[i]);	  final    char    c    =    chars[i].toCharArray(s);    	non-compiled	[CE]  char  cannot  be  dereferenced	27	None	replace
763	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  0,  len);  [CE]  char  cannot  be  dereferenced  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray(s,  0,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray(s,  0,  len);	  final    char    c    =    chars[i].toCharArray(s);    	non-compiled	[CE]  char  cannot  be  dereferenced	27	None	replace
764	[BUG]  [BUGGY]  Character  c  =  chars[i];  Char  c  =  chars[i];  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i];  Char  c  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i];  Char  c  =  chars[i];	  char    c    =    chars[i];    Char    c    =    chars[i];    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
765	[BUG]  [BUGGY]  Char  c  =  s.charAt(i).toCharArray();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =  s.charAt(i).toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =  s.charAt(i).toCharArray();	  char    c    =    s.charAt(i).toCharArray();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
766	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i,  i  +  1,  len);  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i,  i  +  1,  len);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i,  i  +  1,  len);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
767	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len  *  2);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(i  +  1,  len  *  2);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(i  +  1,  len  *  2);	  final    char    c    =    chars[i].substring(i    +    1,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	87	None	replace
768	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1],  s.charAt(i  +  1)];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1],  s.charAt(i  +  1)];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1],  s.charAt(i  +  1)];	  final    String    c    =    chars[i    +    1];    	non-compiled	[CE]  ';'  expected	72	None	replace
769	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  1],  s.charAt(i  +  1)];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  1],  s.charAt(i  +  1)];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  1],  s.charAt(i  +  1)];	  final    String    c    =    chars[i    +    1];    	non-compiled	[CE]  ';'  expected	72	None	replace
770	[BUG]  [BUGGY]  final  char  c  =  chars[i  +  1],  s.charAt(i  +  1));  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i  +  1],  s.charAt(i  +  1));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i  +  1],  s.charAt(i  +  1));	  final    String    c    =    chars[i    +    1];    	non-compiled	[CE]  ';'  expected	72	None	replace
771	[BUG]  [BUGGY]  final  String  c  =  chars[i].trim().replace('.',  '-');  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i].trim().replace('.',  '-');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i].trim().replace('.',  '-');	  final    String    c    =    chars[i].trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	38	None	replace
772	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i])+  '0';  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i])+  '0';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i])+  '0';	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  possible  loss  of  precision	86	None	replace
773	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toUpperCase(chars[i])+  '0';  [CE]  possible  loss  of  precision  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toUpperCase(chars[i])+  '0';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'+Character.toUpperCase(chars[i])+  '0';	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  possible  loss  of  precision	86	None	replace
774	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i]).charValue();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i]).charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i]).charValue();	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  char  cannot  be  dereferenced	86	None	replace
775	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'+(chars[i]  <  '0'  ||  chars[i]  >  '9')?  s  :  s.toString();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'+(chars[i]  <  '0'  ||  chars[i]  >  '9')?  s  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'+(chars[i]  <  '0'  ||  chars[i]  >  '9')?  s  :  s.toString();	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	86	None	replace
776	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i]);  [CE]  possible  loss  of  precision  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i]);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  '0'+Character.toLowerCase(chars[i]);	  final    char    c    =    chars[i]    +    '0';    	non-compiled	[CE]  possible  loss  of  precision	86	None	replace
777	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toLowerCase()  +  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toLowerCase()  +  1;	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
778	[BUG]  [BUGGY]  final  char  c  =  s[i].trim().toLowerCase();  [CE]  array  required,  but  String  found  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  s[i].trim().toLowerCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  s[i].trim().toLowerCase();	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  array  required,  but  String  found	39	None	replace
779	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().toUpperCase();  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().toUpperCase();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().toUpperCase();	  final    char    c    =    chars[i].trim().toLowerCase();    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
780	[BUG]  [BUGGY]  final  char  c  =  chars[i]  + ".null ",  s);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  + ".null ",  s);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  + ".null ",  s);	  final    String    c    =    chars[i]    +   ".null   ";    	non-compiled	[CE]  	63	None	replace
781	[BUG]  [BUGGY]  final  char  c  =  chars[i],  s.toCharArray()  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i],  s.toCharArray()  +  1);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i],  s.toCharArray()  +  1);	  final    String    c    =    chars[i],    s.toCharArray());    	non-compiled	[CE]  ';'  expected	122	None	replace
782	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/').replace('.',  '/');	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
783	[BUG]  [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').replace('-',  '/');  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].replace('.',  '/').replace('-',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].replace('.',  '/').replace('-',  '/');	  final    char    c    =    chars[i].replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	114	None	replace
784	[BUG]  [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[0].;  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[0];  final  char  c  =(char)chars[0].;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[0];    final  char  c  =(char)chars[0].;	  	non-compiled	[CE]  <identifier>  expected	78	None	add
785	[BUG]  [BUGGY]  Character  c  =  chars[i  +  1];  String  c  =  chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =  chars[i  +  1];  String  c  =  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character  c  =  chars[i  +  1];  String  c  =  chars[i  +  1];	  final    char    c    =    chars[i    +    1];    String    c    =    chars[i    +    1];    	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	53	None	replace
786	[BUG]  [BUGGY]  final  char  c  =(Character)chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(Character)chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(Character)chars[i].toCharArray();	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
787	[BUG]  [BUGGY]  final  Character  c  =(Character)chars[i].toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Character  c  =(Character)chars[i].toCharArray();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Character  c  =(Character)chars[i].toCharArray();	  final    char    c    =(char)chars[i].toCharArray();    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
788	[BUG]  [BUGGY]  Char  c  =  s.charAt(i);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =  s.charAt(i);	  String    c    =    s.charAt(i);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
789	[BUG]  [BUGGY]  char  c  =  chars[i],  chars[i];  [CE]  ']'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i],  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i],  chars[i];	  char    c    =    chars[i];    char    c    =    chars[i];    	non-compiled	[CE]  ']'  expected	7	None	replace
790	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  11]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  11]!=  null)?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  11]!=  null)?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    11];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	74	None	replace
791	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  11]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  11]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
792	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  11]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  11]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  11]  ==  '?')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
793	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  11]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  11]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
794	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  11]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  11]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  11]  ==  '/')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
795	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  11]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  11]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
796	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  11]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  11]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  11]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    11];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	1	replace
797	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	final  char  c  =(chars[i  +  1]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	1	replace
798	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]  ==  ':')?  chars[i  +  1]  :  chars[i  +  1];	  final    char    c    =    chars[i    +    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	1	replace
799	[BUG]  [BUGGY]  Char  c  =(chars[i]  ==  null)?  s  :  chars[i];  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(chars[i]  ==  null)?  s  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(chars[i]  ==  null)?  s  :  chars[i];	  char    c    =(chars[i]!=    null)?    s    :    chars[i];    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
800	[BUG]  [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  chars[i  +  1];  [CE]  incomparable  types:  char  and  <null>  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i  +  1]!=  null)?  chars[i  +  2]  :  chars[i  +  1];	  final    char    c    =(chars[i    +    1]!=    null)?    chars[i    +    1]    :    chars[i    +    1];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
801	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].charValue();  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	111	None	replace
802	[BUG]  [BUGGY]  char  c  =(chars[i]  <  chars.length)?  chars[i]  :  chars[i].charValue();  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  <  chars.length)?  chars[i]  :  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  <  chars.length)?  chars[i]  :  chars[i].charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	111	None	replace
803	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].charValue();  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  s  :  chars[i].charValue();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  s  :  chars[i].charValue();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	111	None	replace
804	[BUG]  [BUGGY]  char  c  =(chars[i]  <  chars.length)?  chars[i].charValue()  :  sb.toString();  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]  <  chars.length)?  chars[i].charValue()  :  sb.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]  <  chars.length)?  chars[i].charValue()  :  sb.toString();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	111	None	replace
805	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charValue()  :  s.toString();  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i].charValue()  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i].charValue()  :  s.toString();	  char    c    =    chars[i];    char    c    =    chars[i].charValue();    	non-compiled	[CE]  incomparable  types:  char  and  <null>	111	None	replace
806	[BUG]  [BUGGY]  Character  c  =(Character)chars[i];  character  c  =(Character)chars[i];  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Character  c  =(Character)chars[i];  character  c  =(Character)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Character    c    =(Character)chars[i];    character  c  =(Character)chars[i];	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
807	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  s.charAt(i);  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  s.charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  s.charAt(i);	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  possible  loss  of  precision	120	None	replace
808	[BUG]  [BUGGY]  final  char  c  =  chars[i]  +  s[i];  [CE]  array  required,  but  String  found  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i]  +  s[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i]  +  s[i];	  final    char    c    =    chars[i]    +    chars[i];    	non-compiled	[CE]  array  required,  but  String  found	120	None	replace
809	[BUG]  [BUGGY]  final  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(i);  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i]!=  null)?  chars[i].charAt(i):  chars[i].charAt(i);	  final    char    c    =    chars[i].charAt(len);    	non-compiled	[CE]  incomparable  types:  char  and  <null>	103	None	replace
810	[BUG]  [BUGGY]  final  char  c  =(chars[i]!=  null)?  chars[i].charAt(len):  chars[i].charAt(i);  [CE]  incomparable  types:  char  and  <null>  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i]!=  null)?  chars[i].charAt(len):  chars[i].charAt(i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i]!=  null)?  chars[i].charAt(len):  chars[i].charAt(i);	  final    char    c    =    chars[i].charAt(len);    	non-compiled	[CE]  incomparable  types:  char  and  <null>	103	None	replace
811	[BUG]  [BUGGY]  char  c  =  chars[i]  *  2  +  len;  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i]  *  2  +  len;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i]  *  2  +  len;	  char    c    =    chars[i]    *    2;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
812	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+ ",null ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+ ",null ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+ ",null ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	75	None	replace
813	[BUG]  [BUGGY]  final  String  c  =  chars[i  +  1]+ ".no ";  [CE]  no  suitable  method  found  for  isISOControl(String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  String  c  =  chars[i  +  1]+ ".no ";  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  String  c  =  chars[i  +  1]+ ".no ";	  final    char    c    =    chars[i    +    1]+   "n   ";    	non-compiled	[CE]  no  suitable  method  found  for  isISOControl(String)	75	None	replace
814	[BUG]  [BUGGY]  Char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i];  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i];	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
815	[BUG]  [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].trim();  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].trim();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =(chars[i]!=  null)?  chars[i]  :  chars[i].trim();	  char    c    =(chars[i]!=    null)?    chars[i]    :    chars[i];    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
816	[BUG]  [BUGGY]  static  final  char  c  =(char)chars[i];  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  static  final  char  c  =(char)chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	static  final  char  c  =(char)chars[i];	  final    char    c    =(char)chars[i];    final    int    c    =(char)chars[i];    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
817	[BUG]  [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(0,  i);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].toCharArray().substring(0,  i);  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].toCharArray().substring(0,  i);	  final    char    c    =    chars[i].toCharArray().trim();    	non-compiled	[CE]  char  cannot  be  dereferenced	83	None	replace
818	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].charAt(i);  }  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].charAt(i);  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =(char)chars[i].charAt(i);  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  incomparable  types:  char  and  <null>	101	None	replace
819	[BUG]  [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].charValue();  }  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].charValue();  }  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	if(chars[i]!=  null)  {  final  char  c  =(char)chars[i];  final  char  c  =  chars[i].charValue();  }	  final    char    c    =(char)chars[i];    final    char    c    =(char)chars[i].;    	non-compiled	[CE]  incomparable  types:  char  and  <null>	101	None	replace
820	[BUG]  [BUGGY]  final  Char  c  =  chars[i]  +  '.';  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  Char  c  =  chars[i]  +  '.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  Char  c  =  chars[i]  +  '.';	  final    char    c    =    chars[i]    +    '.';    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
821	[BUG]  [BUGGY]  static  final  String  c  =  chars[i]  +  '.';  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  static  final  String  c  =  chars[i]  +  '.';  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	static  final  String  c  =  chars[i]  +  '.';	  final    char    c    =    chars[i]    +    '.';    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
822	[BUG]  [BUGGY]  final  char  c  =(chars[i].charAt(i,  len));  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(chars[i].charAt(i,  len));  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =(chars[i].charAt(i,  len));	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
823	[BUG]  [BUGGY]  final  char  c  =  chars[i].charAt(i,  len)+  1;  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].charAt(i,  len)+  1;  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].charAt(i,  len)+  1;	  final    char    c    =    chars[i].charAt(i,    len);    	non-compiled	[CE]  char  cannot  be  dereferenced	17	None	replace
824	[BUG]  [BUGGY]  Char  c  =(chars[i]!=  null)?  chars[i]  :  s.toString();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  Char  c  =(chars[i]!=  null)?  chars[i]  :  s.toString();  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	Char  c  =(chars[i]!=  null)?  chars[i]  :  s.toString();	  char    c    =(chars[i]!=    null)?    chars[i]    :    s.toString();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
825	[BUG]  [BUGGY]  char  c  =  chars[i];  Char  ch  =  chars[i];  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i];  Char  ch  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i];  Char  ch  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
826	[BUG]  [BUGGY]  char  c  =  chars[i];  this.ch  =  chars[i];  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  c  =  chars[i];  this.ch  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  c  =  chars[i];  this.ch  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	13	None	replace
827	[BUG]  [BUGGY]  char  ch  =  chars[i];  [CE]  cannot  find  symbol  c  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  char  ch  =  chars[i];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	char  ch  =  chars[i];	  char    c    =    chars[i];    char    ch    =    chars[i];    	non-compiled	[CE]  cannot  find  symbol  c	13	None	replace
828	[BUG]  [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  int  c  =(char)chars[i  +  1];  [CE]  variable  c  is  already  defined  in  method  sanitize(String)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =(char)chars[i  +  1];  final  int  c  =(char)chars[i  +  1];  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final    char    c    =(char)chars[i    +    1];    final  int  c  =(char)chars[i  +  1];	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  sanitize(String)	55	None	add
829	[BUG]  [BUGGY]  final  char  c  =  chars[i].substring(0,  i).trim().replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].substring(0,  i).trim().replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].substring(0,  i).trim().replace('.',  '/');	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
830	[BUG]  [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').replace('.',  '/');  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {      [BUGGY]  final  char  c  =  chars[i].trim().replace('.',  '/').replace('.',  '/');  [BUGGY]      if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	final  char  c  =  chars[i].trim().replace('.',  '/').replace('.',  '/');	  final    char    c    =    chars[i].trim().replace('.',    '/');    	non-compiled	[CE]  char  cannot  be  dereferenced	112	None	replace
