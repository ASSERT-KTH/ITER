bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] final char[] chars = s.toCharArray(); [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { [BUGGY] final char[] chars = s.toCharArray(); [BUGGY] final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { [BUGGY] [BUGGY] final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	add	
3	[BUG] [BUGGY] final int len = chars.length; [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); [BUGGY] final int len = chars.length; [BUGGY] final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	274	274	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); [BUGGY] [BUGGY] final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	274	274	1	add	
5	[BUG] [BUGGY] final StringBuilder sb = new StringBuilder(); [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; [BUGGY] final StringBuilder sb = new StringBuilder(); [BUGGY] for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; [BUGGY] [BUGGY] final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	275	275	1	add	
7	[BUG] [BUGGY] for (int i = 0; i < len; i++) { [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); [BUGGY] for (int i = 0; i < len; i++) { [BUGGY] final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); [BUGGY] [BUGGY] for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	276	276	1	add	
9	[BUG] [BUGGY] final char c = chars[i]; [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { [BUGGY] final char c = chars[i]; [BUGGY] if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } return sb.toString(); [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { [BUGGY] [BUGGY] final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } return sb.toString(); [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	277	277	1	add	
11	[BUG] [BUGGY] if (!Character.isISOControl(c)) { [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; [BUGGY] if (!Character.isISOControl(c)) { [BUGGY] Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; [BUGGY] [BUGGY] if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	278	278	1	add	
13	[BUG] [BUGGY] Character.UnicodeBlock block = Character.UnicodeBlock.of(c); [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { [BUGGY] Character.UnicodeBlock block = Character.UnicodeBlock.of(c); [BUGGY] if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { [BUGGY] [BUGGY] Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	add	
15	[BUG] [BUGGY] if (block != null && block != Character.UnicodeBlock.SPECIALS) { [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); [BUGGY] if (block != null && block != Character.UnicodeBlock.SPECIALS) { [BUGGY] sb.append(c); continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); [BUGGY] [BUGGY] if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	280	280	1	add	
17	[BUG] [BUGGY] sb.append(c); [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { [BUGGY] sb.append(c); [BUGGY] continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	281	281	1	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { [BUGGY] [BUGGY] sb.append(c); continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	281	281	1	add	
19	[BUG] [BUGGY] continue; [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); [BUGGY] continue; [BUGGY] } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	282	282	1	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String sanitize(String s) { final char[] chars = s.toCharArray(); final int len = chars.length; final StringBuilder sb = new StringBuilder(); for (int i = 0; i < len; i++) { final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); [BUGGY] [BUGGY] continue; } } sb.append('?'); } return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	282	282	1	add	
21	[BUG] [BUGGY] return sb.toString(); [FE] ComparisonFailure [CONTEXT] final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } [BUGGY] return sb.toString(); [BUGGY] } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	287	287	1	replace	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] final char c = chars[i]; if (!Character.isISOControl(c)) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); if (block != null && block != Character.UnicodeBlock.SPECIALS) { sb.append(c); continue; } } sb.append('?'); } [BUGGY] [BUGGY] return sb.toString(); } [CLASS] ArchiveUtils [METHOD] sanitize [RETURN_TYPE] String  String s [VARIABLES] boolean StringBuilder sb UnicodeBlock block char c String s int i len char[] chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	287	287	1	add	
