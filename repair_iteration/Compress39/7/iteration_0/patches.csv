bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.create(c);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.create(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.create(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
2	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.get(c);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.get(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.get(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
3	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.getInstance(c);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.getInstance(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.getInstance(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
4	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.unicodeBlock(c);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.unicodeBlock(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.unicodeBlock(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
5	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.from(c,  i);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.from(c,  i);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.from(c,  i);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
6	[BUG]  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.create(c);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.create(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	UnicodeBlock  block  =  Character.UnicodeBlock.create(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(chars[i]);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	add	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(chars[i]);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	compilable	  [FE]  ComparisonFailure  	13	1	replace
8	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(chars[i]);  [FE]  ComparisonFailure  [FE]                ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(chars[i]);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(chars[i]);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	compilable	  [FE]  ComparisonFailure  	13	1	replace
9	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  block  [FE]                  ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]    [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	  	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol  block	13	None	replace
10	[BUG]  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.get(c);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.get(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	UnicodeBlock  block  =  Character.UnicodeBlock.get(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
11	[BUG]  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	UnicodeBlock  block  =  Character.UnicodeBlock.of(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
12	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.toCharArray(c);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.toCharArray(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.toCharArray(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
13	[BUG]  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.of(c,  i);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  UnicodeBlock  block  =  Character.UnicodeBlock.of(c,  i);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	UnicodeBlock  block  =  Character.UnicodeBlock.of(c,  i);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
14	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.charAt(i);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.charAt(i);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.charAt(i);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
15	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.cast(c);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.cast(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.cast(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
16	[BUG]  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.handle(c);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  final  char[]  chars  =  s.toCharArray();  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  [BUGGY]  Character.UnicodeBlock  block  =  Character.UnicodeBlock.handle(c);  [BUGGY]  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  }  sb.append('?');  }  return  sb.toString();  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	279	279	1	replace	Character.UnicodeBlock  block  =  Character.UnicodeBlock.handle(c);	Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
