bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  char[]  chars  =  s.toString();  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s.toString();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  char[]  chars  =  s.toString();	final  char[]  chars  =  s.toCharArray();  	non-compiled	[CE]  incompatible  types	1	None	replace
2	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s  ==  null?  null  :  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	add	final  char[]  chars  =  s  ==  null?  null  :  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  ComparisonFailure  	1	1	replace
3	[BUG]  [BUGGY]  final  char[]  chars  =  s  ==  null?  null  :  s.toCharArray();  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s  ==  null?  null  :  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  char[]  chars  =  s  ==  null?  null  :  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  ComparisonFailure  	1	1	replace
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s!=  null?  null  :  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	add	final  char[]  chars  =  s!=  null?  null  :  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  NullPointerException  	1	1	replace
5	[BUG]  [BUGGY]  final  char[]  chars  =  s!=  null?  null  :  s.toCharArray();  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s!=  null?  null  :  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  char[]  chars  =  s!=  null?  null  :  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  NullPointerException  	1	1	replace
6	[BUG]  [BUGGY]  final  String[]  chars  =  s.toCharArray();  [CE]  incompatible  types  [FE]          ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  String[]  chars  =  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  String[]  chars  =  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	non-compiled	[CE]  incompatible  types	1	None	replace
7	[BUG]  [BUGGY]  final  char[]  chars  =  s.toLowerCase();  [CE]  incompatible  types  [FE]            ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s.toLowerCase();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  char[]  chars  =  s.toLowerCase();	final  char[]  chars  =  s.toCharArray();  	non-compiled	[CE]  incompatible  types	1	None	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  char[]  chars  =  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	add	char[]  chars  =  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  ComparisonFailure  	1	1	replace
9	[BUG]  [BUGGY]  char[]  chars  =  s.toCharArray();  [FE]  ComparisonFailure  [FE]              ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  char[]  chars  =  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	char[]  chars  =  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  ComparisonFailure  	1	1	replace
10	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  chars  [FE]                ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]    [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	  	final  char[]  chars  =  s.toCharArray();  	non-compiled	[CE]  cannot  find  symbol  chars	1	None	replace
11	[BUG]  [BUGGY]  final  String  char[]  chars  =  s.toCharArray();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  String  char[]  chars  =  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  String  char[]  chars  =  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s  ==  null?  new  char[0]  :  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	add	final  char[]  chars  =  s  ==  null?  new  char[0]  :  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  ComparisonFailure  	1	1	replace
13	[BUG]  [BUGGY]  final  char[]  chars  =  s  ==  null?  new  char[0]  :  s.toCharArray();  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s  ==  null?  new  char[0]  :  s.toCharArray();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  char[]  chars  =  s  ==  null?  new  char[0]  :  s.toCharArray();	final  char[]  chars  =  s.toCharArray();  	compilable	  [FE]  ComparisonFailure  	1	1	replace
14	[BUG]  [BUGGY]  final  char[]  chars  =  s.toUpperCase();  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  sanitize(String  s)  {  [BUGGY]  final  char[]  chars  =  s.toUpperCase();  [BUGGY]  final  int  len  =  chars.length;  final  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  len;  i++)  {  final  char  c  =  chars[i];  if  (!Character.isISOControl(c))  {  Character.UnicodeBlock  block  =  Character.UnicodeBlock.of(c);  if  (block  !=  null  &&  block  !=  Character.UnicodeBlock.SPECIALS)  {  sb.append(c);  continue;  }  [CLASS]  ArchiveUtils  [METHOD]  sanitize  [RETURN_TYPE]  String  String  s  [VARIABLES]  boolean  StringBuilder  sb  UnicodeBlock  block  char  c  String  s  int  i  len  char[]  chars  	projects/Compress39/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java	1.0	273	273	1	replace	final  char[]  chars  =  s.toUpperCase();	final  char[]  chars  =  s.toCharArray();  	non-compiled	[CE]  incompatible  types	1	None	replace
