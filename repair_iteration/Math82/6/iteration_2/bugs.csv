bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.clone();  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.clone();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau.clone();	      SimplexTableau    tableau    =(SimplexTableau)tableau.clone();    	non-compiled	[CE]  	2	None	replace
2	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.clone();  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.clone();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.clone();	      SimplexTableau    tableau    =(SimplexTableau)tableau.clone();    	non-compiled	[CE]  	2	None	replace
3	[BUG]  [BUGGY]  if(tableau.getOptionalVariables()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptionalVariables()  ==  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptionalVariables()  ==  0)  {	  if(tableau.getNumArtificialVariables()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  if(tableau.getNumObjectiveFunctions()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumObjectiveFunctions()  ==  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumObjectiveFunctions()  ==  0)  {	  if(tableau.getNumArtificialVariables()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.getData();  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.getData();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau.getData();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getData();    	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getData();  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getData();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.getData();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getData();    	non-compiled	[CE]  	15	None	replace
7	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.getValue();  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.getValue();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau.getValue();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getValue();    	non-compiled	[CE]  	3	None	replace
8	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getValue();  [CE]  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getValue();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.getValue();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getValue();    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  if(tableau.getNumArtificialVariables()  <  1)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumArtificialVariables()  <  1)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumArtificialVariables()  <  1)  {	  if(tableau.getNumArtificialVariables()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  if(tableau.getNumArtificialVariables()  ==  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumArtificialVariables()  ==  1)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumArtificialVariables()  ==  1)  {	  if(tableau.getNumArtificialVariables()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
11	[BUG]  [BUGGY]  if(tableau.getOptionalVariables()!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptionalVariables()!=  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptionalVariables()!=  0)  {	  if(tableau.getNumArtificialVariables()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  if(tableau.getNumArtificialVariables()!=  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumArtificialVariables()!=  1)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumArtificialVariables()!=  1)  {	  if(tableau.getNumArtificialVariables()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  if(tableau.getNumObjectiveFunctions()!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumObjectiveFunctions()!=  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumObjectiveFunctions()!=  0)  {	  if(tableau.getNumObjectiveFunctions()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  if(tableau.getNumObjectiveFunctions()  >  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumObjectiveFunctions()  >  1)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumObjectiveFunctions()  >  1)  {	  if(tableau.getNumObjectiveFunctions()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  if(tableau.getNumObjectiveFunctions()  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumObjectiveFunctions()  <  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumObjectiveFunctions()  <  0)  {	  if(tableau.getNumObjectiveFunctions()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  if(tableau.getOptionalVariables()  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptionalVariables()  <  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptionalVariables()  <  0)  {	  if(tableau.getOptionalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  if(tableau.getOptionalVariables()  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptionalVariables()  >=  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptionalVariables()  >=  0)  {	  if(tableau.getOptionalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  if(tableau.getNumOptionalVariables()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumOptionalVariables()  ==  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumOptionalVariables()  ==  0)  {	  if(tableau.getNumOptionalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  if(tableau.getNumOptionalVariables()  >  1)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumOptionalVariables()  >  1)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumOptionalVariables()  >  1)  {	  if(tableau.getNumOptionalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  if(tableau.getNumOptionalVariables()  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumOptionalVariables()  <  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumOptionalVariables()  <  0)  {	  if(tableau.getNumOptionalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  if(tableau.getOptimalVariables()!=  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptimalVariables()!=  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptimalVariables()!=  0)  {	  if(tableau.getOptimalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  if(tableau.getOptimalVariables()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptimalVariables()  ==  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptimalVariables()  ==  0)  {	  if(tableau.getOptimalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  if(tableau.getOptimalVariables()  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptimalVariables()  <  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptimalVariables()  <  0)  {	  if(tableau.getOptimalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  if(tableau.getOptimalVariables()  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptimalVariables()  >=  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptimalVariables()  >=  0)  {	  if(tableau.getOptimalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.map.get(tableau);  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.map.get(tableau);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.map.get(tableau);	      SimplexTableau    tableau    =(SimplexTableau)this.map.get(tableau);    	non-compiled	[CE]  	11	None	replace
26	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.map.get(0);  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.map.get(0);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.map.get(0);	      SimplexTableau    tableau    =(SimplexTableau)this.map.get(tableau);    	non-compiled	[CE]  	11	None	replace
27	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau;  [CE]  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau;  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau;	      SimplexTableau    tableau    =(SimplexTableau)this.tableau;    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau;  [CE]  [FE]                AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau;  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)tableau;	      SimplexTableau    tableau    =(SimplexTableau)this.tableau;    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.values.get(0);  [CE]  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.values.get(0);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.values.get(0);	      SimplexTableau    tableau    =(SimplexTableau)this.values.get(0);    	non-compiled	[CE]  	14	None	replace
30	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.values.get(1);  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.values.get(1);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.values.get(1);	      SimplexTableau    tableau    =(SimplexTableau)this.values.get(0);    	non-compiled	[CE]  	14	None	replace
31	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tabs.get(table);  [CE]  [FE]                AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tabs.get(table);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.tabs.get(table);	      SimplexTableau    tableau    =(SimplexTableau)this.tabs.get(table);    	non-compiled	[CE]  	5	None	replace
32	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.getObject();  [CE]  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.getObject();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau.getObject();	      SimplexTableau    tableau    =(SimplexTableau)tableau.getObject();    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getObject();  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getObject();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.getObject();	      SimplexTableau    tableau    =(SimplexTableau)tableau.getObject();    	non-compiled	[CE]  	10	None	replace
34	[BUG]  [BUGGY]  if(tableau.getNumArtificialVariables()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumArtificialVariables()  <  =  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumArtificialVariables()  <  =  0)  {	  if(tableau.getNumArtificialVariables()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  if(tableau.getNumArtificialVariables()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumArtificialVariables()  >=  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumArtificialVariables()  >=  0)  {	  if(tableau.getNumArtificialVariables()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  if(tableau.getOptimalVariables()  >  1)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptimalVariables()  >  1)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptimalVariables()  >  1)  {	  if(tableau.getOptimalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.values.get(0);  [CE]  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.values.get(0);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)this.values.get(0);	      SimplexTableau    tableau    =(SimplexTableau)this.values.get(0);    	non-compiled	[CE]  	14	None	replace
38	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.values.get(0);  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.values.get(0);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  tableau  =(SimpleTableau)this.values.get(0);	      SimplexTableau    tableau    =(SimplexTableau)this.values.get(0);    	non-compiled	[CE]  	14	None	replace
39	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getData();  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getData();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)this.tableau.getData();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getData();    	non-compiled	[CE]  	15	None	replace
40	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getData();  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getData();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.getData();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getData();    	non-compiled	[CE]  	15	None	replace
41	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getObject();  [CE]  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getObject();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.getObject();	      SimplexTableau    tableau    =(SimplexTableau)tableau.getObject();    	non-compiled	[CE]  	10	None	replace
42	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau;  [CE]  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau;  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)this.tableau;	      SimplexTableau    tableau    =(SimplexTableau)this.tableau;    	non-compiled	[CE]  	4	None	replace
43	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau;  [CE]  [FE]                AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau;  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)tableau;	      SimplexTableau    tableau    =(SimplexTableau)this.tableau;    	non-compiled	[CE]  	4	None	replace
44	[BUG]  [BUGGY]  if(tableau.getNumOptimalVariables()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumOptimalVariables()  ==  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumOptimalVariables()  ==  0)  {	  if(tableau.getNumArtificialVariables()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tabs.get(table);  [CE]  [FE]                AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tabs.get(table);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)this.tabs.get(table);	      SimplexTableau    tableau    =(SimplexTableau)this.tabs.get(table);    	non-compiled	[CE]  	5	None	replace
46	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.tabs.get(table);  [CE]  [FE]                  AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.tabs.get(table);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  tableau  =(SimpleTableau)this.tabs.get(table);	      SimplexTableau    tableau    =(SimplexTableau)this.tabs.get(table);    	non-compiled	[CE]  	5	None	replace
47	[BUG]  [BUGGY]  if(tableau.getNumOptimalVariables()  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumOptimalVariables()  <  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumOptimalVariables()  <  0)  {	  if(tableau.getNumArtificialVariables()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  if(tableau.getOptimalValue()  >  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptimalValue()  >  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptimalValue()  >  0)  {	  if(tableau.getNumObjectiveFunctions()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  if(tableau.getOptionalVariables()  >  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getOptionalVariables()  >  1)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getOptionalVariables()  >  1)  {	  if(tableau.getOptionalVariables()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getValue();  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getValue();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)this.tableau.getValue();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getValue();    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.map.get(tableau);  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.map.get(tableau);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)this.map.get(tableau);	      SimplexTableau    tableau    =(SimplexTableau)this.map.get(tableau);    	non-compiled	[CE]  	11	None	replace
52	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.map.get(tableau);  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.map.get(tableau);  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  tableau  =(SimpleTableau)this.map.get(tableau);	      SimplexTableau    tableau    =(SimplexTableau)this.map.get(tableau);    	non-compiled	[CE]  	11	None	replace
53	[BUG]  [BUGGY]  if(tableau.getNumOptimalVariables()!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getNumOptimalVariables()!=  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getNumOptimalVariables()!=  0)  {	  if(tableau.getNumArtificialVariables()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.clone();  [CE]  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.clone();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.clone();	      SimplexTableau    tableau    =(SimplexTableau)tableau.clone();    	non-compiled	[CE]  	2	None	replace
55	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.clone();  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.clone();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)this.tableau.clone();	      SimplexTableau    tableau    =(SimplexTableau)tableau.clone();    	non-compiled	[CE]  	2	None	replace
56	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.tableau;  [CE]  [FE]              AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  tableau  =(SimpleTableau)this.tableau;  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  tableau  =(SimpleTableau)this.tableau;	      SimplexTableau    tableau    =(SimplexTableau)this.tableau;    	non-compiled	[CE]  	4	None	replace
57	[BUG]  [BUGGY]  if(tableau.getObjectiveFunctions()  >  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getObjectiveFunctions()  >  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getObjectiveFunctions()  >  0)  {	  if(tableau.getNumObjectiveFunctions()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getValue();  [CE]  [FE]            AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getValue();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.getValue();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.getValue();    	non-compiled	[CE]  	3	None	replace
59	[BUG]  [BUGGY]  if(tableau.getArtificialVariables()  >  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  if(tableau.getArtificialVariables()  >  0)  {  [BUGGY]    return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	if(tableau.getArtificialVariables()  >  0)  {	  if(tableau.getNumArtificialVariables()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  SimplexTableau  table  =(Simpletableau)this.tableau.clone();  [CE]  [FE]        AssertionError    [CONTEXT]    public  boolean  isOptimal(final  SimplexTableau  tableau)  {    [BUGGY]  SimplexTableau  table  =(Simpletableau)this.tableau.clone();  [BUGGY]    if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	147	147	1	replace	SimplexTableau  table  =(Simpletableau)this.tableau.clone();	      SimplexTableau    tableau    =(SimplexTableau)this.tableau.clone();    	non-compiled	[CE]  	1	None	replace
