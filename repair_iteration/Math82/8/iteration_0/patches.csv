bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  0)  {  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  0)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  0)  {	if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  if(!MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  <  0)  {  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]  if(!MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  <  0)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	if(!MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  <  0)  {	if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  =  0)  {  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  =  0)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  =  0)  {	if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	  	if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getEntry(i);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getEntry(i);  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)tableau.getEntry(i);		non-compiled	[CE]  <identifier>  expected	16	None	add
6	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)this.tableau.getEntry(i);  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)this.tableau.getEntry(i);  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)this.tableau.getEntry(i);		non-compiled	[CE]  <identifier>  expected	16	None	add
7	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getValue(i);  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getValue(i);  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)tableau.getValue(i);		non-compiled	[CE]  <identifier>  expected	16	None	add
8	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getObjective();  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getObjective();  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)tableau.getObjective();		non-compiled	[CE]  <identifier>  expected	16	None	add
9	[BUG]  [BUGGY]    int  epsilon  =  tableau.getEpsilon();  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    int  epsilon  =  tableau.getEpsilon();  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    int  epsilon  =  tableau.getEpsilon();		non-compiled	[CE]  <identifier>  expected	16	None	add
10	[BUG]  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  ==  0)  {  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  ==  0)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  ==  0)  {	if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
11	[BUG]  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  <  0)  {  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  <  0)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	if  (MathUtils.compareTo(tableau.getEntry(i,  i),  0,  epsilon)  <  0)  {	if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
12	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getEpsilon();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getEpsilon();  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)tableau.getEpsilon();		non-compiled	[CE]  <identifier>  expected	16	None	add
13	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)this.tableau.getObjective();  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)this.tableau.getObjective();  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)this.tableau.getObjective();		non-compiled	[CE]  <identifier>  expected	16	None	add
14	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.clone();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.clone();  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)tableau.clone();		non-compiled	[CE]  <identifier>  expected	16	None	add
15	[BUG]  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getObject();  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]    SimplexTableau  epsilon  =(SimplexTableau)tableau.getObject();  [BUGGY]  if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	    SimplexTableau  epsilon  =(SimplexTableau)tableau.getObject();		non-compiled	[CE]  <identifier>  expected	16	None	add
16	[BUG]  [BUGGY]  if(!MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  0)  {  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  boolean  isOptimal(final  SimplexTableau  tableau)  {  if  (tableau.getNumArtificialVariables()  >  0)  {  return  false;  }  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getWidth()  -  1;  i++)  {  [BUGGY]  if(!MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  0)  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  SimplexSolver  [METHOD]  isOptimal  [RETURN_TYPE]  boolean  SimplexTableau  tableau  [VARIABLES]  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  int  i  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2773500981126146	151	151	1	replace	if(!MathUtils.compareTo(tableau.getEntry(i,  i),  0,  DEFAULT_EPSILON)  <  0)  {	if  (MathUtils.compareTo(tableau.getEntry(0,  i),  0,  epsilon)  <  0)  {  	non-compiled	[CE]  <identifier>  expected	15	None	replace
