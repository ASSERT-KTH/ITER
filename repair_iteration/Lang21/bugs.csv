bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (cal1 == null || cal2 == null) { [FE] AssertionFailedError [CONTEXT] public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) { [BUGGY] if (cal1 == null || cal2 == null) { [BUGGY] throw new IllegalArgumentException("The date must not be null"); } return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass()); [CLASS] DateUtils DateIterator [METHOD] isSameLocalTime [RETURN_TYPE] boolean  Calendar cal1 Calendar cal2 [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MODIFY_CEILING MODIFY_ROUND MODIFY_TRUNCATE RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH Calendar cal1 cal2 endFinal spot startFinal  	projects/Lang21/src/main/java/org/apache/commons/lang3/time/DateUtils.java	1.0	259	259	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) { [BUGGY] [BUGGY] if (cal1 == null || cal2 == null) { throw new IllegalArgumentException("The date must not be null"); } return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass()); [CLASS] DateUtils DateIterator [METHOD] isSameLocalTime [RETURN_TYPE] boolean  Calendar cal1 Calendar cal2 [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MODIFY_CEILING MODIFY_ROUND MODIFY_TRUNCATE RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH Calendar cal1 cal2 endFinal spot startFinal  	projects/Lang21/src/main/java/org/apache/commons/lang3/time/DateUtils.java	1.0	259	259	1	add	
3	[BUG] [BUGGY] return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&  cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && [FE] AssertionFailedError [CONTEXT] public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) { if (cal1 == null || cal2 == null) { throw new IllegalArgumentException("The date must not be null"); } [BUGGY] return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&    cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&        cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && [BUGGY] cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass()); } [CLASS] DateUtils DateIterator [METHOD] isSameLocalTime [RETURN_TYPE] boolean  Calendar cal1 Calendar cal2 [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MODIFY_CEILING MODIFY_ROUND MODIFY_TRUNCATE RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH Calendar cal1 cal2 endFinal spot startFinal  	projects/Lang21/src/main/java/org/apache/commons/lang3/time/DateUtils.java	1.0	262	264	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) { if (cal1 == null || cal2 == null) { throw new IllegalArgumentException("The date must not be null"); } [BUGGY] [BUGGY] return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&    cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&        cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass()); } [CLASS] DateUtils DateIterator [METHOD] isSameLocalTime [RETURN_TYPE] boolean  Calendar cal1 Calendar cal2 [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MODIFY_CEILING MODIFY_ROUND MODIFY_TRUNCATE RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH Calendar cal1 cal2 endFinal spot startFinal  	projects/Lang21/src/main/java/org/apache/commons/lang3/time/DateUtils.java	1.0	262	264	1	add	
