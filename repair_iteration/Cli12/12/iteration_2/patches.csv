bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripAtNonOption(opt);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  String[]  arguments  =  Util.stripAtNonOption(opt);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	String[]  arguments  =  Util.stripAtNonOption(opt);	  String[]    arguments    =    Util.stripLeadingHyphens(option);    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
2	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripValues(opt);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  String[]  arguments  =  Util.stripValues(opt);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	String[]  arguments  =  Util.stripValues(opt);	  String[]    arguments    =    Util.stripLeadingHyphens(option);    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
4	[BUG]  [BUGGY]  options.getOption(opt);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  options.getOption(opt);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	options.getOption(opt);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
5	[BUG]  [BUGGY]  option  =  options.getOption(opt);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  option  =  options.getOption(opt);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	option  =  options.getOption(opt);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
6	[BUG]  [BUGGY]  if(opt!=  null)  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=  null)  {  aughtExceptionHandler.handleMissingHyphens(arg);  }	  aughtExceptionHandler.handleMissingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	159	None	replace
7	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(options.hasOption(opt))  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(options.hasOption(opt))  {  aughtExceptionHandler.handleMissingHyphens(arg);  }	  aughtExceptionHandler.handleMissingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	159	None	replace
8	[BUG]  [BUGGY]  if(opt  ==  null)  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt  ==  null)  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt  ==  null)  {  aughtExceptionHandler.handleMissingHyphens(arg);  }	  aughtExceptionHandler.handleMissingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	159	None	replace
9	[BUG]  [BUGGY]  if(opt.startsWith( "- "))  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt.startsWith( "- "))  {  aughtExceptionHandler.handleMissingHyphens(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt.startsWith( "- "))  {  aughtExceptionHandler.handleMissingHyphens(arg);  }	  aughtExceptionHandler.handleMissingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	159	None	replace
10	[BUG]  [BUGGY]  if(opt!=  null)  {  if(opt!=  null)  {  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  if(opt!=  null)  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=    null)    {    if(opt!=  null)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	116	None	add
11	[BUG]  [BUGGY]  if(opt!=  null)  {  if(opt  ==  null)  {  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  if(opt  ==  null)  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=    null)    {    if(opt  ==  null)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	116	None	add
12	[BUG]  [BUGGY]  if(opt!=  null)  {  if(opt  >=  null)  {  [CE]  reached  end  of  file  while  parsing  [FE]        UnrecognizedOptionException    [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  if(opt  >=  null)  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=    null)    {    if(opt  >=  null)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	116	None	add
13	[BUG]  [BUGGY]  if(opt!=  null)  {  If(opt!=  null)  {  [CE]  ';'  expected  [FE]          UnrecognizedOptionException    [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  If(opt!=  null)  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=    null)    {    If(opt!=  null)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
14	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  Option  options  =  options.getOption(opt,  1);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	Option  options  =  options.getOption(opt,  1);	  Option    options    =    options.getOption(opt,    i);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
15	[BUG]  [BUGGY]  Option  options  =  options.getOption(arg,  i);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  Option  options  =  options.getOption(arg,  i);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	Option  options  =  options.getOption(arg,  i);	  Option    options    =    options.getOption(opt,    i);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
16	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  0);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  Option  options  =  options.getOption(opt,  0);  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	Option  options  =  options.getOption(opt,  0);	  Option    options    =    options.getOption(opt,    i);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
17	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  arg.length());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  Option  options  =  options.getOption(opt,  arg.length());  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	Option  options  =  options.getOption(opt,  arg.length());	  Option    options    =    options.getOption(opt,    i);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  options.substring(0,  2):  options.add(arg.substring(0,  2));  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  Option  option  =  options.hasOption(opt)?  options.substring(0,  2):  options.add(arg.substring(0,  2));  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	Option  option  =  options.hasOption(opt)?  options.substring(0,  2):  options.add(arg.substring(0,  2));	  Option    option    =    options.hasOption(arg)?    options.substring(0,    2):    options.add(arg.substring(0,    2));    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  options.substring(0,  1):  options.add(arg.substring(0,  2));  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  Option  option  =  options.hasOption(opt)?  options.substring(0,  1):  options.add(arg.substring(0,  2));  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	Option  option  =  options.hasOption(opt)?  options.substring(0,  1):  options.add(arg.substring(0,  2));	  Option    option    =    options.hasOption(arg)?    options.substring(0,    2):    options.add(arg.substring(0,    2));    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
20	[BUG]  [BUGGY]  options.hasOption(opt)?  options.substring(0,  2):  options.add(arg.substring(0,  2));  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  options.hasOption(opt)?  options.substring(0,  2):  options.add(arg.substring(0,  2));  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	options.hasOption(opt)?  options.substring(0,  2):  options.add(arg.substring(0,  2));	  Option    option    =    options.hasOption(arg)?    options.substring(0,    2):    options.add(arg.substring(0,    2));    	non-compiled	[CE]  not  a  statement	67	None	replace
21	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.equals( "- "))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              MissingArgumentException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null  ||  opt.equals( "- "))  {  tokens.add(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=  null  ||  opt.equals( "- "))  {  tokens.add(arg);  }	          if(opt!=    null)    {    tokens.add(arg);    }    if(opt    >>    null)    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
22	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                MissingArgumentException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  tokens.add(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=  null  ||  opt.length()  ==  0)  {  tokens.add(arg);  }	          if(opt!=    null)    {    tokens.add(arg);    }    if(opt    >>    null)    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
23	[BUG]  [BUGGY]  if(opt!=  null)  {  if(options.hasOption(arg.substring(0,  2)))  {  [CE]  reached  end  of  file  while  parsing  [FE]            UnrecognizedOptionException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  if(options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=  null)  {  if(options.hasOption(arg.substring(0,  2)))  {	  if(options.hasOption(arg.substring(0,    2)))    {    If(options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	replace
24	[BUG]  [BUGGY]  if(opt  ==  null)  {  if(options.hasOption(arg.substring(0,  2)))  {  [CE]  reached  end  of  file  while  parsing  [FE]              UnrecognizedOptionException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt  ==  null)  {  if(options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt  ==  null)  {  if(options.hasOption(arg.substring(0,  2)))  {	  if(options.hasOption(arg.substring(0,    2)))    {    If(options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	replace
25	[BUG]  [BUGGY]  if(opt.startsWith( "- "))  {  If(options.hasOption(arg.substring(0,  2)))  {  [CE]  [FE]                UnrecognizedOptionException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt.startsWith( "- "))  {  If(options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt.startsWith( "- "))  {  If(options.hasOption(arg.substring(0,  2)))  {	  if(options.hasOption(arg.substring(0,    2)))    {    If(options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  	104	None	replace
26	[BUG]  [BUGGY]  if(opt.startsWith( "- "))  {  if(options.hasOption(arg.substring(0,  2)))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  UnrecognizedOptionException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt.startsWith( "- "))  {  if(options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt.startsWith( "- "))  {  if(options.hasOption(arg.substring(0,  2)))  {	  if(options.hasOption(arg.substring(0,    2)))    {    If(options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	replace
27	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    MissingArgumentException    [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  if(stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	if(opt!=  null)  {  if(stopAtNonOption)  {  tokens.add(arg);  }	  if(opt!=    null)    {    if(!stopAtNonOption)    {    tokens.add(arg);    }    	compilable	  [FE]  UnrecognizedOptionException  	164	7	replace
28	[BUG]  [BUGGY]  if(opt!=  null)  {  if(stopAtNonOption)  {  tokens.add(arg);  }  [FE]  UnrecognizedOptionException  [FE]    MissingArgumentException    [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  if(opt!=  null)  {  if(stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(opt!=  null)  {  if(stopAtNonOption)  {  tokens.add(arg);  }	  if(opt!=    null)    {    if(!stopAtNonOption)    {    tokens.add(arg);    }    	compilable	  [FE]  UnrecognizedOptionException  	164	7	replace
29	[BUG]  [BUGGY]  options.hasOption(opt)||  opt.equals( "- "))  {  tokens.add(arg);  }  [CE]  not  a  statement  [FE]          MissingArgumentException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  options.hasOption(opt)||  opt.equals( "- "))  {  tokens.add(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	options.hasOption(opt)||  opt.equals( "- "))  {  tokens.add(arg);  }	  if(options.hasOption(opt)||    opt.equals(   "-   "))    {    tokens.add(arg);    }    	non-compiled	[CE]  not  a  statement	144	None	replace
30	[BUG]  [BUGGY]  options.hasOption(opt)&&  opt.equals( "-   "))  {  tokens.add(arg);  }  [CE]  error  reading  /home/hye/repair/IteRepair/IteRepair/projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java;  /home/hye/repair/IteRepair/IteRepair/projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java  (No  such  file  or  directory)  [FE]            MissingArgumentException      [CONTEXT]      else  if  (arg.startsWith(     "-     "))  {  String  opt  =  Util.stripLeadingHyphens(arg);      [BUGGY]  options.hasOption(opt)&&  opt.equals( "-   "))  {  tokens.add(arg);  }  [BUGGY]      if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	options.hasOption(opt)&&  opt.equals( "-   "))  {  tokens.add(arg);  }	  if(options.hasOption(opt)||    opt.equals(   "-   "))    {    tokens.add(arg);    }    	non-compiled	[CE]  error  reading  /home/hye/repair/IteRepair/IteRepair/projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java;  /home/hye/repair/IteRepair/IteRepair/projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java  (No  such  file  or  directory)	144	None	replace
