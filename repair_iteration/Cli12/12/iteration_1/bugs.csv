bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)||  opt.startsWith( "- "))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	if(options.hasOption(opt)||  opt.startsWith( "- "))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  ComparisonFailure  	24	3	replace
2	[BUG]  [BUGGY]  if(options.hasOption(opt)||  opt.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)||  opt.startsWith( "- "))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(options.hasOption(opt)||  opt.startsWith( "- "))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  ComparisonFailure  	24	3	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)||  options.hasOption(opt))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	if(options.hasOption(opt)||  options.hasOption(opt))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  ComparisonFailure  	24	3	replace
4	[BUG]  [BUGGY]  if(options.hasOption(opt)||  options.hasOption(opt))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)||  options.hasOption(opt))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(options.hasOption(opt)||  options.hasOption(opt))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  ComparisonFailure  	24	3	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)&&  opt.startsWith( "- "))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	if(options.hasOption(opt)&&  opt.startsWith( "- "))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  AssertionFailedError  	24	9	replace
6	[BUG]  [BUGGY]  if(options.hasOption(opt)&&  opt.startsWith( "- "))  {  [FE]  AssertionFailedError  [FE]        ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)&&  opt.startsWith( "- "))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(options.hasOption(opt)&&  opt.startsWith( "- "))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  AssertionFailedError  	24	9	replace
7	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(arg.substring(0,  2)))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	if(options.hasOption(arg.substring(0,  2)))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  UnrecognizedOptionException  	24	4	replace
8	[BUG]  [BUGGY]  if(options.hasOption(arg.substring(0,  2)))  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(arg.substring(0,  2)))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(options.hasOption(arg.substring(0,  2)))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  UnrecognizedOptionException  	24	4	replace
9	[BUG]  [BUGGY]    [CE]  'else'  without  'if'  [FE]            ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	  	if  (options.hasOption(opt))  {  	non-compiled	[CE]  'else'  without  'if'	24	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }		compilable	  [FE]  AssertionFailedError  	25	11	add
11	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }		compilable	  [FE]  AssertionFailedError  	25	11	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }		compilable	  [FE]  AssertionFailedError  	25	11	add
13	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }		compilable	  [FE]  AssertionFailedError  	25	11	add
14	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]        ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	    if(options.hasOption(opt))  {  tokens.add(arg);  }		compilable	  [FE]  MissingArgumentException  	25	10	add
15	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg);  }  [FE]  MissingArgumentException  [FE]        ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(options.hasOption(opt))  {  tokens.add(arg);  }		compilable	  [FE]  MissingArgumentException  	25	10	add
16	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  else  {  options.add(opt);  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  else  {  options.add(opt);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  else  {  options.add(opt);  }		non-compiled	[CE]  cannot  find  symbol	25	None	add
17	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }  else  {  options.add(opt);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }  else  {  options.add(opt);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  opt  =  Util.stripLeadingHyphens(opt);  }  else  {  options.add(opt);  }		non-compiled	[CE]  cannot  find  symbol	25	None	add
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)||  opt.equals( "- "))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	if(options.hasOption(opt)||  opt.equals( "- "))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  ComparisonFailure  	24	3	replace
19	[BUG]  [BUGGY]  if(options.hasOption(opt)||  opt.equals( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]  if(options.hasOption(opt)||  opt.equals( "- "))  {  [BUGGY]  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	if(options.hasOption(opt)||  opt.equals( "- "))  {	if  (options.hasOption(opt))  {  	compilable	  [FE]  ComparisonFailure  	24	3	replace
20	[BUG]  [BUGGY]    Option  options  =  options.getOption(opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    Option  options  =  options.getOption(opt);  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    Option  options  =  options.getOption(opt);		non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(opt!=  null)  {  tokens.add(opt);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	    if(opt!=  null)  {  tokens.add(opt);  }		compilable	  [FE]  AssertionFailedError  	25	11	add
22	[BUG]  [BUGGY]    if(opt!=  null)  {  tokens.add(opt);  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(opt!=  null)  {  tokens.add(opt);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(opt!=  null)  {  tokens.add(opt);  }		compilable	  [FE]  AssertionFailedError  	25	11	add
23	[BUG]  [BUGGY]    String[]  options  =  options.getOptions();  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    String[]  options  =  options.getOptions();  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    String[]  options  =  options.getOptions();		non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
24	[BUG]  [BUGGY]    String[]  options  =  options.getOptions(opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    String[]  options  =  options.getOptions(opt);  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    String[]  options  =  options.getOptions(opt);		non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
25	[BUG]  [BUGGY]    Option  options  =  options.getOptions(opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    Option  options  =  options.getOptions(opt);  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    Option  options  =  options.getOptions(opt);		non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
26	[BUG]  [BUGGY]    String[]  arguments  =  Util.stripLeadingHyphens(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    String[]  arguments  =  Util.stripLeadingHyphens(opt);  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    String[]  arguments  =  Util.stripLeadingHyphens(opt);		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
27	[BUG]  [BUGGY]    if(opt!=  null)  {  if(options.hasOption(opt))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(opt!=  null)  {  if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(opt!=  null)  {  if(options.hasOption(opt))  {  tokens.add(arg);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
28	[BUG]  [BUGGY]    if(opt!=  null)  {  if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(opt!=  null)  {  if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(opt!=  null)  {  if(options.hasOption(opt))  {  tokens.add(arg.substring(0,  2));  }		non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
29	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]          ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(opt!=  null)  {  tokens.add(arg);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	add	    if(opt!=  null)  {  tokens.add(arg);  }		compilable	  [FE]  MissingArgumentException  	25	11	add
30	[BUG]  [BUGGY]    if(opt!=  null)  {  tokens.add(arg);  }  [FE]  MissingArgumentException  [FE]          ComparisonFailure  [CONTEXT]  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  [BUGGY]    if(opt!=  null)  {  tokens.add(arg);  }  [BUGGY]  if  (options.hasOption(opt))    {  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {    tokens.add(arg.substring(0,  2));  //  -D  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	75	76	3	replace	    if(opt!=  null)  {  tokens.add(arg);  }		compilable	  [FE]  MissingArgumentException  	25	11	add
