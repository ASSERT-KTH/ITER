projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(opt)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!eatTheRest){eatTheRest=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(opt)){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("--");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg);tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLowerCase(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(0,1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)||options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){if(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()+1];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()+2];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()-1];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-".equals(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-n");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif("-".equals(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){elseif(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add("-");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eattheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,0);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption(")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71options.hasOption(arg)){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(opt);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(!stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.contains("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.contains("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[0]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i]+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(0))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(Util.stripLeadingHyphens(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption('-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){otherif(options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif("-".equals(arg)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripDeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(opt);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("--n");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith('-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(opt);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption.");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){Optionoptions=options.getOption(arg.substring(0,2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){Optionoptions=options.getOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,eatTheRest);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){||stopAtNonOption){tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add("--");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.startsWith("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.indexOf("-")>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith(."-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add(options.hasOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add(options.getOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()*2];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.string(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripRightHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add('-');
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i],arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith('-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.endsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripRightHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71[]arguments=Util.stripLeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[1])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arguments[1])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||!arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arguments[i]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}If(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}if(stopAtNonOption){!stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,i+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg,stopAtNonOption,arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg,eatTheRest);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){elseif(options.hasOption("stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){elseif(options.hasOption(",stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){elseif(options.hasOption(".stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){elseif(options.hasOption(,"stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){tokens.add("-".equals(arg));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71||stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.contains("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(!stopAtNonOption){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(options.hasOption(options)){elseif(!stopAtNonOption){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arguments)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){elseif(options.hasOption(arg.toString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){if(options.hasOption(arg.toString())){tokens.add(arg);}elseif(options.hasOption(arg.toString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){elseif(options.hasOption(arg.toString())&&options.hasOption(arg.toString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){if(options.hasOption(arg.toString())){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){elseif(options.hasOption(arg.toString())&&!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,stopAtNonOption,options);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,stopAtNonOption,i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){elseif(stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){elseif(stopNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){if(stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){otherif(stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){elseif(stopAtNonOption&&arguments.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripAtNonOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71While(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71While(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71safeToken(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71While(stopAtNonOption){thrownewIllegalArgumentException("".equals(arg));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg.substring(0,2));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arg.substring(0,2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){Optionoptions=options.getOption(arg.substring(0,2));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg.substring(0,1));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.contains("-")>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.indexOf("-")>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){elseif(stopAtNonOption&&arguments.length>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){elseif(stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){elseif(stopAtNonOption&&arguments.length>1){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){||stopAtNonOption&&arguments.length>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)&&options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(arg.substring(1));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(arg.substring(2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){elseif(options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){elseif(options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){elseif(options.hasOption(arg.substring(3))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){elseif(options.hasOption(arg.substring(4))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){elseif(options.hasOption(arg.substring(5))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[1]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71||stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71||stopAtNonOption){stopAtNonOption=false;
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71stopAtNonOption=false;
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()1];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(options.getOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add(options.getOption(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasValue(arg)&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arguments)&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("--".equals(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("--?");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripRightHyphens(arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripRightHyphens(arguments[i]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLightHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-").equals(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-"+arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){elseif(!stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){elseif(!stopNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){if(!stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){otherif(!stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){elseif(!stopAtNonOption&&arguments.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-.");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arguments,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(options);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arguments,i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.contains("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.contains("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arguments[i])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",arg.length);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){elseif(!stopAtNonOption&&options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){elseif(!stopAtNonOption&&options.hasOption(arguments[1])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){elseif(!stopAtNonOption&&options.hasOption(arguments[2])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){elseif(!stopAtNonOption&&options.hasOption(arguments[3])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){elseif(!stopNonOption&&options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption".length());
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption('-')){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption('0')){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption('-')&&!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||arguments.length>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>1){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length<2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){tokens.add(arguments[i]);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()/2];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,2);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest){if(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){elseif(stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){elseif(stopAtNonOption&&arguments.length>1){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){elseif(stopAtNonOption&&argument.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",0);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[i])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.equals("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arguments[i])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}if(stopNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}if(stopAtNonOption){if(options.hasOption(arg.substring(0,2)))<tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}If(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")||options.hasOption("stopAtNonOption)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")||options.hasOption("stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stop")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLowerCase(arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLowerCase(arguments[i]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith(".")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i]+2);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arguments)||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||StopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.contains("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.contains("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(Util.stripLeadingHyphens(arg,stopAtNonOption));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(Util.stripLeadingHyphens(arg),stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(Util.stripLeadingHyphens(arg)+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg+2);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(i+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){elseif(stopAtNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){if(stopAtNonOption||options.hasOption(arg)){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){elseif(stopNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){if(stopAtNonOption||options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){if(stopAtNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(option);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.startsWith("-")){elseif(stopAtNonOption&&!arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.startsWith("-")){elseif(stopAtNonOption&&!arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.startsWith("-")){elseif(stopAtNonOption&&!arg.endsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>1){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripDeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripDeadingHyphens(arg,i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!options.hasOption(arg.toString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length.startsWith("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(options.hasOption(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){arg=Util.stripLeadingHyphens(opt);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(options.hasOption(arg)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if("-".equals(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(arg.startsWith("-")){elseif("-".equals(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){Optionoptions=options.getOption(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("./")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasValue(arg)||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasArg(arg)||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(0),2)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(0))||options.hasOption(arg.charAt(0))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(options.hasOption(options)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[0],arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i],0);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.isEmpty()&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.isEmpty()&&stopAtNonOption.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(arg.substring(0,2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.hasOption(arg.substring(0,2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOptions(arg.substring(0,2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){tokens.add("--");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add("--");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){tokens.add("--");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasValue(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){elseif(options.hasOption(arg.substring(0,1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){elseif(options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){elseif(options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){elseif(options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){elseif(options.hasOption(arg.substring(1,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(options,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg,stopAtNonOption,arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){elseif(options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){elseif(options.hasOption(arg.substring(3))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){elseif(options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){elseif(options.hasOption(arg.substring(4))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){elseif(options.hasOption(arg.substring(5))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arg.substring(1));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arg.substring(2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){elseif(!stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){elseif(!stopAtNonOption&&arguments.length>1){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){elseif(!stopAtNonOption&&argument.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){elseif(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){if(stopAtNonOption){tokens.add(arg);}elseif(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){if(stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(arg.startsWith("-")){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if("-".equals(arg)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith(".0")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith(".jar")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(options.hasOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent!=null&&stopAtNonOption){tokens.add(options.hasOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith(".java")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-!");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-.");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("-")){elseif(stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("-")){elseif(stopAtNonOption&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("-")){elseif(stopAtNonOption&&arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("-")){elseif(stopNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent!=null&&stopAtNonOption){tokens.add(options.getOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest){if(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){if(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(stopAtNonOption)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){otherif(!stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){elseif(!stopNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(stopAtNonOption)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){elseif(options.hasOption(stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){elseif(options.hasOption(!"stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,stopAtNonOption)+1;
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){if(!stopAtNonOption){stopAtNonOption=false;tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options[0])){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,stoppingAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,StopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith(".")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){elseif(options.hasOption(arg.charAt(0))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(stopAtNonOption)){if("-".equals(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){if("-".equals(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.indexOf("-")>=0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.indexOf("-")==0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71aughtExceptionHandler(throwAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71safeToken(stopAtNonOption){thrownewIllegalArgumentException("".equals(arg));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71aughtExceptionHandler(throwAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(options);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){intstopAtNonOption=Util.stripLeadingHyphens(arguments[i]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){intstopAtNonOption=Util.stripLeadingHyphens(arguments[0]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(tokens);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.startsWith("-")){elseif(stopAtNonOption&&!arg.equals("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}while(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}if(stopAtNonOption){if(options.hasOption(arg.substring(2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg,stopAtNonOption+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(option);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(turnAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){stopAtNonOption=true;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){elseif(stopAtNonOption&&stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLowerCase(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){otherif(stopAtNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){elseif(stopAtNonOption||choices.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg+1,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){elseif(stopAtNonOption&&Options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(options.hasOption(options)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length==0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){elseif(options.hasOption(arg.substring(3))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)||options.hasOption(options)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg.substring(2));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg.substring(0,2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){intstopAtNonOption=Util.stripLeadingHyphens(arguments[i]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){intstopAtNonOption=Util.stripLeadingHyphens(arguments[0]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){otherif(stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()*2+1];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripRightHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-e");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption('n')){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(':')){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg,stopAtNonOption)+1;
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){if(options.hasOption(arg.toString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){otherif(options.hasOption(arg.toString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)&&options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionsoptions=options.getOption(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.endsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(3))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith('-')){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(options);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption(opt)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}elseif(options.hasOption(arg)){if(stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(i))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(i),1)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(i,1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(i,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,tokens);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arguments.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i],eatTheRest);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arguments)&&stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tors.add("-");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.length())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){elseif(!stopAtNonOption&&Options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){otherif(!stopAtNonOption&&options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options[0])){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){elseif(options.hasOption(opt)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)||options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){if(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){tokens.add("-");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71else{Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if(options.hasOption(opt)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71else{if(options.hasOption(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71else{arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}if(stopAtNonOption){if(!stopAtNonOption)stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}elseif(options.hasOption(arg)){if(!stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){elseif(stopAtNonOption)&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg,i+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(!eatTheRest){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71[Delete]
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71aughtExceptionHandler(throwAtNonOption,arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71aughtExceptionHandler(throwAtNonOption,arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.contains("-)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){elseif(options.hasOption(arg.substring(1,1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toLowerCase())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71else{if(options.hasOption(arg)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)||options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,stopAtNonOption,eatTheRest);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("--").equals(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){elseif(options.hasOption(arg.getValue())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){elseif(options.hasOption(arg.getString())){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)||options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-".);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71fortunately(stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||arg.startsWith(".")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add(options.getOption(parent));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){elseif(stopAtNonOption&&argument.length>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,inti);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){elseif(stopAtNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){stopAtNonOption=true;tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){stopAtNonOption=false;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){elseif(stopAtNonOption&&!eattheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){elseif(stopAtNonOption&&!eatTheRest&&arg.endsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){elseif(!stopAtNonOption||arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(Util.stripLeadingHyphens(arg,eatTheRest));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(Util.stripLeadingHyphens(arg),eatTheRest);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith(".")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arguments[0],stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){elseif(options.hasOption(arg.substring(6))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(arg.startsWith("-")){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-eatTheRest)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")&&!eatTheRest){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71fortunately(stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71fortunately(stopAtNonOption){tokens.add("-".equals(arg));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71StopAtNonOption=false;
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg.substring(0,1));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption","stopAtNonOption");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2&&stopAtNonOption.startsWith("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){stopAtNonOption=false;tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){elseif(stopAtNonOption||Util.stripLeadingHyphens(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){elseif(stopAtNonOption||Util.isStripLeadingHyphens(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){elseif(stopAtNonOption||Util.isLeadingHyphens(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){elseif(!stopAtNonOption&&options.hasOption(arguments[1)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i],arg,eatTheRest);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){elseif(!stopAtNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg.substring(1));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){Optionoptions=options.getOption(arg.substring(1));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71else{if(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){tokens.add("-".equals(arg));}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.contains(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.isEmpty()){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71else{tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2&&stopAtNonOption.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){elseif(options.hasOption("stopAtNonOption)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&!stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption".equals(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()-2];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption('/')){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("-")){elseif(stopAtNonOption&&arg.startsWith('-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}if(stopAtNonOption){if(!stopAtNonOption)stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}elseif(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}if(stopOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-eatTheRest")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)&&options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i]-1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-eatTheRest");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.startsWith("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arguments.length.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2&&options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2&&stopAtNonOption.startsWith("-")){
