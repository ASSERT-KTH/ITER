bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripRightHyphens(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripRightHyphens(arg,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripRightHyphens(arg,  stopAtNonOption);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    eatTheRest);    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
2	[BUG]  [BUGGY]  []  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  []  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	52	5	replace
4	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	52	5	replace
5	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption(arguments[0]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  UnrecognizedOptionException  	52	4	replace
6	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption(arguments[0]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  UnrecognizedOptionException  	52	4	replace
7	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption(arguments[1]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  UnrecognizedOptionException  	52	4	replace
8	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption(arguments[1]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  UnrecognizedOptionException  	52	4	replace
9	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  stopAtNonOption)  {	  else    if(!eatTheRest    &&    arg.startsWith(       "-       "))    {    else    if(!eatTheRest    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	44	4	replace
10	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  stopAtNonOption)  {  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  stopAtNonOption)  {	  else    if(!eatTheRest    &&    arg.startsWith(       "-       "))    {    else    if(!eatTheRest    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	44	4	replace
11	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||!arg.startsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||!arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(       "-       "))    {    else    if(!eatTheRest    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	44	4	replace
12	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||!arg.startsWith( "- "))  {  [FE]  UnrecognizedOptionException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||!arg.startsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||!arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(       "-       "))    {    else    if(!eatTheRest    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	44	4	replace
13	[BUG]  [BUGGY]  Option  options  =  options.getOption(i);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(i);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(i);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
14	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments[i]);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(arguments[i]);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(arguments[i]);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
15	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(arguments);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(arguments);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
16	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
17	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  If(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  ';'  expected  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  If(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    If(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }	  	non-compiled	[CE]  ';'  expected	61	None	add
18	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  }  [CE]  reached  end  of  file  while  parsing  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
19	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  not  a  statement  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    if(stopAtNonOption)  {!stopAtNonOption)  {  stopAtNonOption  =  false;  }	  	non-compiled	[CE]  not  a  statement	61	None	add
20	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  i  +  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  i  +  1);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  i  +  1);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    i);    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
21	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  1);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  1);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    i);    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
22	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
23	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  eatTheRest);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  eatTheRest);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arg,  eatTheRest);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
24	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&!stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	83	4	replace
25	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&!stopAtNonOption)  {  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&!stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	83	4	replace
26	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)||  stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	83	4	replace
27	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  stopAtNonOption)  {  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	83	4	replace
28	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&  stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	83	4	replace
29	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  stopAtNonOption)  {  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	83	4	replace
30	[BUG]  [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(   "stopAtNonOption   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(   "stopAtNonOption   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "stopAtNonOption   "))    {    else  if(options.hasOption(   "stopAtNonOption   "))  {	  	non-compiled	[CE]  	127	None	add
31	[BUG]  [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption( ",stopAtNonOption   "))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption( ",stopAtNonOption   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "stopAtNonOption   "))    {    else  if(options.hasOption( ",stopAtNonOption   "))  {	  	non-compiled	[CE]  	127	None	add
32	[BUG]  [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption( ".stopAtNonOption   "))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption( ".stopAtNonOption   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "stopAtNonOption   "))    {    else  if(options.hasOption( ".stopAtNonOption   "))  {	  	non-compiled	[CE]  	127	None	add
33	[BUG]  [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(, "stopAtNonOption   "))  {  [CE]  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(, "stopAtNonOption   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "stopAtNonOption   "))    {    else  if(options.hasOption(, "stopAtNonOption   "))  {	  	non-compiled	[CE]  	127	None	add
34	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  tokens.add( "- ");  }	  if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
35	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "- ".equals(arg));  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "- ".equals(arg));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  tokens.add( "- ".equals(arg));  }	  if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
36	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  tokens.add( "- ");  }	  else    if(!stopAtNonOption)    {    tokens.add(   "-   ");    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
37	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  tokens.add( "- ");  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  tokens.add( "- ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  tokens.add( "- ");  }	  else    if(!stopAtNonOption)    {    tokens.add(   "-   ");    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
38	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [CE]  'else'  without  'if'  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    	non-compiled	[CE]  'else'  without  'if'	88	None	replace
39	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  ||  stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	||  stopAtNonOption)  {  tokens.add( "- ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
40	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.startsWith( "-   "))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.startsWith( "-   "))  {	  else    if(stopAtNonOption    &&!eatTheRest.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
41	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.contains( "-   "))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.contains( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.contains( "-   "))  {	  else    if(stopAtNonOption    &&!eatTheRest.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
42	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(!stopAtNonOption)    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
43	[BUG]  [BUGGY]  if(options.hasOption(options))  {  else  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(options.hasOption(options))  {  else  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(options.hasOption(options))  {  else  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(!stopAtNonOption)    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
44	[BUG]  [BUGGY]  else  if(options.hasOption(arguments))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arguments))  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arguments))  {  tokens.add(arg);  }	  else    if(options.hasOption(options))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
45	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]                UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
46	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {  [FE]  UnrecognizedOptionException  [FE]                UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
47	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]                  UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)||  options.hasOption(arg.substring(2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
48	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(2)))  {  [FE]  UnrecognizedOptionException  [FE]                  UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  options.hasOption(arg.substring(2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
49	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]                    UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(1)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
50	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(1)))  {  [FE]  UnrecognizedOptionException  [FE]                    UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(1)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
51	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]                      UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
52	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  [FE]  UnrecognizedOptionException  [FE]                      UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	15	4	replace
53	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.toString()))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.toString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    else  if(options.hasOption(arg.toString()))  {	  	non-compiled	[CE]  	138	None	add
54	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  if(options.hasOption(arg.toString()))  {  tokens.add(arg);  }  else  if(options.hasOption(arg.toString()))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  if(options.hasOption(arg.toString()))  {  tokens.add(arg);  }  else  if(options.hasOption(arg.toString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    if(options.hasOption(arg.toString()))  {  tokens.add(arg);  }  else  if(options.hasOption(arg.toString()))  {	  	non-compiled	[CE]  	138	None	add
55	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.toString())&&  options.hasOption(arg.toString()))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.toString())&&  options.hasOption(arg.toString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    else  if(options.hasOption(arg.toString())&&  options.hasOption(arg.toString()))  {	  	non-compiled	[CE]  	138	None	add
56	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  if(options.hasOption(arg.toString()))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  if(options.hasOption(arg.toString()))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    if(options.hasOption(arg.toString()))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	138	None	add
57	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.toString())&&!stopAtNonOption)  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.toString())&&!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    else  if(options.hasOption(arg.toString())&&!stopAtNonOption)  {	  	non-compiled	[CE]  	138	None	add
58	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
59	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  i);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  i);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  i);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
60	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    options.hasOption(arg))    {    else  if(stopAtNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  	47	None	add
61	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopNonOption  &&  options.hasOption(arg))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    options.hasOption(arg))    {    else  if(stopNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  	47	None	add
62	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  if(stopAtNonOption  &&  options.hasOption(arg))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  if(stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    options.hasOption(arg))    {    if(stopAtNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  	47	None	add
63	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  other  if(stopAtNonOption  &&  options.hasOption(arg))  {  [CE]  not  a  statement  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  other  if(stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    options.hasOption(arg))    {    other  if(stopAtNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  not  a  statement	47	None	add
64	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  &&  arguments.hasOption(arg))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  &&  arguments.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    options.hasOption(arg))    {    else  if(stopAtNonOption  &&  arguments.hasOption(arg))  {	  	non-compiled	[CE]  	47	None	add
65	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripAtNonOption(arg);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripAtNonOption(arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripAtNonOption(arg);	  String[]    arguments    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
66	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
67	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
68	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
69	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(arg));  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(arg));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(arg));  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
70	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg.substring(0,    2));    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
71	[BUG]  [BUGGY]  Option  options  =  options.getOption(arg.substring(0,  2));  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(arg.substring(0,  2));  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(arg.substring(0,  2));	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg.substring(0,    2));    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
72	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg.substring(0,    2));    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
73	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  1));  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  1));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  1));  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg.substring(0,    2));    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
74	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "-   ")>  0)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "-   ")>  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.contains( "-   ")>  0)  {	  else    if(stopAtNonOption    &&    arguments.indexOf(   "-   ")>    0)    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
75	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.indexOf( "-   ")>  0)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.indexOf( "-   ")>  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.indexOf( "-   ")>  0)  {	  else    if(stopAtNonOption    &&    arguments.indexOf(   "-   ")>    0)    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
76	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    0)    {    else  if(stopAtNonOption  &&  arguments.length  >  0)  {	  	non-compiled	[CE]  	93	None	add
77	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    0)    {    else  if(stopAtNonOption  &&  arguments.length  >  2)  {	  	non-compiled	[CE]  	93	None	add
78	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  arguments.length  >  1)  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  arguments.length  >  1)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    0)    {    else  if(stopAtNonOption  &&  arguments.length  >  1)  {	  	non-compiled	[CE]  	93	None	add
79	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  ||  stopAtNonOption  &&  arguments.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  ||  stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    0)    {    ||  stopAtNonOption  &&  arguments.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)||  options.hasOption(arg.substring(0,  2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
81	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(0,  2)))  {  [FE]  ComparisonFailure  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  options.hasOption(arg.substring(0,  2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
82	[BUG]  [BUGGY]  else  if(options.hasOption(opt)&&  options.hasOption(arg.substring(0,  2)))  {  [CE]  cannot  find  symbol  opt  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(opt)&&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt)&&  options.hasOption(arg.substring(0,  2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  cannot  find  symbol  opt	12	None	replace
83	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]              UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)||  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    other    if(options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	86	4	replace
84	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg))  {  [FE]  UnrecognizedOptionException  [FE]              UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    other    if(options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	86	4	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    other    if(options.hasOption(arg))    {    	compilable	  [FE]  ComparisonFailure  	86	3	replace
86	[BUG]  [BUGGY]  else  if(!options.hasOption(arg))  {  [FE]  ComparisonFailure  [FE]                UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    other    if(options.hasOption(arg))    {    	compilable	  [FE]  ComparisonFailure  	86	3	replace
87	[BUG]  [BUGGY]  Option  option  =  options.getOption(i);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(i);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(i);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
88	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg.substring(1));  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(arg.substring(1));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(arg.substring(1));	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg.substring(2));  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(arg.substring(2));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(arg.substring(2));	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(arg,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(arg,  stopAtNonOption);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
91	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(2)))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(1)))    {    else  if(options.hasOption(arg.substring(2)))  {	  	non-compiled	[CE]  	35	None	add
92	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(1)))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(1)))    {    else  if(options.hasOption(arg.substring(1)))  {	  	non-compiled	[CE]  	35	None	add
93	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(3)))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(3)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(1)))    {    else  if(options.hasOption(arg.substring(3)))  {	  	non-compiled	[CE]  	35	None	add
94	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(4)))  {  [CE]  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(4)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(1)))    {    else  if(options.hasOption(arg.substring(4)))  {	  	non-compiled	[CE]  	35	None	add
95	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(5)))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(5)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(1)))    {    else  if(options.hasOption(arg.substring(5)))  {	  	non-compiled	[CE]  	35	None	add
96	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[1]);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[1]);	  arg    =    Util.stripLeadingHyphens(arguments[0]);    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
97	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [CE]  'else'  without  'if'  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
98	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	||  stopAtNonOption)  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
99	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  'else'  without  'if'  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
100	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  [CE]  illegal  start  of  expression  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	||  stopAtNonOption)  {  stopAtNonOption  =  false;	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
101	[BUG]  [BUGGY]  stopAtNonOption  =  false;  [CE]  'else'  without  'if'  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  stopAtNonOption  =  false;  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	stopAtNonOption  =  false;	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
102	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  1];  [CE]  ']'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  new  String[arg.length()  1];  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  1];	  String[]    arguments    =    new    String[arg.length()    -    1];    	non-compiled	[CE]  ']'  expected	18	None	replace
103	[BUG]  [BUGGY]  tokens.add(options.getOption(opt));  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add(options.getOption(opt));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(options.getOption(opt));	  parent    ==    null    &&    stopAtNonOption)    {    tokens.add(options.getOption(opt));    	non-compiled	[CE]  'else'  without  'if'	125	None	replace
104	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(arg));  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(arg));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(arg));	  parent    ==    null    &&    stopAtNonOption)    {    tokens.add(options.getOption(opt));    	non-compiled	[CE]  not  a  statement	125	None	replace
105	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length.startsWith( "-   "))  {  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length.startsWith( "-   "))  {	  else    if(stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	95	None	replace
106	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {	  else    if(stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	95	4	replace
107	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {	  else    if(stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	95	4	replace
108	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	84	4	replace
109	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg))  {  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	84	4	replace
110	[BUG]  [BUGGY]  else  if(options.hasValue(arg)&&  options.hasOption(arg))  {  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasValue(arg)&&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasValue(arg)&&  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
111	[BUG]  [BUGGY]  else  if(options.hasOption(arguments)&&  options.hasOption(arg))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arguments)&&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arguments)&&  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	84	None	replace
112	[BUG]  [BUGGY]  tokens.add( "-- ".equals(arg));  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add( "-- ".equals(arg));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "-- ".equals(arg));	  tokens.add(   "--n   ");    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
113	[BUG]  [BUGGY]  tokens.add( "--? ");  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add( "--? ");  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "--? ");	  tokens.add(   "--n   ");    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
114	[BUG]  [BUGGY]  String  arg  =  Util.stripRightHyphens(arguments);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripRightHyphens(arguments);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripRightHyphens(arguments);	  String    arg    =    Util.stripRightHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
115	[BUG]  [BUGGY]  String  arg  =  Util.stripRightHyphens(arguments[i]);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripRightHyphens(arguments[i]);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripRightHyphens(arguments[i]);	  String    arg    =    Util.stripRightHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
116	[BUG]  [BUGGY]  String  arg  =  Util.stripLightHyphens(arg);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLightHyphens(arg);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLightHyphens(arg);	  String    arg    =    Util.stripRightHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
117	[BUG]  [BUGGY]  tokens.add( "- ").equals(arg));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add( "- ").equals(arg));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "- ").equals(arg));	  tokens.add(   "-   ".equals(arg));    	non-compiled	[CE]  	26	None	replace
118	[BUG]  [BUGGY]  tokens.add( "- "  +  arg);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add( "- "  +  arg);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "- "  +  arg);	  tokens.add(   "-   ".equals(arg));    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
119	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    else  if(!stopAtNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  	45	None	add
120	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopNonOption  &&  options.hasOption(arg))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    else  if(!stopNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  	45	None	add
121	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    if(!stopAtNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  	45	None	add
122	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  other  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [CE]  not  a  statement  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  other  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    other  if(!stopAtNonOption  &&  options.hasOption(arg))  {	  	non-compiled	[CE]  not  a  statement	45	None	add
123	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  &&  arguments.hasOption(arg))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  &&  arguments.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    else  if(!stopAtNonOption  &&  arguments.hasOption(arg))  {	  	non-compiled	[CE]  	45	None	add
124	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  options.hasOption(arg))  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	137	None	replace
125	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	137	None	replace
126	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
127	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
128	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-. ");  }  [CE]  reached  end  of  file  while  parsing  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-. ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-. ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	add
129	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);	  String    arg    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
130	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(options);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(options);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(options);	  String    arg    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
131	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments,  i);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments,  i);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arguments,  i);	  String    arg    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
132	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.contains( "-   "))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.contains( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.contains( "-   "))  {	  else    if(stopAtNonOption    &&    arguments.contains(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
133	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "-- "))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.contains( "-- "))  {	  else    if(stopAtNonOption    &&    arguments.contains(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
134	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	if(!stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	4	replace
135	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  [FE]  StringIndexOutOfBoundsException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(!stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	4	replace
136	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	if(stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	34	5	replace
137	[BUG]  [BUGGY]  if(stopAtNonOption)  {  [FE]  UnrecognizedOptionException  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	34	5	replace
138	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	115	None	add
139	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( ".-   "))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( ".-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( ".-   "))  {	  	non-compiled	[CE]  	115	None	add
140	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[i]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption(arguments[i]))  {	  else    if(stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	48	4	replace
141	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[i]))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arguments[i]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption(arguments[i]))  {	  else    if(stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	48	4	replace
142	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {	  else    if(stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	48	4	replace
143	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {	  else    if(stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	48	4	replace
144	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption   ",  arg.length);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption   ",  arg.length);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption   ",  arg.length);	  String[]    arguments    =    options.get(   "stopAtNonOption   ",    arg);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
145	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  arg.startsWith( "-   "))  {	  else    if(stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	8	4	replace
146	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( "-   "))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  arg.startsWith( "-   "))  {	  else    if(stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	8	4	replace
147	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {	  	non-compiled	[CE]  	51	None	add
148	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    else  if(!stopAtNonOption  &&  options.hasOption(arguments[1]))  {	  	non-compiled	[CE]  	51	None	add
149	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[2]))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[2]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    else  if(!stopAtNonOption  &&  options.hasOption(arguments[2]))  {	  	non-compiled	[CE]  	51	None	add
150	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[3]))  {  [CE]  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[3]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    else  if(!stopAtNonOption  &&  options.hasOption(arguments[3]))  {	  	non-compiled	[CE]  	51	None	add
151	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopNonOption  &&  options.hasOption(arguments[0]))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopNonOption  &&  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    else  if(!stopNonOption  &&  options.hasOption(arguments[0]))  {	  	non-compiled	[CE]  	51	None	add
152	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ".length());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ".length());  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption ".length());	  String[]    arguments    =    options.get(   "stopAtNonOption.   ");    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
153	[BUG]  [BUGGY]  else  if(options.hasOption('-'))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption('-'))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption('-'))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption('-       "))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	82	None	replace
154	[BUG]  [BUGGY]  else  if(options.hasOption('0'))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption('0'))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption('0'))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption('-       "))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	82	None	replace
155	[BUG]  [BUGGY]  else  if(options.hasOption('-')&&!stopAtNonOption)  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption('-')&&!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption('-')&&!stopAtNonOption)  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption('-       "))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	82	None	replace
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  >  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  arguments.length  >  0)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  ComparisonFailure  	94	3	replace
157	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  >  0)  {  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  >  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  arguments.length  >  0)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  ComparisonFailure  	94	3	replace
158	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  1)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arguments.length  >  1)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  UnrecognizedOptionException  	94	4	replace
159	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  1)  {  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  1)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length  >  1)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  UnrecognizedOptionException  	94	4	replace
160	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  <  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arguments.length  <  2)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  UnrecognizedOptionException  	94	4	replace
161	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  <  2)  {  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  <  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length  <  2)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  UnrecognizedOptionException  	94	4	replace
162	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  tokens.add(arg);  }	  if(stopAtNonOption)    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
163	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(arguments[i]);  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(arguments[i]);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  tokens.add(arguments[i]);  }	  if(stopAtNonOption)    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
164	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  /  2];  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  new  String[arg.length()  /  2];  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  /  2];	  String[]    arguments    =    new    String[arg.length()    *    2];    	non-compiled	[CE]  'else'  without  'if'	126	None	replace
165	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  2);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  2);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  2);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    0);    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
166	[BUG]  [BUGGY]  else  if(!eatTheRest)  {  if(stopAtNonOption)  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!eatTheRest)  {  if(stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!eatTheRest)  {  if(stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    if(stopAtNonOption)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
167	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    2)    {    else  if(stopAtNonOption  &&  arguments.length  >  2)  {	  	non-compiled	[CE]  	76	None	add
168	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption  &&  arguments.length  >  1)  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption  &&  arguments.length  >  1)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    2)    {    else  if(stopAtNonOption  &&  arguments.length  >  1)  {	  	non-compiled	[CE]  	76	None	add
169	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption  &&  argument.length  >  2)  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption  &&  argument.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    2)    {    else  if(stopAtNonOption  &&  argument.length  >  2)  {	  	non-compiled	[CE]  	76	None	add
170	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption   ",  0);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption   ",  0);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption   ",  0);	  String[]    arguments    =    options.get(   "stopAtNonOption   ",    i);    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
171	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[i]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption(arguments[i]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	46	4	replace
172	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[i]))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[i]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arguments[i]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	46	4	replace
173	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.equals( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&!arg.equals( "- "))  {	  else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	10	4	replace
174	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arg.equals( "- "))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.equals( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arg.equals( "- "))  {	  else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	10	4	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg.substring(1,  2)))  {	  else    if(options.hasOption(arg.substring(1)))    {    	compilable	  [FE]  ComparisonFailure  	36	3	replace
176	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1,  2)))  {  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.substring(1,  2)))  {	  else    if(options.hasOption(arg.substring(1)))    {    	compilable	  [FE]  ComparisonFailure  	36	3	replace
177	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arguments[i]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  options.hasOption(arguments[i]))  {	  else    if(stopAtNonOption    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	90	4	replace
178	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arguments[i]))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arguments[i]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  options.hasOption(arguments[i]))  {	  else    if(stopAtNonOption    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	90	4	replace
179	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  options.hasOption(arguments[0]))  {	  else    if(stopAtNonOption    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	90	4	replace
180	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arguments[0]))  {  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  options.hasOption(arguments[0]))  {	  else    if(stopAtNonOption    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	90	4	replace
181	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	31	4	replace
182	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  stopAtNonOption)  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	31	4	replace
183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  ||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  ||  stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    	compilable	  [FE]  ComparisonFailure  	31	3	replace
184	[BUG]  [BUGGY]  else  if(!stopAtNonOption  ||  stopAtNonOption)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  ||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  ||  stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    	compilable	  [FE]  ComparisonFailure  	31	3	replace
185	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	131	None	add
186	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    if(stopNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	131	None	add
187	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  <  tokens.add(arg);  }  [CE]  >  expected  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  <  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  <  tokens.add(arg);  }	  	non-compiled	[CE]  >  expected	131	None	add
188	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  If(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [CE]  ';'  expected  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  If(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    If(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	  	non-compiled	[CE]  ';'  expected	131	None	add
189	[BUG]  [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption))  {  [CE]  unclosed  string  literal  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption))  {	  else    if(options.hasOption(   "stopAtNonOption   "))    {    	non-compiled	[CE]  unclosed  string  literal	128	None	replace
190	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption "))  {	  else    if(options.hasOption(   "stopAtNonOption   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	128	4	replace
191	[BUG]  [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption "))  {  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "stopAtNonOption ")||  options.hasOption( "stopAtNonOption "))  {	  else    if(options.hasOption(   "stopAtNonOption   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	128	4	replace
192	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stop "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption( "stop "))  {	  else    if(options.hasOption(   "stopAtNonOption   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	128	4	replace
193	[BUG]  [BUGGY]  else  if(options.hasOption( "stop "))  {  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stop "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "stop "))  {	  else    if(options.hasOption(   "stopAtNonOption   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	128	4	replace
194	[BUG]  [BUGGY]  String  arg  =  Util.stripLowerCase(arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLowerCase(arguments);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLowerCase(arguments);	  String    arg    =    Util.stripLowerCase(arg);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
195	[BUG]  [BUGGY]  String  arg  =  Util.stripLowerCase(arguments[i]);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLowerCase(arguments[i]);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLowerCase(arguments[i]);	  String    arg    =    Util.stripLowerCase(arg);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
196	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( ".- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	71	4	replace
197	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".- "))  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( ".- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	71	4	replace
198	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( ".- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arg.startsWith( ".- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	71	4	replace
199	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( ".- "))  {  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( ".- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arg.startsWith( ".- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	71	4	replace
200	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	70	4	replace
201	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ". "))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	70	4	replace
202	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  2);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  2);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]  +  2);	  arg    =    Util.stripLeadingHyphens(arguments[i]    +    1);    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
203	[BUG]  [BUGGY]  else  if(options.hasOption(arguments)||  stopAtNonOption)  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arguments)||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arguments)||  stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)||    stopAtNonOption)    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	85	None	replace
204	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  StopAtNonOption)  {  [CE]  cannot  find  symbol  StopAtNonOption  [FE]              UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  StopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  StopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)||    stopAtNonOption)    {    	non-compiled	[CE]  cannot  find  symbol  StopAtNonOption	85	None	replace
205	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  tokens.add( "- ");  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg))  {  tokens.add( "- ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {  tokens.add( "- ");  }	  options.hasOption(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
206	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.contains( "-   "))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.contains( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.contains( "-   "))  {	  else    if(!stopAtNonOption    &&    arguments.contains(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
207	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains( "-- "))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.contains( "-- "))  {	  else    if(!stopAtNonOption    &&    arguments.contains(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
208	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption)  {  tokens.add(arg);	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    tokens.add(arg);    	compilable	  [FE]  UnrecognizedOptionException  	117	7	replace
209	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(arg);  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  tokens.add(arg);	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    tokens.add(arg);    	compilable	  [FE]  UnrecognizedOptionException  	117	7	replace
210	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg,  stopAtNonOption));  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg,  stopAtNonOption));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(Util.stripLeadingHyphens(arg,  stopAtNonOption));	  tokens.add(Util.stripLeadingHyphens(arg));    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
211	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg),  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg),  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(Util.stripLeadingHyphens(arg),  stopAtNonOption);	  tokens.add(Util.stripLeadingHyphens(arg));    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
212	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg)+  1);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg)+  1);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(Util.stripLeadingHyphens(arg)+  1);	  tokens.add(Util.stripLeadingHyphens(arg));    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
213	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg  +  2);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg  +  2);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arg  +  2);	  String    arg    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
214	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(i  +  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(i  +  1);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(i  +  1);	  String    arg    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
215	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    ||    options.hasOption(arg))    {    else  if(stopAtNonOption  ||  options.hasOption(arg))  {	  	non-compiled	[CE]  	89	None	add
216	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  if(stopAtNonOption  ||  options.hasOption(arg))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  if(stopAtNonOption  ||  options.hasOption(arg))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    ||    options.hasOption(arg))    {    if(stopAtNonOption  ||  options.hasOption(arg))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	89	None	add
217	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  else  if(stopNonOption  ||  options.hasOption(arg))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  else  if(stopNonOption  ||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    ||    options.hasOption(arg))    {    else  if(stopNonOption  ||  options.hasOption(arg))  {	  	non-compiled	[CE]  	89	None	add
218	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  if(stopAtNonOption  ||  options.hasOption(arg))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  if(stopAtNonOption  ||  options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    ||    options.hasOption(arg))    {    if(stopAtNonOption  ||  options.hasOption(arg))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	89	None	add
219	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  if(stopAtNonOption  ||  options.hasOption(arg))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  if(stopAtNonOption  ||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    ||    options.hasOption(arg))    {    if(stopAtNonOption  ||  options.hasOption(arg))  {	  	non-compiled	[CE]  	89	None	add
220	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(arguments);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
221	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
222	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.startsWith( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	9	None	add
223	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.startsWith( ".-   "))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.startsWith( ".-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!arg.startsWith( ".-   "))  {	  	non-compiled	[CE]  	9	None	add
224	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.endsWith( "-   "))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.endsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!arg.endsWith( "-   "))  {	  	non-compiled	[CE]  	9	None	add
225	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  1)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arguments.length  >  1)  {	  else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    	compilable	  [FE]  UnrecognizedOptionException  	50	4	replace
226	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  1)  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  1)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.length  >  1)  {	  else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    	compilable	  [FE]  UnrecognizedOptionException  	50	4	replace
227	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arguments.length  >  0)  {	  else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    	compilable	  [FE]  ComparisonFailure  	50	3	replace
228	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0)  {  [FE]  ComparisonFailure  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.length  >  0)  {	  else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    	compilable	  [FE]  ComparisonFailure  	50	3	replace
229	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripDeadingHyphens(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripDeadingHyphens(arg,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripDeadingHyphens(arg,  stopAtNonOption);	  String[]    arguments    =    Util.stripDeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
230	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripDeadingHyphens(arg,  i);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripDeadingHyphens(arg,  i);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripDeadingHyphens(arg,  i);	  String[]    arguments    =    Util.stripDeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	101	None	replace
231	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(options))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!options.hasOption(arg.toString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!options.hasOption(arg.toString()))  {	  else    if(options.hasOption(arg.toString()))    {    	compilable	  [FE]  ComparisonFailure  	139	3	replace
233	[BUG]  [BUGGY]  else  if(!options.hasOption(arg.toString()))  {  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!options.hasOption(arg.toString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!options.hasOption(arg.toString()))  {	  else    if(options.hasOption(arg.toString()))    {    	compilable	  [FE]  ComparisonFailure  	139	3	replace
234	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length.startsWith( "-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length.startsWith( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length.startsWith( "-- "))  {	  else    if(stopAtNonOption    &&    arguments.startsWith(   "--   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	119	None	replace
235	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption( "-- "))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	57	4	replace
236	[BUG]  [BUGGY]  else  if(options.hasOption( "-- "))  {  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "-- "))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	57	4	replace
237	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
238	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(opt);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(opt);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(opt);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
239	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
240	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
241	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-   ".equals(arg))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	compilable	  [FE]  ComparisonFailure  	29	3	replace
242	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-   ".equals(arg))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	compilable	  [FE]  ComparisonFailure  	29	3	replace
243	[BUG]  [BUGGY]  if(arg.startsWith( "-   "))  {  else  if( "- ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(arg.startsWith( "-   "))  {  else  if( "- ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(arg.startsWith( "-   "))  {  else  if( "- ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-   ".equals(arg))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  	29	None	replace
244	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg);  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg);  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
245	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg);	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	113	None	replace
246	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg);  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
247	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "/ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( "/ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
248	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "/ "))  {  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "/ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( "/ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
249	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( "/ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arg.startsWith( "/ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
250	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( "/ "))  {  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( "/ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arg.startsWith( "/ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
251	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "./ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( "./ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
252	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "./ "))  {  [FE]  UnrecognizedOptionException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "./ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( "./ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
253	[BUG]  [BUGGY]  else  if(options.hasValue(arg)||  options.hasOption(arg))  {  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasValue(arg)||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasValue(arg)||  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg))    {    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
254	[BUG]  [BUGGY]  else  if(options.hasArg(arg)||  options.hasOption(arg))  {  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasArg(arg)||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasArg(arg)||  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg))    {    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
255	[BUG]  [BUGGY]  else  if(options.hasOption(arg.charAt(0),  2))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.charAt(0),  2))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.charAt(0),  2))  {	  else    if(options.hasOption(arg.charAt(0)))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	80	None	replace
256	[BUG]  [BUGGY]  else  if(options.hasOption(arg.charAt(0))  ||  options.hasOption(arg.charAt(0)))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.charAt(0))  ||  options.hasOption(arg.charAt(0)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.charAt(0))  ||  options.hasOption(arg.charAt(0)))  {	  else    if(options.hasOption(arg.charAt(0)))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	80	None	replace
257	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!eatTheRest)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!eatTheRest)  {	  else    if(!stopAtNonOption)    {    else    if(!stopAtNonOption)    {    	compilable	  [FE]  ComparisonFailure  	30	3	replace
258	[BUG]  [BUGGY]  else  if(!eatTheRest)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!eatTheRest)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!eatTheRest)  {	  else    if(!stopAtNonOption)    {    else    if(!stopAtNonOption)    {    	compilable	  [FE]  ComparisonFailure  	30	3	replace
259	[BUG]  [BUGGY]  if(options.hasOption(options))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(options.hasOption(options))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(options.hasOption(options))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(options))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
260	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0],  arg);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0],  arg);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[0],  arg);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  'else'  without  'if'	134	None	replace
261	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  0);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  0);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  0);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  'else'  without  'if'	134	None	replace
262	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.isEmpty()  &&  arg.startsWith( "- "))  {  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.isEmpty()  &&  arg.startsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.isEmpty()  &&  arg.startsWith( "- "))  {	  else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
263	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.isEmpty()  &&  stopAtNonOption.startsWith( "- "))  {  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.isEmpty()  &&  stopAtNonOption.startsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.isEmpty()  &&  stopAtNonOption.startsWith( "- "))  {	  else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
264	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)||  options.hasOption(arg.substring(1)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	13	4	replace
265	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(1)))  {  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  options.hasOption(arg.substring(1)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	13	4	replace
266	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg.substring(0,  2));  [CE]  'else'  without  'if'  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(arg.substring(0,  2));  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(arg.substring(0,  2));	  if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	132	None	replace
267	[BUG]  [BUGGY]  Option  option  =  options.hasOption(arg.substring(0,  2));  [CE]  'else'  without  'if'  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.hasOption(arg.substring(0,  2));  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.hasOption(arg.substring(0,  2));	  if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	132	None	replace
268	[BUG]  [BUGGY]  Option  options  =  options.getOptions(arg.substring(0,  2));  [CE]  'else'  without  'if'  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOptions(arg.substring(0,  2));  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOptions(arg.substring(0,  2));	  if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	132	None	replace
269	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  tokens.add( "-- ");  }	  else    if(!stopAtNonOption)    {    tokens.add(   "--   ");    	non-compiled	[CE]  'else'  without  'if'	118	None	replace
270	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }	  else    if(!stopAtNonOption)    {    tokens.add(   "--   ");    	non-compiled	[CE]  'else'  without  'if'	118	None	replace
271	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  tokens.add( "-- ");  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  tokens.add( "-- ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  tokens.add( "-- ");  }	  else    if(!stopAtNonOption)    {    tokens.add(   "--   ");    	non-compiled	[CE]  'else'  without  'if'	118	None	replace
272	[BUG]  [BUGGY]  else  if(options.hasValue(arg))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasValue(arg))  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasValue(arg))  {  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
273	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(0,  1)))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(0,  1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(0,    1)))    {    else  if(options.hasOption(arg.substring(0,  1)))  {	  	non-compiled	[CE]  	37	None	add
274	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(0,  2)))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(0,    1)))    {    else  if(options.hasOption(arg.substring(0,  2)))  {	  	non-compiled	[CE]  	37	None	add
275	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(1)))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(0,    1)))    {    else  if(options.hasOption(arg.substring(1)))  {	  	non-compiled	[CE]  	37	None	add
276	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(2)))  {  [CE]  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(0,    1)))    {    else  if(options.hasOption(arg.substring(2)))  {	  	non-compiled	[CE]  	37	None	add
277	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(1,  2)))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(1,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(0,    1)))    {    else  if(options.hasOption(arg.substring(1,  2)))  {	  	non-compiled	[CE]  	37	None	add
278	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(options,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(options,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(options,  stopAtNonOption);	  String    arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
279	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);	  String    arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
280	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(2)))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(2)))    {    else  if(options.hasOption(arg.substring(2)))  {	  	non-compiled	[CE]  	39	None	add
281	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(3)))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(3)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(2)))    {    else  if(options.hasOption(arg.substring(3)))  {	  	non-compiled	[CE]  	39	None	add
282	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(1)))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(2)))    {    else  if(options.hasOption(arg.substring(1)))  {	  	non-compiled	[CE]  	39	None	add
283	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(4)))  {  [CE]  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(4)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(2)))    {    else  if(options.hasOption(arg.substring(4)))  {	  	non-compiled	[CE]  	39	None	add
284	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(5)))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  else  if(options.hasOption(arg.substring(5)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(2)))    {    else  if(options.hasOption(arg.substring(5)))  {	  	non-compiled	[CE]  	39	None	add
285	[BUG]  [BUGGY]  Option  options  =  options.getOption(arg.substring(1));  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(arg.substring(1));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(arg.substring(1));	  Option    options    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
286	[BUG]  [BUGGY]  Option  options  =  options.getOption(arg.substring(2));  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(arg.substring(2));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(arg.substring(2));	  Option    options    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
287	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    else  if(!stopAtNonOption  &&  arguments.length  >  2)  {	  	non-compiled	[CE]  	49	None	add
288	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  &&  arguments.length  >  1)  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  &&  arguments.length  >  1)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    else  if(!stopAtNonOption  &&  arguments.length  >  1)  {	  	non-compiled	[CE]  	49	None	add
289	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  &&  argument.length  >  2)  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  &&  argument.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    else  if(!stopAtNonOption  &&  argument.length  >  2)  {	  	non-compiled	[CE]  	49	None	add
290	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    else  if(stopAtNonOption)  {	  	non-compiled	[CE]  	91	None	add
291	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  ||  stopAtNonOption)  {  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  ||  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    ||  stopAtNonOption)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
292	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  reached  end  of  file  while  parsing  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	91	None	add
293	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  tokens.add(arg);  }  else  if(stopAtNonOption)  {  [CE]  [FE]          UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  tokens.add(arg);  }  else  if(stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    if(stopAtNonOption)  {  tokens.add(arg);  }  else  if(stopAtNonOption)  {	  	non-compiled	[CE]  	91	None	add
294	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]            UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    if(stopAtNonOption)  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	91	None	add
295	[BUG]  [BUGGY]  else  if(arg.startsWith( "-   "))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(arg.startsWith( "-   "))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(arg.startsWith( "-   "))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-       ".equals(arg))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
296	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  if( "-   ".equals(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-       ".equals(arg))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	97	None	replace
297	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".0 "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( ".0 "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
298	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".0 "))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".0 "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( ".0 "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
299	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".jar "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( ".jar "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
300	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".jar "))  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".jar "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( ".jar "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
301	[BUG]  [BUGGY]  tokens.add(options.hasOption(opt));  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add(options.hasOption(opt));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(options.hasOption(opt));	  parent    ==    null    &&    stopAtNonOption)    {    tokens.add(options.hasOption(opt));    	non-compiled	[CE]  'else'  without  'if'	124	None	replace
302	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add(options.hasOption(opt));  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add(options.hasOption(opt));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	parent!=  null  &&  stopAtNonOption)  {  tokens.add(options.hasOption(opt));	  parent    ==    null    &&    stopAtNonOption)    {    tokens.add(options.hasOption(opt));    	non-compiled	[CE]  not  a  statement	124	None	replace
303	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".java "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( ".java "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith('-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	105	4	replace
304	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".java "))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( ".java "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( ".java "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith('-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	105	4	replace
305	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
306	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-! ");  }  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-! ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-! ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
307	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-. ");  }  [CE]  reached  end  of  file  while  parsing  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-. ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-. ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {	  else    if(!stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	73	3	replace
309	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(0,  2)))  {	  else    if(!stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	73	3	replace
310	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	7	None	add
311	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith( ".-   "))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith( ".-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&  arg.startsWith( ".-   "))  {	  	non-compiled	[CE]  	7	None	add
312	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith( "/   "))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith( "/   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&  arg.startsWith( "/   "))  {	  	non-compiled	[CE]  	7	None	add
313	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopNonOption  &&  arg.startsWith( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopNonOption  &&  arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(stopNonOption  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	7	None	add
314	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(opt));  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(opt));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	parent!=  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(opt));	  parent    ==    null    &&    stopAtNonOption)    {    tokens.add(options.getOption(opt));    	non-compiled	[CE]  not  a  statement	125	None	replace
315	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( "-- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	71	4	replace
316	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "-- "))  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( "-- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	71	4	replace
317	[BUG]  [BUGGY]  else  if(!eatTheRest)  {  if(!stopAtNonOption)  {  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!eatTheRest)  {  if(!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!eatTheRest)  {  if(!stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	replace
318	[BUG]  [BUGGY]  else  if(options.hasOption(opt))  {  if(!stopAtNonOption)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(opt))  {  if(!stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt))  {  if(!stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	replace
319	[BUG]  [BUGGY]  else  if(options.hasOption(stopAtNonOption))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(stopAtNonOption))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(stopAtNonOption))  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	34	None	replace
320	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  other  if(!stopAtNonOption  &&  arguments.length  >  2)  {  [CE]  not  a  statement  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  other  if(!stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    other  if(!stopAtNonOption  &&  arguments.length  >  2)  {	  	non-compiled	[CE]  not  a  statement	49	None	add
321	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopNonOption  &&  arguments.length  >  2)  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopNonOption  &&  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    else  if(!stopNonOption  &&  arguments.length  >  2)  {	  	non-compiled	[CE]  	49	None	add
322	[BUG]  [BUGGY]  else  if(options.hasOption(stopAtNonOption))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(stopAtNonOption))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(stopAtNonOption))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-       ".equals(arg))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
323	[BUG]  [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(  stopAtNonOption   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(  stopAtNonOption   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "stopAtNonOption   "))    {    else  if(options.hasOption(  stopAtNonOption   "))  {	  	non-compiled	[CE]  	127	None	add
324	[BUG]  [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(! "stopAtNonOption   "))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(! "stopAtNonOption   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "stopAtNonOption   "))    {    else  if(options.hasOption(! "stopAtNonOption   "))  {	  	non-compiled	[CE]  	127	None	add
325	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)+  1;  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)+  1;  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)+  1;	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
326	[BUG]  [BUGGY]  else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	88	None	replace
327	[BUG]  [BUGGY]  else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(arg);  }  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(arg);  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	88	None	replace
328	[BUG]  [BUGGY]  else  if(options.hasOption(options[0]))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [CE]  array  required,  but  Options  found  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(options[0]))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options[0]))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    	non-compiled	[CE]  array  required,  but  Options  found	88	None	replace
329	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stoppingAtNonOption);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stoppingAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  stoppingAtNonOption);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    eatTheRest);    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
330	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  StopAtNonOption);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  StopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  StopAtNonOption);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    eatTheRest);    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
331	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
332	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( ". "))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
333	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.charAt(0)))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.charAt(0)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(1)))    {    else  if(options.hasOption(arg.charAt(0)))  {	  	non-compiled	[CE]  	35	None	add
334	[BUG]  [BUGGY]  else  if(options.hasOption(stopAtNonOption))  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(stopAtNonOption))  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(stopAtNonOption))  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-   ".equals(arg))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	29	None	replace
335	[BUG]  [BUGGY]  else  if(options.hasOption(opt))  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(opt))  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt))  {  if( "-   ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-   ".equals(arg))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  cannot  find  symbol  opt	29	None	replace
336	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.indexOf( "-   ")  >=  0)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.indexOf( "-   ")  >=  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.indexOf( "-   ")  >=  0)  {	  else    if(stopAtNonOption    &&    arguments.indexOf(   "-   ")>    0)    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
337	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.indexOf( "-   ")  ==  0)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.indexOf( "-   ")  ==  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.indexOf( "-   ")  ==  0)  {	  else    if(stopAtNonOption    &&    arguments.indexOf(   "-   ")>    0)    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
338	[BUG]  [BUGGY]  aughtExceptionHandler(throwAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  aughtExceptionHandler(throwAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	aughtExceptionHandler(throwAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
339	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(arg));  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(arg));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(arg));  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
340	[BUG]  [BUGGY]  aughtExceptionHandler(throwAtNonOption);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  aughtExceptionHandler(throwAtNonOption);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	aughtExceptionHandler(throwAtNonOption);	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
341	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  'else'  without  'if'	103	None	replace
342	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    0)    {    int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  	93	None	add
343	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    0)    {    int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[0]);	  	non-compiled	[CE]  	93	None	add
344	[BUG]  [BUGGY]  else  if(options.hasOption( "stopAtNonOption))  {  [CE]  unclosed  string  literal  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stopAtNonOption))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "stopAtNonOption))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption(   "-       "))    {    	non-compiled	[CE]  unclosed  string  literal	56	None	replace
345	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(tokens);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(tokens);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(tokens);	  String    arg    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
346	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.equals( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!arg.equals( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!arg.equals( "-   "))  {	  	non-compiled	[CE]  	9	None	add
347	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  while(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  while(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    while(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	131	None	add
348	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(2)))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    if(stopAtNonOption)  {  if(options.hasOption(arg.substring(2)))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	131	None	add
349	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
350	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(stopAtNonOption);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(stopAtNonOption);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(stopAtNonOption);	  String[]    arguments    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
351	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(option);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(option);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(option);	  String[]    arguments    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
352	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(turnAtNonOption);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(turnAtNonOption);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(turnAtNonOption);	  String[]    arguments    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
353	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  }  [CE]  'else'  without  'if'  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  stopAtNonOption  =  true;  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
354	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  stopAtNonOption  &&  arg.startsWith( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  stopAtNonOption  &&  arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&  stopAtNonOption  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	115	None	add
355	[BUG]  [BUGGY]  String  arg  =  Util.stripLowerCase(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLowerCase(arg,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLowerCase(arg,  stopAtNonOption);	  String    arg    =    Util.stripLowerCase(arg);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
356	[BUG]  [BUGGY]  Option  options  =  options.getOption(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(arg,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(arg,  stopAtNonOption);	  Option    options    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
357	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption( "-   "))  {	  else    if(!stopAtNonOption    &&    arguments.contains(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	74	4	replace
358	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption( "-   "))  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption( "-   "))  {	  else    if(!stopAtNonOption    &&    arguments.contains(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	74	4	replace
359	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  other  if(stopAtNonOption  ||  options.hasOption(arg))  {  [CE]  not  a  statement  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  other  if(stopAtNonOption  ||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    ||    options.hasOption(arg))    {    other  if(stopAtNonOption  ||  options.hasOption(arg))  {	  	non-compiled	[CE]  not  a  statement	89	None	add
360	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  else  if(stopAtNonOption  ||  choices.hasOption(arg))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  else  if(stopAtNonOption  ||  choices.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    ||    options.hasOption(arg))    {    else  if(stopAtNonOption  ||  choices.hasOption(arg))  {	  	non-compiled	[CE]  	89	None	add
361	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length.startsWith( "-   "))  {  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.length.startsWith( "-   "))  {	  else    if(!stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
362	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  arguments.length  >  2)  {	  else    if(stopAtNonOption    &&    arguments.length    >    2)    {    	compilable	  [FE]  UnrecognizedOptionException  	77	4	replace
363	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  >  2)  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  arguments.length  >  2)  {	  else    if(stopAtNonOption    &&    arguments.length    >    2)    {    	compilable	  [FE]  UnrecognizedOptionException  	77	4	replace
364	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);	  String    arg    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
365	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  &&  Options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  &&  Options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    options.hasOption(arg))    {    else  if(stopAtNonOption  &&  Options.hasOption(arg))  {	  	non-compiled	[CE]  	47	None	add
366	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  options.hasOption(arg.substring(2)))  {	  else    if(stopAtNonOption    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	90	4	replace
367	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg.substring(2)))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  options.hasOption(arg.substring(2)))  {	  else    if(stopAtNonOption    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	90	4	replace
368	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.substring(2)))  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    if(options.hasOption(arg))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
369	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.substring(1)))  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    if(options.hasOption(arg))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
370	[BUG]  [BUGGY]  if(options.hasOption(options))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(options.hasOption(options))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(options.hasOption(options))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(options))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
371	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  ==  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arguments.length  ==  0)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  UnrecognizedOptionException  	94	4	replace
372	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  ==  0)  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  ==  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length  ==  0)  {	  else    if(stopAtNonOption    &&    arguments.length    >    0)    {    	compilable	  [FE]  UnrecognizedOptionException  	94	4	replace
373	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)||  options.hasOption(arguments[0]))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	121	4	replace
374	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arguments[0]))  {  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  options.hasOption(arguments[0]))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	121	4	replace
375	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(3)))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(3)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(0,    1)))    {    else  if(options.hasOption(arg.substring(3)))  {	  	non-compiled	[CE]  	37	None	add
376	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {	  else    if(stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	48	4	replace
377	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {	  else    if(stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	48	4	replace
378	[BUG]  [BUGGY]  else  if(options.hasOption(options)||  options.hasOption(options))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(options)||  options.hasOption(options))  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options)||  options.hasOption(options))  {  tokens.add(arg);  }	  else    if(options.hasOption(options))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
379	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(2));  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(2));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(2));  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg.substring(0,    2));    	non-compiled	[CE]  'else'  without  'if'	112	None	replace
380	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg.substring(0,    2));    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	112	None	replace
381	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    2)    {    int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  	76	None	add
382	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    2)    {    int  stopAtNonOption  =  Util.stripLeadingHyphens(arguments[0]);	  	non-compiled	[CE]  	76	None	add
383	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  other  if(stopAtNonOption  &&  arguments.length  >  2)  {  [CE]  not  a  statement  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  other  if(stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    2)    {    other  if(stopAtNonOption  &&  arguments.length  >  2)  {	  	non-compiled	[CE]  not  a  statement	76	None	add
384	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  *  2  +  1];  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  new  String[arg.length()  *  2  +  1];  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  *  2  +  1];	  String[]    arguments    =    new    String[arg.length()    *    2];    	non-compiled	[CE]  'else'  without  'if'	126	None	replace
385	[BUG]  [BUGGY]  String  arg  =  Util.stripRightHyphens(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripRightHyphens(arg,  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripRightHyphens(arg,  stopAtNonOption);	  String    arg    =    Util.stripRightHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
386	[BUG]  [BUGGY]  tokens.add( "-e ");  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add( "-e ");  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "-e ");	  tokens.add(   "-n   ");    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
387	[BUG]  [BUGGY]  else  if(options.hasOption('n'))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption('n'))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption('n'))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption('-       "))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	82	None	replace
388	[BUG]  [BUGGY]  else  if(options.hasOption(':'))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(':'))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(':'))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption('-       "))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	82	None	replace
389	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)+  1;  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)+  1;  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)+  1;	  String    arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
390	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  if(options.hasOption(arg.toString()))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  if(options.hasOption(arg.toString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    if(options.hasOption(arg.toString()))  {	  	non-compiled	[CE]  	138	None	add
391	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  other  if(options.hasOption(arg.toString()))  {  [CE]  not  a  statement  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  other  if(options.hasOption(arg.toString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    other  if(options.hasOption(arg.toString()))  {	  	non-compiled	[CE]  not  a  statement	138	None	add
392	[BUG]  [BUGGY]  else  if(options.hasOption(opt)&&  options.hasOption(arg.substring(2)))  {  [CE]  cannot  find  symbol  opt  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(opt)&&  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt)&&  options.hasOption(arg.substring(2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  cannot  find  symbol  opt	12	None	replace
393	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Options  options  =  options.getOption(arg);  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Options  options  =  options.getOption(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Options  options  =  options.getOption(arg);  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
394	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.endsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&!arg.endsWith( "- "))  {	  else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	10	4	replace
395	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arg.endsWith( "- "))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arg.endsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arg.endsWith( "- "))  {	  else    if(stopAtNonOption    &&!arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	10	4	replace
396	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(3)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg.substring(3)))  {	  else    if(options.hasOption(arg.toString()))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	139	11	replace
397	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(3)))  {  [FE]  StringIndexOutOfBoundsException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(3)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.substring(3)))  {	  else    if(options.hasOption(arg.toString()))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	139	11	replace
398	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith('-'))  {  [CE]  no  suitable  method  found  for  startsWith(char)  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith('-'))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith('-'))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith('-       "))    {    	non-compiled	[CE]  no  suitable  method  found  for  startsWith(char)	105	None	replace
399	[BUG]  [BUGGY]  Option  options  =  options.getOption(options);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  Option  options  =  options.getOption(options);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(options);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
400	[BUG]  [BUGGY]  else  if(options.hasOption(opt)&&  options.hasOption(arg))  {  [CE]  cannot  find  symbol  opt  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(opt)&&  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt)&&  options.hasOption(arg))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	non-compiled	[CE]  cannot  find  symbol  opt	84	None	replace
401	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(opt))  {  [CE]  cannot  find  symbol  opt  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(opt))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption(opt))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	non-compiled	[CE]  cannot  find  symbol  opt	84	None	replace
402	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  else  if(options.hasOption(arg))  {  if(stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  else  if(options.hasOption(arg))  {  if(stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    else  if(options.hasOption(arg))  {  if(stopAtNonOption)  {  stopAtNonOption  =  false;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
403	[BUG]  [BUGGY]  else  if(options.hasOption(arg.charAt(i)))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.charAt(i)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.charAt(i)))  {	  else    if(options.hasOption(arg.charAt(0)))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	80	None	replace
404	[BUG]  [BUGGY]  else  if(options.hasOption(arg.charAt(i),  1))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.charAt(i),  1))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.charAt(i),  1))  {	  else    if(options.hasOption(arg.charAt(0)))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	80	None	replace
405	[BUG]  [BUGGY]  else  if(options.hasOption(arg.charAt(i,  1)))  {  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.charAt(i,  1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.charAt(i,  1)))  {	  else    if(options.hasOption(arg.charAt(0)))    {    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	80	None	replace
406	[BUG]  [BUGGY]  else  if(options.hasOption(arg.charAt(i,  2)))  {  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]              UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.charAt(i,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.charAt(i,  2)))  {	  else    if(options.hasOption(arg.charAt(0)))    {    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	80	None	replace
407	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  tokens);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  tokens);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  tokens);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    i);    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
408	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||!eatTheRest  &&  arg.startsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||!eatTheRest  &&  arg.startsWith( "- "))  {	  else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	116	3	replace
409	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||!eatTheRest  &&  arg.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||!eatTheRest  &&  arg.startsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||!eatTheRest  &&  arg.startsWith( "- "))  {	  else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	116	3	replace
410	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arguments.startsWith( "- "))  {  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arguments.startsWith( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!eatTheRest  &&  arguments.startsWith( "- "))  {	  else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
411	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  eatTheRest);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  eatTheRest);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  eatTheRest);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  'else'  without  'if'	134	None	replace
412	[BUG]  [BUGGY]  else  if(options.hasOption(arguments)&&  stopAtNonOption)  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arguments)&&  stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arguments)&&  stopAtNonOption)  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)||    stopAtNonOption)    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	85	None	replace
413	[BUG]  [BUGGY]  else  if(options.hasOption( "-   "))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "-   "))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "-   "))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
414	[BUG]  [BUGGY]  tors.add( "- ");  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tors.add( "- ");  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tors.add( "- ");	  if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
415	[BUG]  [BUGGY]  else  if(options.hasOption(arg.length()))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.length()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.length()))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    else    if    (options.hasOption(arg.substring(1)))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	109	None	replace
416	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  &&  Options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  &&  Options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    else  if(!stopAtNonOption  &&  Options.hasOption(arg))  {	  	non-compiled	[CE]  	45	None	add
417	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption( "-   "))  {	  else    if(stopAtNonOption    &&    arguments.contains(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	75	4	replace
418	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption( "-   "))  {  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption( "-   "))  {	  else    if(stopAtNonOption    &&    arguments.contains(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	75	4	replace
419	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	137	None	replace
420	[BUG]  [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(!stopAtNonOption)    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
421	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(!stopAtNonOption)    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
422	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  other  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [CE]  not  a  statement  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  other  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    other  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {	  	non-compiled	[CE]  not  a  statement	51	None	add
423	[BUG]  [BUGGY]  else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	60	None	replace
424	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	compilable	  [FE]  UnrecognizedOptionException  	60	12	replace
425	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	compilable	  [FE]  UnrecognizedOptionException  	60	12	replace
426	[BUG]  [BUGGY]  else  if(options.hasOption(options[0]))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [CE]  array  required,  but  Options  found  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(options[0]))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options[0]))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	non-compiled	[CE]  array  required,  but  Options  found	60	None	replace
427	[BUG]  [BUGGY]  if(stopAtNonOption)  {  else  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  else  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  else  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
428	[BUG]  [BUGGY]  else  if(options.hasOption( "-   "))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "-   "))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "-   "))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
429	[BUG]  [BUGGY]  else  if(options.hasOption(opt)||  options.hasOption(arg.substring(2)))  {  [CE]  cannot  find  symbol  opt  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(opt)||  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt)||  options.hasOption(arg.substring(2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  cannot  find  symbol  opt	13	None	replace
430	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  if(stopAtNonOption)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    if(stopAtNonOption)  {	  	non-compiled	[CE]  	91	None	add
431	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "- ");  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add( "- ");  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    tokens.add( "- ");	  	non-compiled	[CE]  	91	None	add
432	[BUG]  [BUGGY]  else  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(options))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	96	None	replace
433	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  cannot  find  symbol  opt	100	None	replace
434	[BUG]  [BUGGY]  else  {  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  {  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  {  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
435	[BUG]  [BUGGY]  else  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
436	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  stopAtNonOption  =  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  stopAtNonOption  =  false;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
437	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    else  if(options.hasOption(arg))  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	add
438	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption)&&  arguments.length  >  2)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  else  if(stopAtNonOption)&&  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    2)    {    else  if(stopAtNonOption)&&  arguments.length  >  2)  {	  	non-compiled	[CE]  	76	None	add
439	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  i  +  1);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  i  +  1);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arg,  i  +  1);	  String    arg    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  'else'  without  'if'	102	None	replace
440	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(!eatTheRest)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	if(!eatTheRest)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	4	replace
441	[BUG]  [BUGGY]  if(!eatTheRest)  {  [FE]  StringIndexOutOfBoundsException  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(!eatTheRest)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(!eatTheRest)  {	  else    if(!stopAtNonOption)    {    if(!stopAtNonOption)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	4	replace
442	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  [Delete]  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	[Delete]	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
443	[BUG]  [BUGGY]  aughtExceptionHandler(throwAtNonOption,  arguments);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  aughtExceptionHandler(throwAtNonOption,  arguments);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	aughtExceptionHandler(throwAtNonOption,  arguments);	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
444	[BUG]  [BUGGY]  aughtExceptionHandler(throwAtNonOption,  arg);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  aughtExceptionHandler(throwAtNonOption,  arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	aughtExceptionHandler(throwAtNonOption,  arg);	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
445	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "-))  {  [CE]  unclosed  string  literal  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "-))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.contains( "-))  {	  else    if(stopAtNonOption    &&    arguments.contains(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
446	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(1,  1)))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  else  if(options.hasOption(arg.substring(1,  1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(0,    1)))    {    else  if(options.hasOption(arg.substring(1,  1)))  {	  	non-compiled	[CE]  	37	None	add
447	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toLowerCase()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg.toLowerCase()))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    else    if    (options.hasOption(arg.substring(1)))    {    	compilable	  [FE]  UnrecognizedOptionException  	109	4	replace
448	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toLowerCase()))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toLowerCase()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.toLowerCase()))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    else    if    (options.hasOption(arg.substring(1)))    {    	compilable	  [FE]  UnrecognizedOptionException  	109	4	replace
449	[BUG]  [BUGGY]  else  {  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  {  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  {  if(options.hasOption(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	98	None	replace
450	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)||  options.hasOption( "- "))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	121	4	replace
451	[BUG]  [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption( "- "))  {  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)||  options.hasOption( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)||  options.hasOption( "- "))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	121	4	replace
452	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  eatTheRest);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  eatTheRest);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  eatTheRest);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
453	[BUG]  [BUGGY]  tokens.add( "-- ").equals(arg));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add( "-- ").equals(arg));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "-- ").equals(arg));	  tokens.add(   "-   ".equals(arg));    	non-compiled	[CE]  	26	None	replace
454	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.getValue()))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.getValue()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    else  if(options.hasOption(arg.getValue()))  {	  	non-compiled	[CE]  	138	None	add
455	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.getString()))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.toString()))  {  else  if(options.hasOption(arg.getString()))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.toString()))    {    else  if(options.hasOption(arg.getString()))  {	  	non-compiled	[CE]  	138	None	add
456	[BUG]  [BUGGY]  else  if(options.hasOption(opt)||  options.hasOption(arg.substring(0,  2)))  {  [CE]  cannot  find  symbol  opt  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(opt)||  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt)||  options.hasOption(arg.substring(0,  2)))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)    ||    options.hasOption(arg.substring(0,    2)))    {    	non-compiled	[CE]  cannot  find  symbol  opt	13	None	replace
457	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ".);  }  [CE]  <identifier>  expected  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ".);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ".);  }	  	non-compiled	[CE]  <identifier>  expected	87	None	add
458	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( "/ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  arg.startsWith( "/ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
459	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( "/ "))  {  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( "/ "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  arg.startsWith( "/ "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(   "/       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	72	4	replace
460	[BUG]  [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add(arg);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	fortunately(stopAtNonOption)  {  tokens.add(arg);  }	  if(stopAtNonOption)    {    tokens.add(arg);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
461	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith('-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	105	4	replace
462	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( ". "))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  ||  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith('-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	105	4	replace
463	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(parent));  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(parent));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(parent));	  parent    ==    null    &&    stopAtNonOption)    {    tokens.add(options.getOption(opt));    	non-compiled	[CE]  not  a  statement	125	None	replace
464	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  argument.length  >  0)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  else  if(stopAtNonOption  &&  argument.length  >  0)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arguments.length    >    0)    {    else  if(stopAtNonOption  &&  argument.length  >  0)  {	  	non-compiled	[CE]  	93	None	add
465	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  int  i);  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  int  i);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  int  i);	  String[]    arguments    =    Util.stripLeadingHyphens(arg,    i);    	non-compiled	[CE]  '.class'  expected	54	None	replace
466	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arguments);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arguments);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arguments);	  String[]    arguments    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
467	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLadingHyphens(arg);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  Util.stripLadingHyphens(arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLadingHyphens(arg);	  String[]    arguments    =    Util.stripLeadingHyphens(opt);    	non-compiled	[CE]  'else'  without  'if'	107	None	replace
468	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    options.hasOption(arg))    {    else  if(stopAtNonOption  ||  options.hasOption(arg))  {	  	non-compiled	[CE]  	47	None	add
469	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [CE]  'else'  without  'if'  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
470	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(arg);  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
471	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [CE]  'else'  without  'if'  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
472	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eattheRest  &&  arg.startsWith( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eattheRest  &&  arg.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!eattheRest  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	115	None	add
473	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.endsWith( "-   "))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.endsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&!eatTheRest  &&  arg.endsWith( "-   "))  {	  	non-compiled	[CE]  	115	None	add
474	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  ||  arguments.length  >  2)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  else  if(!stopAtNonOption  ||  arguments.length  >  2)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arguments.length    >    2)    {    else  if(!stopAtNonOption  ||  arguments.length  >  2)  {	  	non-compiled	[CE]  	49	None	add
475	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add(arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption)  {  tokens.add(arg);	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    tokens.add(arg);    	compilable	  [FE]  MissingArgumentException  	117	10	replace
476	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add(arg);  [FE]  MissingArgumentException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add(arg);  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  tokens.add(arg);	  else    if(!stopAtNonOption)    {    ||    stopAtNonOption)    {    tokens.add(arg);    	compilable	  [FE]  MissingArgumentException  	117	10	replace
477	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg,  eatTheRest));  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg,  eatTheRest));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(Util.stripLeadingHyphens(arg,  eatTheRest));	  tokens.add(Util.stripLeadingHyphens(arg));    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
478	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg),  eatTheRest);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg),  eatTheRest);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(Util.stripLeadingHyphens(arg),  eatTheRest);	  tokens.add(Util.stripLeadingHyphens(arg));    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
479	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!eatTheRest  &&  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
480	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith( ". "))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith( ". "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!eatTheRest  &&  arg.startsWith( ". "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(       "-       "))    {    else    if(!stopAtNonOption    &&    arg.startsWith(.   "-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	122	4	replace
481	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arguments[0]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  UnrecognizedOptionException  	52	4	replace
482	[BUG]  [BUGGY]  else  if(options.hasOption(arguments[0]))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arguments[0]))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    	compilable	  [FE]  UnrecognizedOptionException  	52	4	replace
483	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);	  String    arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
484	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(6)))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  else  if(options.hasOption(arg.substring(6)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg.substring(1)))    {    else  if(options.hasOption(arg.substring(6)))  {	  	non-compiled	[CE]  	35	None	add
485	[BUG]  [BUGGY]  else  if(arg.startsWith( "-   "))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(arg.startsWith( "-   "))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(arg.startsWith( "-   "))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  else    if(   "-   ".equals(arg))    {    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
486	[BUG]  [BUGGY]  else  if(options.hasOption( "-eatTheRest))  {  [CE]  unclosed  string  literal  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "-eatTheRest))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "-eatTheRest))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption(   "-       "))    {    	non-compiled	[CE]  unclosed  string  literal	56	None	replace
487	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")&&!eatTheRest)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption( "stopAtNonOption ")&&!eatTheRest)  {	  else    if(options.hasOption(   "stopAtNonOption   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	128	4	replace
488	[BUG]  [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")&&!eatTheRest)  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "stopAtNonOption ")&&!eatTheRest)  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "stopAtNonOption ")&&!eatTheRest)  {	  else    if(options.hasOption(   "stopAtNonOption   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	128	4	replace
489	[BUG]  [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	fortunately(stopAtNonOption)  {  tokens.add( "- ");  }	  if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	108	None	replace
490	[BUG]  [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "- ".equals(arg));  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "- ".equals(arg));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	fortunately(stopAtNonOption)  {  tokens.add( "- ".equals(arg));  }	  if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	108	None	replace
491	[BUG]  [BUGGY]  StopAtNonOption  =  false;  [CE]  'else'  without  'if'  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  StopAtNonOption  =  false;  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	StopAtNonOption  =  false;	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
492	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	46	4	replace
493	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(2)))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	46	4	replace
494	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	46	4	replace
495	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arg.substring(1)))  {	  else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	46	4	replace
496	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  1));  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  1));  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  1));	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg.substring(0,    2));    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	112	None	replace
497	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ", "stopAtNonOption ");  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ", "stopAtNonOption ");  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption ", "stopAtNonOption ");	  String[]    arguments    =    options.get(   "stopAtNonOption       ",    stopAtNonOption);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
498	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-- "))  {  [CE]  boolean  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-- "))  {	  else    if(stopAtNonOption    &&    arguments.startsWith(   "--   "))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	119	None	replace
499	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add(arg);  }	  if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-       ");    }    	non-compiled	[CE]  'else'  without  'if'	88	None	replace
500	[BUG]  [BUGGY]  else  if(options.hasOption(options))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(options))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options))  {	  else    if(!stopAtNonOption)    {    else    if(!stopAtNonOption)    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	30	None	replace
501	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption  ||  Util.stripLeadingHyphens(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption  ||  Util.stripLeadingHyphens(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    else  if(stopAtNonOption  ||  Util.stripLeadingHyphens(arg))  {	  	non-compiled	[CE]  	91	None	add
502	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption  ||  Util.isStripLeadingHyphens(arg))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption  ||  Util.isStripLeadingHyphens(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    else  if(stopAtNonOption  ||  Util.isStripLeadingHyphens(arg))  {	  	non-compiled	[CE]  	91	None	add
503	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption  ||  Util.isLeadingHyphens(arg))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  else  if(stopAtNonOption  ||  Util.isLeadingHyphens(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption)    {    else  if(stopAtNonOption  ||  Util.isLeadingHyphens(arg))  {	  	non-compiled	[CE]  	91	None	add
504	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[1))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  else  if(!stopAtNonOption  &&  options.hasOption(arguments[1))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arguments[0]))    {    else  if(!stopAtNonOption  &&  options.hasOption(arguments[1))  {	  	non-compiled	[CE]  	51	None	add
505	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  eatTheRest);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  eatTheRest);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  eatTheRest);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  'else'  without  'if'	134	None	replace
506	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  ||  options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  else  if(!stopAtNonOption  ||  options.hasOption(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    options.hasOption(arg))    {    else  if(!stopAtNonOption  ||  options.hasOption(arg))  {	  	non-compiled	[CE]  	45	None	add
507	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(1));  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(1));  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(1));  }	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg);    	non-compiled	[CE]  'else'  without  'if'	113	None	replace
508	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(1));  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(1));  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(1));	  else    if(!stopAtNonOption)    {    Option    options    =    options.getOption(arg);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	113	None	replace
509	[BUG]  [BUGGY]  else  {  if(options.hasOption(arg))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  {  if(options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  {  if(options.hasOption(arg))  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    if(options.hasOption(arg))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
510	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]                UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  if(options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption)  {  if(options.hasOption(arg))  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    if(options.hasOption(arg))    {    tokens.add(arg);    }    	compilable	  [FE]  MissingArgumentException  	14	9	replace
511	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  if(options.hasOption(arg))  {  tokens.add(arg);  }  [FE]  MissingArgumentException  [FE]                UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption)  {  if(options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  if(options.hasOption(arg))  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    if(options.hasOption(arg))    {    tokens.add(arg);    }    	compilable	  [FE]  MissingArgumentException  	14	9	replace
512	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  tokens.add( "- ".equals(arg));  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg))  {  tokens.add( "- ".equals(arg));  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {  tokens.add( "- ".equals(arg));  }	  options.hasOption(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
513	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.contains(arg))  {  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.contains(arg))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.contains(arg))  {	  else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
514	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.isEmpty())  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.isEmpty())  {	  else    if(stopAtNonOption    &&!eatTheRest    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
515	[BUG]  [BUGGY]  else  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  {  tokens.add(arg);  }	  else    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
516	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-   "))  {  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-   "))  {	  else    if(stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	95	None	replace
517	[BUG]  [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(   "stopAtNonOption))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(   "stopAtNonOption   "))  {  else  if(options.hasOption(   "stopAtNonOption))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "stopAtNonOption   "))    {    else  if(options.hasOption(   "stopAtNonOption))  {	  	non-compiled	[CE]  	127	None	add
518	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&!stopAtNonOption)  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&!stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&!stopAtNonOption)  {  tokens.add(arg);  }	  else    if(options.hasOption(arg))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	137	None	replace
519	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ".equals(arg));  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ".equals(arg));  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption ".equals(arg));	  String[]    arguments    =    options.get(   "stopAtNonOption.   ");    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
520	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  -  2];  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  String[]  arguments  =  new  String[arg.length()  -  2];  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  -  2];	  String[]    arguments    =    new    String[arg.length()    *    2];    	non-compiled	[CE]  'else'  without  'if'	126	None	replace
521	[BUG]  [BUGGY]  else  if(options.hasOption('/'))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption('/'))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption('/'))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption('-       "))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	82	None	replace
522	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith('-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(stopAtNonOption  &&  arg.startsWith('-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(stopAtNonOption  &&  arg.startsWith('-   "))  {	  	non-compiled	[CE]  	7	None	add
523	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add(   "-     ");  }  if(stopAtNonOption)  {  if(!stopAtNonOption)  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(!stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-       ");    }    if(stopAtNonOption)  {  if(!stopAtNonOption)  stopAtNonOption  =  true;  tokens.add( "-   ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
524	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  else  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]    UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  else  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    else  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	131	None	add
525	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]      UnrecognizedOptionException    [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  if(stopOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)    {    if(options.hasOption(arg.substring(0,    2)))    {    tokens.add(arg);    }    if(stopOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	131	None	add
526	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "-eatTheRest "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption( "-eatTheRest "))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	57	4	replace
527	[BUG]  [BUGGY]  else  if(options.hasOption( "-eatTheRest "))  {  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption( "-eatTheRest "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "-eatTheRest "))  {	  else    if(options.hasOption(       "-       "))    {    else    if(options.hasOption(   ".-       "))    {    	compilable	  [FE]  UnrecognizedOptionException  	57	4	replace
528	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&  options.hasOption( "- "))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	84	4	replace
529	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption( "- "))  {  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption( "- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption( "- "))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	84	4	replace
530	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg)&&  options.hasOption(arguments[0]))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	84	4	replace
531	[BUG]  [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arguments[0]))  {  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(options.hasOption(arg)&&  options.hasOption(arguments[0]))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg)&&  options.hasOption(arguments[0]))  {	  else    if(options.hasOption(arg))    {    else    if(options.hasOption(arg)&&    options.hasOption(arg))    {    	compilable	  [FE]  UnrecognizedOptionException  	84	4	replace
532	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  -  1);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  -  1);  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]  -  1);	  arg    =    Util.stripLeadingHyphens(arguments[i]    +    1);    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
533	[BUG]  [BUGGY]  tokens.add( "-eatTheRest ");  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  tokens.add( "-eatTheRest ");  [BUGGY]      else  if  (arg.startsWith(     "-     "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "-eatTheRest ");	  tokens.add(   "-n   ");    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
534	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.startsWith( "-- "))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.startsWith( "-- "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.startsWith( "-- "))  {	  else    if(stopAtNonOption    &&!eatTheRest.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
535	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arguments.length.startsWith( "-   "))  {  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(stopAtNonOption  &&!arguments.length.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arguments.length.startsWith( "-   "))  {	  else    if(stopAtNonOption    &&!eatTheRest.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	106	None	replace
536	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  options.hasOption( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  options.hasOption( "-   "))  {	  else    if(!stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	73	4	replace
537	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  options.hasOption( "-   "))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  options.hasOption( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  options.hasOption( "-   "))  {	  else    if(!stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	73	4	replace
538	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-   "))  {  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-   "))  {  [BUGGY]      {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.length  >  2  &&  stopAtNonOption.startsWith( "-   "))  {	  else    if(!stopAtNonOption    &&    arguments.startsWith(   "-   "))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	73	None	replace
