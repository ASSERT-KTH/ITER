bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "- "))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arg.startsWith( "- "))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
2	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith( "- "))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arg.startsWith( "- "))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if  (options.hasOption(arg.substring(0,  2)))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
4	[BUG]  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if  (options.hasOption(arg.substring(0,  2)))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
5	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(options.hasOption(arg))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  UnrecognizedOptionException  	20	4	replace
6	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(options.hasOption(arg))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  UnrecognizedOptionException  	20	4	replace
7	[BUG]  [BUGGY]    [CE]  'else'  without  'if'  [FE]          ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	  	else  if  (arg.startsWith( "- "))  {  	non-compiled	[CE]  'else'  without  'if'	20	None	replace
8	[BUG]  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  [CE]  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    arg  =  Util.stripLeadingHyphens(arg);		non-compiled	[CE]  	21	None	add
9	[BUG]  [BUGGY]    tokens.add( "- ");  [CE]  [FE]      ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    tokens.add( "- ");  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    tokens.add( "- ");		non-compiled	[CE]  	21	None	add
10	[BUG]  [BUGGY]    String[]  arguments  =  options.get( "stopAtNonOption ");  [CE]  [FE]        ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    String[]  arguments  =  options.get( "stopAtNonOption ");  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    String[]  arguments  =  options.get( "stopAtNonOption ");		non-compiled	[CE]  	21	None	add
11	[BUG]  [BUGGY]    String[]  arguments  =  new  String[arg.length()  ];  [CE]  [FE]          ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    String[]  arguments  =  new  String[arg.length()  ];  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    String[]  arguments  =  new  String[arg.length()  ];		non-compiled	[CE]  	21	None	add
12	[BUG]  [BUGGY]    arg  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  [FE]            ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    arg  =  Util.stripLeadingHyphens(arguments[i]);		non-compiled	[CE]  	21	None	add
13	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(options.hasOption( "- "))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption( "- "))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  UnrecognizedOptionException  	20	4	replace
14	[BUG]  [BUGGY]  else  if(options.hasOption( "- "))  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(options.hasOption( "- "))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "- "))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  UnrecognizedOptionException  	20	4	replace
15	[BUG]  [BUGGY]    String[]  arguments  =  Util.stripLeadingHyphens(arg);  [CE]  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    String[]  arguments  =  Util.stripLeadingHyphens(arg);  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    String[]  arguments  =  Util.stripLeadingHyphens(arg);		non-compiled	[CE]  	21	None	add
16	[BUG]  [BUGGY]    if(stopAtNonOption)  {  if(options.hasOption(opt))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    if(stopAtNonOption)  {  if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    if(stopAtNonOption)  {  if(options.hasOption(opt))  {  tokens.add(arg);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
17	[BUG]  [BUGGY]    if(stopAtNonOption)  {  if(!eatTheRest)  {  eatTheRest  =  true;  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    if(stopAtNonOption)  {  if(!eatTheRest)  {  eatTheRest  =  true;  tokens.add( "- ");  }  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    if(stopAtNonOption)  {  if(!eatTheRest)  {  eatTheRest  =  true;  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
18	[BUG]  [BUGGY]    if(stopAtNonOption)  {  if(options.hasOption(opt))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    if(stopAtNonOption)  {  if(options.hasOption(opt))  {  tokens.add( "- ");  }  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    if(stopAtNonOption)  {  if(options.hasOption(opt))  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	add
19	[BUG]  [BUGGY]    tokens.add( "-- ");  [CE]  [FE]            ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    tokens.add( "-- ");  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    tokens.add( "-- ");		non-compiled	[CE]  	21	None	add
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(!stopAtNonOption)  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption)  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
21	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(!stopAtNonOption)  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith( "- "))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!eatTheRest  &&  arg.startsWith( "- "))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
23	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith( "- "))  {  [BUGGY]  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!eatTheRest  &&  arg.startsWith( "- "))  {	else  if  (arg.startsWith( "- "))  {  	compilable	  [FE]  ComparisonFailure  	20	3	replace
24	[BUG]  [BUGGY]    String  arg  =  Util.stripLeadingHyphens(arg);  [CE]  [FE]    ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    String  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    String  arg  =  Util.stripLeadingHyphens(arg);		non-compiled	[CE]  	21	None	add
25	[BUG]  [BUGGY]    String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [CE]  [FE]      ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);		non-compiled	[CE]  	21	None	add
26	[BUG]  [BUGGY]    tokens.add(arg);  [CE]  [FE]        ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    tokens.add(arg);  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    tokens.add(arg);		non-compiled	[CE]  	21	None	add
27	[BUG]  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [CE]  [FE]          ComparisonFailure  [CONTEXT]  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]  else  if  (arg.startsWith( "- "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);		non-compiled	[CE]  	21	None	add
