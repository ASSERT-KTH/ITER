projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(opt)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!eatTheRest){eatTheRest=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(opt)){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("--");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg);tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arguments);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLowerCase(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(0,1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)||options.hasOption(arg.substring(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){if(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()+1];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()+2];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()-1];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-".equals(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("-n");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif("-".equals(arg)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){elseif(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add("-");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){if(!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eattheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&options.hasOption(arguments[0])){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,stopAtNonOption);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,0);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption(")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=true;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71options.hasOption(arg)){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoptions=options.getOption(opt);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(!stopAtNonOption){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith(".-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith("/")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arguments.contains("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.contains("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>2){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[0]);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i]+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.charAt(0))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add(Util.stripLeadingHyphens(arg));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("-")){elseif(options.hasOption('-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&!stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)&&options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)||stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){otherif(options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(!stopAtNonOption){stopAtNonOption=false;tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.length>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif("-".equals(arg)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){Stringarg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(options)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(opt)){arg=Util.stripLeadingHyphens(arg);tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripDeadingHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripLeadingHyphens(arg+1);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Optionoption=options.getOption(opt);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add("--n");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith('-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(opt);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.substring(1))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption",i);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=options.get("stopAtNonOption.");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){Optionoptions=options.getOption(arg.substring(0,2));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){Optionoptions=options.getOption(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=Util.stripLeadingHyphens(arg,eatTheRest);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&!eatTheRest&&arg.startsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){||stopAtNonOption){tokens.add(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption){tokens.add("--");
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.startsWith("--")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(stopAtNonOption&&arguments.indexOf("-")>0){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){elseif(options.hasOption(arg)||options.hasOption(arg)){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!stopAtNonOption&&arg.startsWith("-")){elseif(!stopAtNonOption&&arg.startsWith(."-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add("-");}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add(options.hasOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71parent==null&&stopAtNonOption){tokens.add(options.getOption(opt));
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71String[]arguments=newString[arg.length()*2];
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption("stopAtNonOption")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.substring(0,2))){elseif(options.hasOption(arg.string(0,2))){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71Stringarg=Util.stripRightHyphens(arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71if(stopAtNonOption){if(options.hasOption(arg.substring(0,2))){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71tokens.add('-');
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71arg=Util.stripLeadingHyphens(arguments[i],arg);
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.startsWith('-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(!eatTheRest&&arg.startsWith("-")){elseif(!eatTheRest&&arg.endsWith("-")){
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg)){tokens.add(arg);}
projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java71elseif(options.hasOption(arg.toString())){
