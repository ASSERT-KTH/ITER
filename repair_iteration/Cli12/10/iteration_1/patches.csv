bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arguments);	      String    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
2	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);	      String    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
3	[BUG]  [BUGGY]  String  arg  =  Util.stripLowerCase(arg);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String  arg  =  Util.stripLowerCase(arg);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLowerCase(arg);	      String    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
4	[BUG]  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(0,  2)))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(0,  2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if    (options.hasOption(arg.substring(0,    2)))    {    else  if  (options.hasOption(arg.substring(0,  2)))  {	  	non-compiled	[CE]  	3	None	add
5	[BUG]  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(2)))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if    (options.hasOption(arg.substring(0,    2)))    {    else  if  (options.hasOption(arg.substring(2)))  {	  	non-compiled	[CE]  	3	None	add
6	[BUG]  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(0,  1)))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(0,  1)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if    (options.hasOption(arg.substring(0,    2)))    {    else  if  (options.hasOption(arg.substring(0,  1)))  {	  	non-compiled	[CE]  	3	None	add
7	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	23	4	replace
8	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( "- "))  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arg.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	23	4	replace
9	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&!arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	23	4	replace
10	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith( "- "))  {  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&!arg.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	23	4	replace
11	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg))  {	  	non-compiled	[CE]  	5	None	add
12	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(0,  2)))  {	  	non-compiled	[CE]  	5	None	add
13	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)  ||  options.hasOption(arg.substring(0,  2)))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)  ||  options.hasOption(arg.substring(0,  2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg)  ||  options.hasOption(arg.substring(0,  2)))  {	  	non-compiled	[CE]  	5	None	add
14	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  if(options.hasOption(arg))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]          UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  if(options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    if(options.hasOption(arg))  {  tokens.add(arg);  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
15	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {  [CE]  [FE]            UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg)&&  options.hasOption(arg.substring(2)))  {	  	non-compiled	[CE]  	5	None	add
16	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  +  1];  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  new  String[arg.length()  +  1];  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  +  1];	      String[]    arguments    =    new    String[arg.length()    ];    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
17	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  +  2];  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  new  String[arg.length()  +  2];  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  +  2];	      String[]    arguments    =    new    String[arg.length()    ];    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
18	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  -  1];  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  new  String[arg.length()  -  1];  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  -  1];	      String[]    arguments    =    new    String[arg.length()    ];    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
19	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(options.hasOption(arg))  {  tokens.add(arg);  }	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
20	[BUG]  [BUGGY]  options.hasOption(arg))  {  tokens.add(arg);  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	options.hasOption(arg))  {  tokens.add(arg);  }	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
21	[BUG]  [BUGGY]  Option  options  =  options.getOption(arg);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  Option  options  =  options.getOption(arg);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(arg);	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(arg);	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
23	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);	      arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
24	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ",  arg);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ",  arg);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption ",  arg);	      String[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
25	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption   ",  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption   ",  stopAtNonOption);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption   ",  stopAtNonOption);	      String[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
26	[BUG]  [BUGGY]  tokens.add( "- ".equals(arg));  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  tokens.add( "- ".equals(arg));  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "- ".equals(arg));	      tokens.add(   "-   ");    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
27	[BUG]  [BUGGY]  tokens.add( "-n ");  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  tokens.add( "-n ");  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "-n ");	      tokens.add(   "-   ");    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
28	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	      arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
29	[BUG]  [BUGGY]  else  if( "- ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if( "- ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if( "- ".equals(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	      arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
30	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  else  if(!stopAtNonOption)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  else  if(!stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    else  if(!stopAtNonOption)  {	  	non-compiled	[CE]  	20	None	add
31	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  ||  stopAtNonOption)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  ||  stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    ||  stopAtNonOption)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
32	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  if(stopAtNonOption)  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  if(stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    if(stopAtNonOption)  {	  	non-compiled	[CE]  	20	None	add
33	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "- ");  [CE]  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "- ");  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    tokens.add( "- ");	  	non-compiled	[CE]  	20	None	add
34	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  if(!stopAtNonOption)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  if(!stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    if(!stopAtNonOption)  {	  	non-compiled	[CE]  	20	None	add
35	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg.substring(1)))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
36	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.substring(1)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.substring(1)))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
37	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg.substring(0,  1)))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
38	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.substring(0,  1)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.substring(0,  1)))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
39	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg.substring(2)))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
40	[BUG]  [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.substring(2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.substring(2)))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
41	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith( "-   "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith( "-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(!eatTheRest  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	22	None	add
42	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith( ".-   "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith( ".-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(!eatTheRest  &&  arg.startsWith( ".-   "))  {	  	non-compiled	[CE]  	22	None	add
43	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eattheRest  &&  arg.startsWith( "-   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eattheRest  &&  arg.startsWith( "-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(!eattheRest  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	22	None	add
44	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith( "/   "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith( "/   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(!eatTheRest  &&  arg.startsWith( "/   "))  {	  	non-compiled	[CE]  	22	None	add
45	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption(arg))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
46	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arg))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
47	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  options.hasOption(arg))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
48	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  options.hasOption(arg))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
49	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  arguments.length  >  2)  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
50	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  [FE]  UnrecognizedOptionException  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.length  >  2)  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
51	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
52	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  options.hasOption(arguments[0]))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
53	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);	      String[]    arguments    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
54	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  i);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  i);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  i);	      String[]    arguments    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
55	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  0);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  0);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  0);	      String[]    arguments    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
56	[BUG]  [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption( "-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption( "-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "-   "))    {    else  if(options.hasOption( "-   "))  {	  	non-compiled	[CE]  	13	None	add
57	[BUG]  [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption( ".-   "))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption( ".-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "-   "))    {    else  if(options.hasOption( ".-   "))  {	  	non-compiled	[CE]  	13	None	add
58	[BUG]  [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption( "))  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption( "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "-   "))    {    else  if(options.hasOption( "))  {	  	non-compiled	[CE]  	13	None	add
59	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    if(!eatTheRest)    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	compilable	  [FE]  UnrecognizedOptionException  	17	5	replace
60	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    if(!eatTheRest)    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	compilable	  [FE]  UnrecognizedOptionException  	17	5	replace
61	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }	      if(stopAtNonOption)    {    if(!eatTheRest)    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	compilable	  [FE]  UnrecognizedOptionException  	17	5	replace
62	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  }	      if(stopAtNonOption)    {    if(!eatTheRest)    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	compilable	  [FE]  UnrecognizedOptionException  	17	5	replace
63	[BUG]  [BUGGY]  else  if(options.hasOption(opt))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt))  {  tokens.add(arg);  }	      tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
64	[BUG]  [BUGGY]  else  if(options.hasOption(options))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(options))  {  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options))  {  tokens.add(arg);  }	      tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
65	[BUG]  [BUGGY]  options.hasOption(arg))  {  tokens.add( "- ");  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  options.hasOption(arg))  {  tokens.add( "- ");  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	options.hasOption(arg))  {  tokens.add( "- ");  }	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	18	None	replace
66	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  options  =  options.getOption(opt);	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
67	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
68	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  tokens.add(arg);  }	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
69	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(!stopAtNonOption)  {  tokens.add(arg);  }	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
70	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith( "-   "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith( "-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(!stopAtNonOption  &&  arg.startsWith( "-   "))  {	  	non-compiled	[CE]  	1	None	add
71	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith( ".-   "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith( ".-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(!stopAtNonOption  &&  arg.startsWith( ".-   "))  {	  	non-compiled	[CE]  	1	None	add
72	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith( "/   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith( "/   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(!stopAtNonOption  &&  arg.startsWith( "/   "))  {	  	non-compiled	[CE]  	1	None	add
73	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.startsWith( "- "))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arguments.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.startsWith( "- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
74	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains( "- "))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(!stopAtNonOption  &&  arguments.contains( "- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
75	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "- "))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.contains( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.contains( "- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
76	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arguments.length  >  2)  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	2	4	replace
77	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  [FE]  UnrecognizedOptionException  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  2)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length  >  2)  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	2	4	replace
78	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[0]);	      arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
79	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  1);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  1);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]  +  1);	      arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
80	[BUG]  [BUGGY]  else  if(options.hasOption(arg.charAt(0)))  {  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.charAt(0)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.charAt(0)))  {	  else    if(options.hasOption(arg))    {    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	6	None	replace
81	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg));  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg));  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add(Util.stripLeadingHyphens(arg));	      String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
82	[BUG]  [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption('-   "))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(   "-   "))  {  else  if(options.hasOption('-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(   "-   "))    {    else  if(options.hasOption('-   "))  {	  	non-compiled	[CE]  	13	None	add
83	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&!stopAtNonOption)  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&!stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg)&&!stopAtNonOption)  {	  	non-compiled	[CE]  	5	None	add
84	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&  options.hasOption(arg))  {  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)&&  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg)&&  options.hasOption(arg))  {	  	non-compiled	[CE]  	5	None	add
85	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)||  stopAtNonOption)  {  [CE]  [FE]        UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)||  stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg)||  stopAtNonOption)  {	  	non-compiled	[CE]  	5	None	add
86	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  other  if(options.hasOption(arg))  {  [CE]  not  a  statement  [FE]          UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  other  if(options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    other  if(options.hasOption(arg))  {	  	non-compiled	[CE]  not  a  statement	5	None	add
87	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    if(!eatTheRest)    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	compilable	  [FE]  UnrecognizedOptionException  	17	5	replace
88	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [FE]  UnrecognizedOptionException  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  if(!stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    if(!eatTheRest)    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	compilable	  [FE]  UnrecognizedOptionException  	17	5	replace
89	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  ||  options.hasOption(arg))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
90	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  ||  options.hasOption(arg))  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
91	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
92	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  [FE]  UnrecognizedOptionException  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption)  {	  else    if(!stopAtNonOption)    {    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
93	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&  arguments.length  >  0)  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	2	4	replace
94	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.length  >  0)  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	2	4	replace
95	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.startsWith( "- "))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.startsWith( "- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
96	[BUG]  [BUGGY]  else  if(options.hasOption(options))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(options))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	      String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
97	[BUG]  [BUGGY]  else  if( "-   ".equals(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if( "-   ".equals(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if( "-   ".equals(arg))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	      String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
98	[BUG]  [BUGGY]  else  if(options.hasOption(opt))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(opt))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt))  {  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	      String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
99	[BUG]  [BUGGY]  else  if(options.hasOption(options))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(options))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(options))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	      arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
100	[BUG]  [BUGGY]  else  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(opt))  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	      arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
101	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripDeadingHyphens(arg);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  Util.stripDeadingHyphens(arg);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripDeadingHyphens(arg);	      String[]    arguments    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
102	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripLeadingHyphens(arg  +  1);	      String    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	Option  option  =  options.getOption(opt);	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
104	[BUG]  [BUGGY]  tokens.add( "--n ");  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  tokens.add( "--n ");  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add( "--n ");	      tokens.add(   "--   ");    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
105	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith('-   "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith('-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(!stopAtNonOption  &&  arg.startsWith('-   "))  {	  	non-compiled	[CE]  	1	None	add
106	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest.startsWith( "- "))  {  [CE]  boolean  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!eatTheRest.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	23	None	replace
107	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(opt);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(opt);  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(opt);	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
108	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  tokens.add( "- ");  }	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
109	[BUG]  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(1)))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.substring(1)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if    (options.hasOption(arg.substring(0,    2)))    {    else  if  (options.hasOption(arg.substring(1)))  {	  	non-compiled	[CE]  	3	None	add
110	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ",  i);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ",  i);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption ",  i);	      String[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
111	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption. ");  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption. ");  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  options.get( "stopAtNonOption. ");	      String[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
112	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg.substring(0,  2));  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    Option  options  =  options.getOption(arg.substring(0,  2));	  	non-compiled	[CE]  	20	None	add
113	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg);  [CE]  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  Option  options  =  options.getOption(arg);  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    Option  options  =  options.getOption(arg);	  	non-compiled	[CE]  	20	None	add
114	[BUG]  [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  eatTheRest);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  Util.stripLeadingHyphens(arg,  eatTheRest);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  Util.stripLeadingHyphens(arg,  eatTheRest);	      String[]    arguments    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
115	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	23	4	replace
116	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "- "))  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&!eatTheRest  &&  arg.startsWith( "- "))  {	  else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	23	4	replace
117	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  ||  stopAtNonOption)  {  tokens.add(arg);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  ||  stopAtNonOption)  {  tokens.add(arg);  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    ||  stopAtNonOption)  {  tokens.add(arg);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
118	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  [CE]  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption)    {    tokens.add( "-- ");	  	non-compiled	[CE]  	20	None	add
119	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.startsWith( "-- "))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.startsWith( "-- "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.startsWith( "-- "))  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
120	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  arguments.indexOf( "- ")>  0)  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(stopAtNonOption  &&  arguments.indexOf( "- ")>  0)  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(stopAtNonOption  &&  arguments.indexOf( "- ")>  0)  {	  else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
121	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)  ||  options.hasOption(arg))  {  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  else  if(options.hasOption(arg)  ||  options.hasOption(arg))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(options.hasOption(arg))    {    else  if(options.hasOption(arg)  ||  options.hasOption(arg))  {	  	non-compiled	[CE]  	5	None	add
122	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith(. "-   "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!stopAtNonOption  &&  arg.startsWith(   "-   "))  {  else  if(!stopAtNonOption  &&  arg.startsWith(. "-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!stopAtNonOption    &&    arg.startsWith(   "-   "))    {    else  if(!stopAtNonOption  &&  arg.startsWith(. "-   "))  {	  	non-compiled	[CE]  	1	None	add
123	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
124	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.hasOption(opt));  [CE]  not  a  statement  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.hasOption(opt));  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.hasOption(opt));	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
125	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(opt));  [CE]  not  a  statement  [FE]                  ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(opt));  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add(options.getOption(opt));	      if(stopAtNonOption)    {    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
126	[BUG]  [BUGGY]  String[]  arguments  =  new  String[arg.length()  *  2];  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String[]  arguments  =  new  String[arg.length()  *  2];  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String[]  arguments  =  new  String[arg.length()  *  2];	      String[]    arguments    =    new    String[arg.length()    ];    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
127	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption( "stopAtNonOption "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption( "stopAtNonOption "))  {	  else    if(options.hasOption(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	14	4	replace
128	[BUG]  [BUGGY]  else  if(options.hasOption( "stopAtNonOption "))  {  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption( "stopAtNonOption "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption( "stopAtNonOption "))  {	  else    if(options.hasOption(   "-   "))    {    	compilable	  [FE]  UnrecognizedOptionException  	14	4	replace
129	[BUG]  [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.string(0,  2)))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if  (options.hasOption(arg.substring(0,  2)))  {  else  if  (options.hasOption(arg.string(0,  2)))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if    (options.hasOption(arg.substring(0,    2)))    {    else  if  (options.hasOption(arg.string(0,  2)))  {	  	non-compiled	[CE]  	3	None	add
130	[BUG]  [BUGGY]  String  arg  =  Util.stripRightHyphens(arg);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  String  arg  =  Util.stripRightHyphens(arg);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	String  arg  =  Util.stripRightHyphens(arg);	      String    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
131	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	      	compilable	  [FE]  UnrecognizedOptionException  	7	5	replace
132	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [FE]  UnrecognizedOptionException  [FE]              ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	if(stopAtNonOption)  {  if(options.hasOption(arg.substring(0,  2)))  {  tokens.add(arg);  }	      	compilable	  [FE]  UnrecognizedOptionException  	7	5	replace
133	[BUG]  [BUGGY]  tokens.add('-');  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  tokens.add('-');  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	tokens.add('-');	      tokens.add(   "--   ");    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
134	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg);  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arg);	      arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
135	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith('-   "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.startsWith('-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(!eatTheRest  &&  arg.startsWith('-   "))  {	  	non-compiled	[CE]  	22	None	add
136	[BUG]  [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.endsWith( "-   "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(!eatTheRest  &&  arg.startsWith(   "-   "))  {  else  if(!eatTheRest  &&  arg.endsWith( "-   "))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else    if(!eatTheRest    &&    arg.startsWith(   "-   "))    {    else  if(!eatTheRest  &&  arg.endsWith( "-   "))  {	  	non-compiled	[CE]  	22	None	add
137	[BUG]  [BUGGY]  else  if(options.hasOption(arg))  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg))  {  tokens.add(arg);  }  [BUGGY]    else  if  (arg.startsWith(   "-   "))    {  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg))  {  tokens.add(arg);  }	      tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
138	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.toString()))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	add	else  if(options.hasOption(arg.toString()))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
139	[BUG]  [BUGGY]  else  if(options.hasOption(arg.toString()))  {  [FE]  UnrecognizedOptionException  [FE]    ComparisonFailure    [CONTEXT]    if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }    [BUGGY]  else  if(options.hasOption(arg.toString()))  {  [BUGGY]    {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	71	72	3	replace	else  if(options.hasOption(arg.toString()))  {	  else    if    (options.hasOption(arg.substring(0,    2)))    {    	compilable	  [FE]  UnrecognizedOptionException  	4	4	replace
