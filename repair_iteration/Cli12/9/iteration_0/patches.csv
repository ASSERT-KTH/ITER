bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    tokens.add( "- ");  [CE]  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    tokens.add( "- ");  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    tokens.add( "- ");		non-compiled	[CE]  	19	None	add
2	[BUG]  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
3	[BUG]  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "- ".equals(arg))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "- ".equals(arg))  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
4	[BUG]  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
5	[BUG]  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)||!stopAtNonOption)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "- ".equals(arg)||!stopAtNonOption)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  AssertionFailedError  	18	13	replace
7	[BUG]  [BUGGY]  else  if( "- ".equals(arg)||!stopAtNonOption)  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)||!stopAtNonOption)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "- ".equals(arg)||!stopAtNonOption)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  AssertionFailedError  	18	13	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "- ".equals(arg)&&!stopAtNonOption)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  ComparisonFailure  	18	3	replace
9	[BUG]  [BUGGY]  else  if( "- ".equals(arg)&&!stopAtNonOption)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "- ".equals(arg)&&!stopAtNonOption)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  ComparisonFailure  	18	3	replace
10	[BUG]  [BUGGY]  else  if( "- ".equals(arg)||  '-'.equals(arg))  {  [CE]  char  cannot  be  dereferenced  [FE]        ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)||  '-'.equals(arg))  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "- ".equals(arg)||  '-'.equals(arg))  {	else  if  ( "- ".equals(arg))  {  	non-compiled	[CE]  char  cannot  be  dereferenced	18	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	    if(stopAtNonOption)  {  tokens.add( "- ");  }		compilable	  [FE]  AssertionFailedError  	19	6	add
12	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "- ");  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(stopAtNonOption)  {  tokens.add( "- ");  }		compilable	  [FE]  AssertionFailedError  	19	6	add
13	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }  [CE]  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }		non-compiled	[CE]  	19	None	add
14	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }		non-compiled	[CE]  	19	None	add
15	[BUG]  [BUGGY]    tokens.add( "-- ");  [CE]  [FE]          ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    tokens.add( "-- ");  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    tokens.add( "-- ");		non-compiled	[CE]  	19	None	add
16	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "-- ".equals(arg))  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "-- ".equals(arg))  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	4	replace
17	[BUG]  [BUGGY]  else  if( "-- ".equals(arg))  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "-- ".equals(arg))  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "-- ".equals(arg))  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	4	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)||  eatTheRest)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "- ".equals(arg)||  eatTheRest)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  ComparisonFailure  	18	3	replace
19	[BUG]  [BUGGY]  else  if( "- ".equals(arg)||  eatTheRest)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)||  eatTheRest)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "- ".equals(arg)||  eatTheRest)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  ComparisonFailure  	18	3	replace
20	[BUG]  [BUGGY]    tokens.add(arg);  [CE]  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    tokens.add(arg);  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    tokens.add(arg);		non-compiled	[CE]  	19	None	add
21	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(! "- ".equals(arg))  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
22	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "- ".equals(arg))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "- ".equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "- ".equals(arg))  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
23	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "- "))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "- "))  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "- "))  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
24	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "- ");  }  [BUGGY]  else  if  ( "- ".equals(arg))    {  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	    if(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "- ");  }		non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	add
25	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "eatTheRest ".equals(arg))  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "eatTheRest ".equals(arg))  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	4	replace
26	[BUG]  [BUGGY]  else  if( "eatTheRest ".equals(arg))  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "eatTheRest ".equals(arg))  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "eatTheRest ".equals(arg))  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	4	replace
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)&&!eatTheRest)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "- ".equals(arg)&&!eatTheRest)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  ComparisonFailure  	18	3	replace
28	[BUG]  [BUGGY]  else  if( "- ".equals(arg)&&!eatTheRest)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [BUGGY]  else  if( "- ".equals(arg)&&!eatTheRest)  {  [BUGGY]  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "- ".equals(arg)&&!eatTheRest)  {	else  if  ( "- ".equals(arg))  {  	compilable	  [FE]  ComparisonFailure  	18	3	replace
