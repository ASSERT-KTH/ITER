bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
18	[BUG] [BUGGY] else if ("-".equals(arg)) { [FE] ComparisonFailure [CONTEXT] for (int i = 0; i < arguments.length; i++) { String arg = arguments[i]; if ("--".equals(arg)) { eatTheRest = true; tokens.add("--"); } [BUGGY] else if ("-".equals(arg))   { [BUGGY] { tokens.add("-"); } else if (arg.startsWith("-")) { String opt = Util.stripLeadingHyphens(arg); if (options.hasOption(opt)) { tokens.add(arg); [CLASS] GnuParser [METHOD] flatten [RETURN_TYPE] String[]  Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options options boolean eatTheRest stopAtNonOption List tokens String[] arguments String arg opt int i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	
19	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] for (int i = 0; i < arguments.length; i++) { String arg = arguments[i]; if ("--".equals(arg)) { eatTheRest = true; tokens.add("--"); } [BUGGY] [BUGGY] else if ("-".equals(arg))   { { tokens.add("-"); } else if (arg.startsWith("-")) { String opt = Util.stripLeadingHyphens(arg); if (options.hasOption(opt)) { tokens.add(arg); [CLASS] GnuParser [METHOD] flatten [RETURN_TYPE] String[]  Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options options boolean eatTheRest stopAtNonOption List tokens String[] arguments String arg opt int i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	
