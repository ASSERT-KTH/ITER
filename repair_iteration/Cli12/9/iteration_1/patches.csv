bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens.add(arg  +  1);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add(arg  +  1);  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add(arg  +  1);	      tokens.add(arg);    	non-compiled	[CE]  	20	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-   ".equals(arg)||!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "-   ".equals(arg)||!eatTheRest)  {	  else    if(   "-   ".equals(arg)&&!eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	28	14	replace
3	[BUG]  [BUGGY]  else  if( "-   ".equals(arg)||!eatTheRest)  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-   ".equals(arg)||!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "-   ".equals(arg)||!eatTheRest)  {	  else    if(   "-   ".equals(arg)&&!eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	28	14	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(! "- ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if(! "- ".equals(arg)&&!stopAtNonOption)  {	  else    if(   "-   ".equals(arg)&&!eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	28	13	replace
5	[BUG]  [BUGGY]  else  if(! "- ".equals(arg)&&!stopAtNonOption)  {  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(! "- ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if(! "- ".equals(arg)&&!stopAtNonOption)  {	  else    if(   "-   ".equals(arg)&&!eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	28	13	replace
6	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!eatTheRest)    {    else  if(   "-   ".equals(arg)&&!eatTheRest)  {	  	non-compiled	[CE]  	27	None	add
7	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if( ".-   ".equals(arg)&&!eatTheRest)  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if( ".-   ".equals(arg)&&!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!eatTheRest)    {    else  if( ".-   ".equals(arg)&&!eatTheRest)  {	  	non-compiled	[CE]  	27	None	add
8	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!eatTheRest)    {    else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {	  	non-compiled	[CE]  	27	None	add
9	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if( "-   ".equals(arg)||!stopAtNonOption)  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if( "-   ".equals(arg)||!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||!stopAtNonOption)    {    else  if( "-   ".equals(arg)||!stopAtNonOption)  {	  	non-compiled	[CE]  	6	None	add
10	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if( ".-   ".equals(arg)||!stopAtNonOption)  {  [CE]  [FE]      AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if( ".-   ".equals(arg)||!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||!stopAtNonOption)    {    else  if( ".-   ".equals(arg)||!stopAtNonOption)  {	  	non-compiled	[CE]  	6	None	add
11	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if(! "-   ".equals(arg)||!stopAtNonOption)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if(! "-   ".equals(arg)||!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||!stopAtNonOption)    {    else  if(! "-   ".equals(arg)||!stopAtNonOption)  {	  	non-compiled	[CE]  	6	None	add
12	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-   ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  ||  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	||  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!eatTheRest)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!eatTheRest)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
14	[BUG]  [BUGGY]  else  if(arg.equals( "- ")||  '-'.equals(arg))  {  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(arg.equals( "- ")||  '-'.equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if(arg.equals( "- ")||  '-'.equals(arg))  {	  else    if(   "-   ".equals(arg)||    '-'.equals(arg))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	10	None	replace
15	[BUG]  [BUGGY]  else  if(   "eatTheRest   ".equals(arg))  {  else  if(   "eatTheRest   ".equals(arg))  {  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "eatTheRest   ".equals(arg))  {  else  if(   "eatTheRest   ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "eatTheRest   ".equals(arg))    {    else  if(   "eatTheRest   ".equals(arg))  {	  	non-compiled	[CE]  	25	None	add
16	[BUG]  [BUGGY]  else  if(   "eatTheRest   ".equals(arg))  {  else  if(   "eattheRest   ".equals(arg))  {  [CE]  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "eatTheRest   ".equals(arg))  {  else  if(   "eattheRest   ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "eatTheRest   ".equals(arg))    {    else  if(   "eattheRest   ".equals(arg))  {	  	non-compiled	[CE]  	25	None	add
17	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "stopAtNonOption   ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "stopAtNonOption   ".equals(arg))  {	  else    if(   "eatTheRest   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	4	replace
18	[BUG]  [BUGGY]  else  if( "stopAtNonOption   ".equals(arg))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "stopAtNonOption   ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "stopAtNonOption   ".equals(arg))  {	  else    if(   "eatTheRest   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	4	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-   ".equals(arg)||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "-   ".equals(arg)||  stopAtNonOption)  {	  else    if(   "-   ".equals(arg)||    eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	19	7	replace
20	[BUG]  [BUGGY]  else  if( "-   ".equals(arg)||  stopAtNonOption)  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-   ".equals(arg)||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "-   ".equals(arg)||  stopAtNonOption)  {	  else    if(   "-   ".equals(arg)||    eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	19	7	replace
21	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-   ".equals(arg)&&  eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "-   ".equals(arg)&&  eatTheRest)  {	  else    if(   "-   ".equals(arg)||    eatTheRest)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	4	replace
22	[BUG]  [BUGGY]  else  if( "-   ".equals(arg)&&  eatTheRest)  {  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-   ".equals(arg)&&  eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "-   ".equals(arg)&&  eatTheRest)  {	  else    if(   "-   ".equals(arg)||    eatTheRest)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	4	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( ".- ".equals(arg)||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( ".- ".equals(arg)||  stopAtNonOption)  {	  else    if(   "-   ".equals(arg)||    eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	19	7	replace
24	[BUG]  [BUGGY]  else  if( ".- ".equals(arg)||  stopAtNonOption)  {  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( ".- ".equals(arg)||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( ".- ".equals(arg)||  stopAtNonOption)  {	  else    if(   "-   ".equals(arg)||    eatTheRest)    {    	compilable	  [FE]  AssertionFailedError  	19	7	replace
25	[BUG]  [BUGGY]  tokens.add( "- ".equals(arg));  [CE]  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add( "- ".equals(arg));  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add( "- ".equals(arg));	      tokens.add(   "-   ");    	non-compiled	[CE]  	1	None	replace
26	[BUG]  [BUGGY]  tokens.add( "-n ");  [CE]  [FE]          ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add( "-n ");  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add( "-n ");	      tokens.add(   "-   ");    	non-compiled	[CE]  	1	None	replace
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "--   ".equals(arg)&&!stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	4	replace
28	[BUG]  [BUGGY]  else  if( "--   ".equals(arg)&&!stopAtNonOption)  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "--   ".equals(arg)&&!stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	4	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "--   ".equals(arg)||!stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	13	replace
30	[BUG]  [BUGGY]  else  if( "--   ".equals(arg)||!stopAtNonOption)  {  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "--   ".equals(arg)||!stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	13	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if(!stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	13	replace
32	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if(!stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	13	replace
33	[BUG]  [BUGGY]  tokens.add( "-- ",  eatTheRest);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add( "-- ",  eatTheRest);  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add( "-- ",  eatTheRest);	      tokens.add(   "--   ");    	non-compiled	[CE]  	15	None	replace
34	[BUG]  [BUGGY]  tokens.add( "-- "  +  arg);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add( "-- "  +  arg);  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add( "-- "  +  arg);	      tokens.add(   "--   ");    	non-compiled	[CE]  	15	None	replace
35	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	parent!=  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(arg);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
36	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add(arg);  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(arg);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
37	[BUG]  [BUGGY]  While(stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  [FE]    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  While(stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	While(stopAtNonOption)  {  tokens.add( "- ");  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	12	None	replace
38	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	parent!=  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
39	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  else  {  tokens.add( "- ");  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]      if(stopAtNonOption)  {  tokens.add(   "-   ");  }  if(stopAtNonOption)  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	        if(stopAtNonOption)    {    tokens.add(   "-   ");    }    if(stopAtNonOption)  {  tokens.add( "-   ");  }	  	compilable	  [FE]  AssertionFailedError  	11	6	add
41	[BUG]  [BUGGY]      if(stopAtNonOption)  {  tokens.add(   "-   ");  }  if(stopAtNonOption)  {  tokens.add( "-   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]      if(stopAtNonOption)  {  tokens.add(   "-   ");  }  if(stopAtNonOption)  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	        if(stopAtNonOption)    {    tokens.add(   "-   ");    }    if(stopAtNonOption)  {  tokens.add( "-   ");  }	  	compilable	  [FE]  AssertionFailedError  	11	6	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]      if(stopAtNonOption)  {  tokens.add(   "-   ");  }  if(stopAtNonOption)  {  tokens.add( ".-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	        if(stopAtNonOption)    {    tokens.add(   "-   ");    }    if(stopAtNonOption)  {  tokens.add( ".-   ");  }	  	compilable	  [FE]  AssertionFailedError  	11	6	add
43	[BUG]  [BUGGY]      if(stopAtNonOption)  {  tokens.add(   "-   ");  }  if(stopAtNonOption)  {  tokens.add( ".-   ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]      if(stopAtNonOption)  {  tokens.add(   "-   ");  }  if(stopAtNonOption)  {  tokens.add( ".-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	        if(stopAtNonOption)    {    tokens.add(   "-   ");    }    if(stopAtNonOption)  {  tokens.add( ".-   ");  }	  	compilable	  [FE]  AssertionFailedError  	11	6	add
44	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if('-'.equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	24	None	replace
45	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if('-'.equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
46	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-   ");  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-   ");  }	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(arg.startsWith(   "-   "))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	23	None	replace
47	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-  [CE]  unclosed  string  literal  [FE]                ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(arg.startsWith(   "-   "))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
48	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( ".- "))  {  tokens.add( "-   ");  }  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( ".- "))  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( ".- "))  {  tokens.add( "-   ");  }	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(arg.startsWith(   "-   "))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	23	None	replace
49	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(  [CE]  [FE]          ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!   "-   ".equals(arg))    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	non-compiled	[CE]  	2	None	replace
50	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.add  [CE]  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.add  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.add	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!   "-   ".equals(arg))    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	non-compiled	[CE]  	2	None	replace
51	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  eatTheRest  =  true;  tokens.	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!   "-   ".equals(arg))    {    eatTheRest    =    true;    tokens.add(   "-   ");    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
52	[BUG]  [BUGGY]  else  if(   "--   ".equals(arg))  {  else  if( "--   ".equals(arg))  {  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "--   ".equals(arg))  {  else  if( "--   ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "--   ".equals(arg))    {    else  if( "--   ".equals(arg))  {	  	non-compiled	[CE]  	16	None	add
53	[BUG]  [BUGGY]  else  if(   "--   ".equals(arg))  {  else  if( ".--   ".equals(arg))  {  [CE]  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "--   ".equals(arg))  {  else  if( ".--   ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "--   ".equals(arg))    {    else  if( ".--   ".equals(arg))  {	  	non-compiled	[CE]  	16	None	add
54	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if(   "-   ".equals(arg)||  eatTheRest)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if(   "-   ".equals(arg)||  eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||    eatTheRest)    {    else  if(   "-   ".equals(arg)||  eatTheRest)  {	  	non-compiled	[CE]  	18	None	add
55	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if(   "-   ".equals(arg)||  stopAtNonOption)  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if(   "-   ".equals(arg)||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||    eatTheRest)    {    else  if(   "-   ".equals(arg)||  stopAtNonOption)  {	  	non-compiled	[CE]  	18	None	add
56	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if( ".-   ".equals(arg)||  eatTheRest)  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if( ".-   ".equals(arg)||  eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||    eatTheRest)    {    else  if( ".-   ".equals(arg)||  eatTheRest)  {	  	non-compiled	[CE]  	18	None	add
57	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( "-   ".equals(arg)&&!stopAtNonOption)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( "-   ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!stopAtNonOption)    {    else  if( "-   ".equals(arg)&&!stopAtNonOption)  {	  	non-compiled	[CE]  	8	None	add
58	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( ".-   ".equals(arg)&&!stopAtNonOption)  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( ".-   ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!stopAtNonOption)    {    else  if( ".-   ".equals(arg)&&!stopAtNonOption)  {	  	non-compiled	[CE]  	8	None	add
59	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if(! "-   ".equals(arg)&&!stopAtNonOption)  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if(! "-   ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!stopAtNonOption)    {    else  if(! "-   ".equals(arg)&&!stopAtNonOption)  {	  	non-compiled	[CE]  	8	None	add
60	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( "-   ".equals(arg)&&  stopAtNonOption)  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( "-   ".equals(arg)&&  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!stopAtNonOption)    {    else  if( "-   ".equals(arg)&&  stopAtNonOption)  {	  	non-compiled	[CE]  	8	None	add
61	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( ".-   ".equals(arg))  {  tokens.add( "-   ");  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( ".-   ".equals(arg))  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( ".-   ".equals(arg))  {  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(   "-   ".equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	3	None	replace
62	[BUG]  [BUGGY]  tokens.add('-');  [CE]  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add('-');  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add('-');	      tokens.add(   "-   ");    	non-compiled	[CE]  	1	None	replace
63	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add(  [CE]  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add(  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add(	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(arg.startsWith(   "-   "))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	23	None	replace
64	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add( "-   ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	parent!=  null  &&  stopAtNonOption)  {  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(arg);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
65	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if(! "-   ".equals(arg)&&!eatTheRest)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if(! "-   ".equals(arg)&&!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!eatTheRest)    {    else  if(! "-   ".equals(arg)&&!eatTheRest)  {	  	non-compiled	[CE]  	27	None	add
66	[BUG]  [BUGGY]  tokens.add( "--  eatTheRest ");  [CE]  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add( "--  eatTheRest ");  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add( "--  eatTheRest ");	      tokens.add(   "--   ");    	non-compiled	[CE]  	15	None	replace
67	[BUG]  [BUGGY]  else  if('-'.equals(arg)||  '-'.equals(arg))  {  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if('-'.equals(arg)||  '-'.equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if('-'.equals(arg)||  '-'.equals(arg))  {	  else    if(   "-   ".equals(arg)||    '-'.equals(arg))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	10	None	replace
68	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if('-   ".equals(arg)||!stopAtNonOption)  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||!stopAtNonOption)  {  else  if('-   ".equals(arg)||!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||!stopAtNonOption)    {    else  if('-   ".equals(arg)||!stopAtNonOption)  {	  	non-compiled	[CE]  	6	None	add
69	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "-   ".equals(arg))  {  tokens.add(  [CE]  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "-   ".equals(arg))  {  tokens.add(  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "-   ".equals(arg))  {  tokens.add(	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(   "-   ".equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	3	None	replace
70	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( "-   ".equals(arg)&&! "stopAtNonOption)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if( "-   ".equals(arg)&&! "stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!stopAtNonOption)    {    else  if( "-   ".equals(arg)&&! "stopAtNonOption)  {	  	non-compiled	[CE]  	8	None	add
71	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add(  [CE]  [FE]                ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add(  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add(	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if('-'.equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	24	None	replace
72	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  [FE]    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	Option  options  =  options.getOption(opt);	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	12	None	replace
73	[BUG]  [BUGGY]  while(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add( "-   ");  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  while(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	while(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!   "-   ".equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	4	None	replace
74	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add(  [CE]  [FE]          ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add(  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add(	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!   "-   ".equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	21	None	replace
75	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||  eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "--   ".equals(arg)||  eatTheRest)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	4	replace
76	[BUG]  [BUGGY]  else  if( "--   ".equals(arg)||  eatTheRest)  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||  eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "--   ".equals(arg)||  eatTheRest)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	4	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "--   ".equals(arg)||  stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	7	replace
78	[BUG]  [BUGGY]  else  if( "--   ".equals(arg)||  stopAtNonOption)  {  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "--   ".equals(arg)||  stopAtNonOption)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	7	replace
79	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(!stopAtNonOption  && "eatTheRest ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if(!stopAtNonOption  && "eatTheRest ".equals(arg))  {	  else    if(   "eatTheRest   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	4	replace
80	[BUG]  [BUGGY]  else  if(!stopAtNonOption  && "eatTheRest ".equals(arg))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(!stopAtNonOption  && "eatTheRest ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if(!stopAtNonOption  && "eatTheRest ".equals(arg))  {	  else    if(   "eatTheRest   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	4	replace
81	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-eatTheRest ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "-eatTheRest ".equals(arg))  {	  else    if(   "eatTheRest   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	4	replace
82	[BUG]  [BUGGY]  else  if( "-eatTheRest ".equals(arg))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "-eatTheRest ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "-eatTheRest ".equals(arg))  {	  else    if(   "eatTheRest   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	4	replace
83	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "-   ".equals(arg))  {  tokens.add( "-   ");  }  }  [CE]  variable  i  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "-   ".equals(arg))  {  tokens.add( "-   ");  }  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if( "-   ".equals(arg))  {  tokens.add( "-   ");  }  }	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(   "-   ".equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  flatten(Options,String[],boolean)	3	None	replace
84	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if(   "-   ".equals(arg)||  eattheRest)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)||  eatTheRest)  {  else  if(   "-   ".equals(arg)||  eattheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)||    eatTheRest)    {    else  if(   "-   ".equals(arg)||  eattheRest)  {	  	non-compiled	[CE]  	18	None	add
85	[BUG]  [BUGGY]  tors.add( "- ");  [CE]  [FE]    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tors.add( "- ");  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tors.add( "- ");	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	12	None	replace
86	[BUG]  [BUGGY]  tokens.add(null);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  tokens.add(null);  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	tokens.add(null);	      tokens.add(arg);    	non-compiled	[CE]  	20	None	replace
87	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if('-   ".equals(arg)&&!stopAtNonOption)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!stopAtNonOption)  {  else  if('-   ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!stopAtNonOption)    {    else  if('-   ".equals(arg)&&!stopAtNonOption)  {	  	non-compiled	[CE]  	8	None	add
88	[BUG]  [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if('-   ".equals(arg)&&!eatTheRest)  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "-   ".equals(arg)&&!eatTheRest)  {  else  if('-   ".equals(arg)&&!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "-   ".equals(arg)&&!eatTheRest)    {    else  if('-   ".equals(arg)&&!eatTheRest)  {	  	non-compiled	[CE]  	27	None	add
89	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( ".- ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( ".- ".equals(arg)&&!stopAtNonOption)  {	  else    if(   "-   ".equals(arg)&&!eatTheRest)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	4	replace
90	[BUG]  [BUGGY]  else  if( ".- ".equals(arg)&&!stopAtNonOption)  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( ".- ".equals(arg)&&!stopAtNonOption)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( ".- ".equals(arg)&&!stopAtNonOption)  {	  else    if(   "-   ".equals(arg)&&!eatTheRest)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	4	replace
91	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  [Delete]  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	[Delete]	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
92	[BUG]  [BUGGY]  }  else  {  tokens.add( "- ");  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  }  else  {  tokens.add( "- ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	}  else  {  tokens.add( "- ");  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	13	None	replace
93	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-   ");  }  }  [CE]  variable  i  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-   ");  }  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(arg.startsWith( "-   "))  {  tokens.add( "-   ");  }  }	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(arg.startsWith(   "-   "))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  flatten(Options,String[],boolean)	23	None	replace
94	[BUG]  [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }  }  [CE]  variable  i  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }  }	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if('-'.equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  flatten(Options,String[],boolean)	24	None	replace
95	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  while(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	while(!stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if('-'.equals(arg))  {  tokens.add( "-   ");  }	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if('-'.equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	24	None	replace
96	[BUG]  [BUGGY]  if(!eatTheRest)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add( "-   ");  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  if(!eatTheRest)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	if(!eatTheRest)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!   "-   ".equals(arg))  {  tokens.add( "-   ");  }	      if(!stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!   "-   ".equals(arg))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  	21	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "--   ".equals(arg)||!eatTheRest)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	14	replace
98	[BUG]  [BUGGY]  else  if( "--   ".equals(arg)||!eatTheRest)  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)||!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "--   ".equals(arg)||!eatTheRest)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  AssertionFailedError  	17	14	replace
99	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)&&!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	add	else  if( "--   ".equals(arg)&&!eatTheRest)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	4	replace
100	[BUG]  [BUGGY]  else  if( "--   ".equals(arg)&&!eatTheRest)  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if( "--   ".equals(arg)&&!eatTheRest)  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else  if( "--   ".equals(arg)&&!eatTheRest)  {	  else    if(   "--   ".equals(arg))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	4	replace
101	[BUG]  [BUGGY]  fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-   ");  }  [CE]  not  a  statement  [FE]                ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-   ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-   ");  }	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!eatTheRest)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
102	[BUG]  [BUGGY]  fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-  [CE]  not  a  statement  [FE]                  ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add( "-	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!eatTheRest)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
103	[BUG]  [BUGGY]  fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add(  [CE]  not  a  statement  [FE]                    ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add(  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	fortunately,  stopAtNonOption)  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if(!eatTheRest)  {  tokens.add(	      if(stopAtNonOption)    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    String    arg    =    arguments[i];    if(!eatTheRest)    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
104	[BUG]  [BUGGY]  else  if(   "--   ".equals(arg))  {  else  if(! "--   ".equals(arg))  {  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  else  if(   "--   ".equals(arg))  {  else  if(! "--   ".equals(arg))  {  [BUGGY]    {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	else    if(   "--   ".equals(arg))    {    else  if(! "--   ".equals(arg))  {	  	non-compiled	[CE]  	16	None	add
105	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }    [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }  [BUGGY]    else  if  (   "-   ".equals(arg))    {  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	67	68	3	replace	parent  ==  null  &&  stopAtNonOption)  {  tokens.add( "- ");  }	      if(stopAtNonOption)    {    tokens.add(   "-   ");    }    else    {    tokens.add(arg);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
