bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	66	14	add
2	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	66	14	add
3	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  UnrecognizedOptionException  	66	14	add
4	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  UnrecognizedOptionException  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  UnrecognizedOptionException  	66	14	add
5	[BUG]  [BUGGY]  tokens.add( "--  arg.equals(arg));  [CE]  unclosed  string  literal  [FE]        ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "--  arg.equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "--  arg.equals(arg));	          tokens.add(       "--       ".equals(arg));    tokens.add(   "--    arg.equals(arg));    	non-compiled	[CE]  unclosed  string  literal	128	None	replace
6	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arg,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  arg,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    options,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	117	None	replace
7	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arg,    options,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	117	None	replace
8	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  options,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    options,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	117	None	replace
9	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  arg  =  Util.stripLeadingHyphens(arguments[i]);	          arg    =    Util.stripLeadingHyphens(arguments[i]);    String    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
10	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  arg  =  Util.stripLeadingHyphens(arguments[0]);	          arg    =    Util.stripLeadingHyphens(arguments[i]);    String    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
11	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  *  1);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  *  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  *  1);	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
12	[BUG]  [BUGGY]  tokens.add('-'  +  arg.substring(1));  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add('-'  +  arg.substring(1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add('-'  +  arg.substring(1));	  tokens.add('-');    	non-compiled	[CE]  cannot  find  symbol  opt	133	None	replace
13	[BUG]  [BUGGY]  tokens.add('-',  i);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add('-',  i);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add('-',  i);	  tokens.add('-');    	non-compiled	[CE]  cannot  find  symbol  opt	133	None	replace
14	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)/  1;  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)/  1;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption)/  1;	  String    opt    =    Util.stripLeadingHyphens(arg)/    1;    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	98	None	replace
15	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)/  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)/  2;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)/  2;	  String    opt    =    Util.stripLeadingHyphens(arg)/    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	98	None	replace
16	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i)/  1;  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i)/  1;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i)/  1;	  String    opt    =    Util.stripLeadingHyphens(arg)/    1;    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	98	None	replace
17	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopsAtNonOption)/  1;  [CE]  cannot  find  symbol  stopsAtNonOption  [FE]                AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopsAtNonOption)/  1;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopsAtNonOption)/  1;	  String    opt    =    Util.stripLeadingHyphens(arg)/    1;    	non-compiled	[CE]  cannot  find  symbol  stopsAtNonOption	98	None	replace
18	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i])+  1;  [CE]  cannot  find  symbol  opt  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i])+  1;  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i])+  1;	          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg    =    Util.stripLeadingHyphens(arguments[i]));    	non-compiled	[CE]  cannot  find  symbol  opt	37	None	replace
19	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i);  arg  =  Util.stripLaadingHyphens(arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i);  arg  =  Util.stripLaadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  i);  arg  =  Util.stripLaadingHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLaadingHyphens(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	107	None	replace
20	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments.length());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments.length());  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  arguments.length());	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
21	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  arguments);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	74	None	replace
22	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  0,  arg.length());  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  0,  arg.length());  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  0,  arg.length());	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	74	None	replace
23	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length()  -  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length()  -  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length()  -  1);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	74	None	replace
24	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  optionNames);  [CE]  cannot  find  symbol  optionNames  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  optionNames);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  optionNames);	  String    opt    =    Util.stripLeadingHyphens(arguments,    options);    	non-compiled	[CE]  cannot  find  symbol  optionNames	39	None	replace
25	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arguments,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	39	None	replace
26	[BUG]  [BUGGY]  tokens.add(arg);  tokens  =  new  TokenBuffer(arg.length());  [CE]  cannot  find  symbol  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  tokens  =  new  TokenBuffer(arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  tokens  =  new  TokenBuffer(arg.length());	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
27	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  options  =  Util.stripLeadingHyphens(arguments[1]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  options  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  options  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    options    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	119	None	replace
28	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  options  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  options  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  options  =  Util.stripLeadingHyphens(arguments[0]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    options    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	119	None	replace
29	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  options  =  Util.stripLeadingHyphens(arguments[1]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  options  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  options  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    options    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	119	None	replace
30	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  String  options  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  String  options  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  String  options  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    options    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	119	None	replace
31	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	134	None	replace
32	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  null);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  null);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  null);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	134	None	replace
33	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  buffer);  [CE]  cannot  find  symbol  buffer  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  buffer);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  buffer);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  cannot  find  symbol  buffer	134	None	replace
34	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  tokens);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  tokens);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arg,  tokens);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	134	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
36	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
38	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
40	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
41	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	76	None	add
42	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  arg  =  Util.stripLeadingHyphens(arg);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  ')'  expected	76	None	add
43	[BUG]  [BUGGY]  String  argument  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  cannot  find  symbol  opt  [FE]        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  argument  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  argument  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    argument    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	118	None	replace
44	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    argument    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	118	None	replace
45	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	122	None	replace
46	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	122	None	replace
47	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  options);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	122	None	replace
48	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  argument);  [CE]  cannot  find  symbol  argument  [FE]                AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  argument);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  argument);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  cannot  find  symbol  argument	122	None	replace
49	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	45	13	add
50	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	45	13	add
51	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	45	13	add
52	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	45	13	add
53	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( ",--   ");  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( ",--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	45	13	add
54	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( ",--   ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( ",--   ");  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( ",--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	45	13	add
55	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption,  arg);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	116	None	replace
56	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  options);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	116	None	replace
57	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption,  options);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	116	None	replace
58	[BUG]  [BUGGY]  tokens.add( "-- "  +  arg.substring(0,  2));  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- "  +  arg.substring(0,  2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- "  +  arg.substring(0,  2));	  tokens.add(   "--   "    +    arg.substring(1));    	non-compiled	[CE]  cannot  find  symbol  opt	83	None	replace
59	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "-   ",  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "-   ",  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "-   ",  1);	  String[]    arguments    =    arg.split(   "-   ",    2);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	23	None	replace
60	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- "  +  i  +  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- "  +  i  +  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- "  +  i  +  1);	  String[]    arguments    =    arg.split(   "-   "    +    i);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	replace
61	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- "  +  0);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- "  +  0);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- "  +  0);	  String[]    arguments    =    arg.split(   "-   "    +    i);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	replace
62	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ",  i);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ",  i);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ",  i);	  String[]    arguments    =    arg.split(   "-   "    +    i);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	replace
63	[BUG]  [BUGGY]  'else'  without  'if'  [CE]  unclosed  character  literal  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  'else'  without  'if'  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	'else'  without  'if'	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
64	[BUG]  [BUGGY]  tokens.add(arg  +  2);  [CE]  cannot  find  symbol  opt  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg  +  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg  +  2);	  tokens.add(arg    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	140	None	replace
65	[BUG]  [BUGGY]  tokens.add(arg  +  1,  stopAtNonOption);  [CE]  no  suitable  method  found  for  add(String,boolean)  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg  +  1,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg  +  1,  stopAtNonOption);	  tokens.add(arg    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  add(String,boolean)	140	None	replace
66	[BUG]  [BUGGY]  tokens.add(arg.substring(i  +  1));  [CE]  cannot  find  symbol  opt  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg.substring(i  +  1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(i  +  1));	  tokens.add(arg    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	140	None	replace
67	[BUG]  [BUGGY]  tokens.add(arg.substring(0,  2));  [CE]  cannot  find  symbol  opt  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg.substring(0,  2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(0,  2));	  tokens.add(arg.substring(1));    	non-compiled	[CE]  cannot  find  symbol  opt	91	None	replace
68	[BUG]  [BUGGY]  tokens.add(arg.substring(3));  [CE]  cannot  find  symbol  opt  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg.substring(3));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(3));	  tokens.add(arg.substring(1));    	non-compiled	[CE]  cannot  find  symbol  opt	91	None	replace
69	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));	  	compilable	  [FE]  ArrayStoreException  	68	14	add
70	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));	  	compilable	  [FE]  ArrayStoreException  	68	14	add
71	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  ArrayStoreException  	68	14	add
72	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  ArrayStoreException  	68	14	add
73	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  String  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  String  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    String  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));	  	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	68	None	add
74	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(options.getOption(arg));  [CE]  cannot  find  symbol  tos  [FE]          ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(options.getOption(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(options.getOption(arg));	  	non-compiled	[CE]  cannot  find  symbol  tos	68	None	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  4;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg)+  4;	  String    opt    =    Util.stripLeadingHyphens(arg)+    3;    	compilable	  [FE]  AssertionFailedError  	100	9	replace
76	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  4;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)+  4;	  String    opt    =    Util.stripLeadingHyphens(arg)+    3;    	compilable	  [FE]  AssertionFailedError  	100	9	replace
77	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  2);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]  +  2);	  arg    =    Util.stripLeadingHyphens(arguments[i]    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	7	None	replace
78	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  3);  [CE]  cannot  find  symbol  opt  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  3);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]  +  3);	  arg    =    Util.stripLeadingHyphens(arguments[i]    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	7	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
80	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
82	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
83	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
84	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  arg  =  Util.stripLeadingHyphens(arg);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  ')'  expected	79	None	add
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.remove(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.remove(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
86	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.remove(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.remove(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.remove(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	61	14	add
88	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	61	14	add
89	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    String  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	61	None	add
90	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  arg  =  Util.stripLeadingHyphens(arg);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg;  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  ')'  expected	61	None	add
91	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;	  	non-compiled	[CE]  ')'  expected	61	None	add
92	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHy  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHy  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHy	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  ')'  expected	63	None	replace
93	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  ')'  expected	63	None	replace
94	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  ')'  expected	63	None	replace
95	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
96	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg));  [CE]  cannot  find  symbol  opt  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(Util.stripLeadingHyphens(arg));	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    tos.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	81	None	replace
97	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  arg);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	139	None	replace
98	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	139	None	replace
99	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arguments,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arguments,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arguments,  i);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	139	None	replace
100	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(i  +  1,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(i  +  1,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(i  +  1,  arg);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	139	None	replace
101	[BUG]  [BUGGY]  tokens.add(i);  TokenBuffer  tokens  =  new  TokenBuffer(arg);  [CE]  cannot  find  symbol  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(i);  TokenBuffer  tokens  =  new  TokenBuffer(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(i);  TokenBuffer  tokens  =  new  TokenBuffer(arg);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
102	[BUG]  [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(arg);  [CE]  cannot  find  symbol  [FE]                MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(arg);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
103	[BUG]  [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  tokens.length());  [CE]  cannot  find  symbol  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  tokens.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  tokens.length());	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg.length());    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
104	[BUG]  [BUGGY]  String  argument  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  argument  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  argument  =  Util.stripLeadingHyphens(arguments[0]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  cannot  find  symbol  opt	95	None	replace
105	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arg,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	14	None	replace
106	[BUG]  [BUGGY]  tokens.add( "--. ".equals(arg)&&!stopAtNonOption);  [CE]  cannot  find  symbol  opt  [FE]        ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "--. ".equals(arg)&&!stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "--. ".equals(arg)&&!stopAtNonOption);	  tokens.add(   "--   ".equals(arg)&&!stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	130	None	replace
107	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	67	None	replace
108	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ".equals(arg));  }  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ".equals(arg));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ".equals(arg));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	67	None	replace
109	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  NullPointerException  	64	14	add
110	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  NullPointerException  	64	14	add
111	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));	  	compilable	  [FE]  NullPointerException  	64	14	add
112	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));	  	compilable	  [FE]  NullPointerException  	64	14	add
113	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));	  	compilable	  [FE]  ArrayStoreException  	64	14	add
114	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));  [FE]  ArrayStoreException  [FE]        NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));	  	compilable	  [FE]  ArrayStoreException  	64	14	add
115	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));	  	compilable	  [FE]  NullPointerException  	64	14	add
116	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));	  	compilable	  [FE]  NullPointerException  	64	14	add
117	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));	  	compilable	  [FE]  NullPointerException  	64	14	add
118	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));	  	compilable	  [FE]  NullPointerException  	64	14	add
119	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg;    	non-compiled	[CE]  ')'  expected	106	None	replace
120	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  }  else  {  tokens.add(arg);  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  }  else  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  }  else  {  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg;    	non-compiled	[CE]  ')'  expected	106	None	replace
121	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  }  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg;    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	106	None	replace
122	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.length  +  2);  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.length  +  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.length  +  2);	  String    opt    =    Util.stripLeadingHyphens(arg.length    +    1);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
123	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.length  -  1);  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.length  -  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.length  -  1);	  String    opt    =    Util.stripLeadingHyphens(arg.length    +    1);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(i  +  1));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg.substring(i  +  1));	  String    opt    =    Util.stripLeadingHyphens(arg.length    +    1);    	compilable	  [FE]  AssertionFailedError  	3	8	replace
125	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(i  +  1));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(i  +  1));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.substring(i  +  1));	  String    opt    =    Util.stripLeadingHyphens(arg.length    +    1);    	compilable	  [FE]  AssertionFailedError  	3	8	replace
126	[BUG]  [BUGGY]  tokens.add( "- "  +  arg.equals(arg));  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  arg.equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- "  +  arg.equals(arg));	  tokens.add(   "-   ".equals(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	70	None	replace
127	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  2);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  2);	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    -    2);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
128	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg  +  2);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg  +  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg  +  2);	  arg    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	32	None	replace
129	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i  +  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i  +  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  i  +  1);	  arg    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	32	None	replace
130	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  eatTheRest);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  eatTheRest);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  eatTheRest);	  String    opt    =    Util.stripLeadingHyphens(options,    stopsAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	112	None	replace
131	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  i);	  String    opt    =    Util.stripLeadingHyphens(options,    stopsAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	112	None	replace
132	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "-?   ",  2);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "-?   ",  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "-?   ",  2);	  String[]    arguments    =    arg.split(   "-?   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	104	None	replace
133	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "-?   ",  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "-?   ",  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "-?   ",  1);	  String[]    arguments    =    arg.split(   "-?   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	104	None	replace
134	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "-?, ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "-?, ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "-?, ");	  String[]    arguments    =    arg.split(   "-?   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	104	None	replace
135	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--     ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--       ".equals(arg));    tokens.add( "--   ".equals(arg));  tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	55	14	add
136	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--     ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( "--   ".equals(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--     ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--       ".equals(arg));    tokens.add( "--   ".equals(arg));  tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	55	14	add
137	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--     ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--       ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	55	14	add
138	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--     ".equals(arg));  tokens.add( "--   ".equals(arg));  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--     ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--       ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	55	14	add
139	[BUG]  [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
140	[BUG]  [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
141	[BUG]  [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  not  a  statement	93	None	replace
142	[BUG]  [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  not  a  statement	93	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[2]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[2]);	  String    opt    =    Util.stripLeadingHyphens(arguments[0]);    	compilable	  [FE]  AssertionFailedError  	26	9	replace
144	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[2]);  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[2]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[2]);	  String    opt    =    Util.stripLeadingHyphens(arguments[0]);    	compilable	  [FE]  AssertionFailedError  	26	9	replace
145	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0],  arg.length());  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0],  arg.length());  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0],  arg.length());	  String    opt    =    Util.stripLeadingHyphens(arguments[0]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	26	None	replace
146	[BUG]  [BUGGY]  tokens.add( "- ",  arg.length());  [CE]  no  suitable  method  found  for  add(String,int)  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ",  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ",  arg.length());	          tokens.add(       "-       ");    tokens.add(   "-       ");    	non-compiled	[CE]  no  suitable  method  found  for  add(String,int)	50	None	replace
147	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]),  stopAtNonOption);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]),  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]),  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]),    stopAtNonOption);    	non-compiled	[CE]  ';'  expected	135	None	replace
148	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption,  options);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption,  options);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]),    stopAtNonOption);    	non-compiled	[CE]  ';'  expected	135	None	replace
149	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i])&  stopAtNonOption;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i])&  stopAtNonOption;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i])&  stopAtNonOption;	  String    opt    =    Util.stripLeadingHyphens(arguments[i]),    stopAtNonOption);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	135	None	replace
150	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[1]);    String  opt  =  Util.stripLeadingHyphens(arguments[1]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	28	None	add
151	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[2]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[2]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[1]);    String  opt  =  Util.stripLeadingHyphens(arguments[2]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	28	None	add
152	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[1]);    String  opt  =  Util.stripLeadingHyphens(arguments[0]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	28	None	add
153	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[3]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[3]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[1]);    String  opt  =  Util.stripLeadingHyphens(arguments[3]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	28	None	add
154	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  1);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  1);	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    2);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
155	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  3);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  3);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  3);	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    2);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
156	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  4);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  4);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  4);	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    2);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
157	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i,  arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i,  arg,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  i,  arg,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	13	None	replace
158	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	13	None	replace
159	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	13	None	replace
160	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1),  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1),  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  1),  stopAtNonOption);	  String[]    arguments    =    options.get(arg.substring(0,    2),    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	85	None	replace
161	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  eatTheRest);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  eatTheRest);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  eatTheRest);	  String[]    arguments    =    options.get(arg.substring(0,    2),    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	85	None	replace
162	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  tokens);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  tokens);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  tokens);	  String[]    arguments    =    options.get(arg.substring(0,    2),    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	85	None	replace
163	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  i);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  i);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  i);	  String[]    arguments    =    options.get(arg.substring(0,    2),    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	85	None	replace
164	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	49	13	add
165	[BUG]  [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	49	13	add
166	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	49	13	add
167	[BUG]  [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	49	13	add
168	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( ",-   ");  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( ",-   ");  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	49	13	add
169	[BUG]  [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( ",-   ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( ",-   ");  tokens.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( ",-   ");  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	49	13	add
170	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  i);	  String    opt    =    Util.stripLeadingHyphens(arg,    i,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	15	None	replace
171	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  i,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    i,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	15	None	replace
172	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i,  arguments,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i,  arguments,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i,  arguments,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    i,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	15	None	replace
173	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length());	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
174	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  [CE]  cannot  find  symbol  opt  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	69	None	replace
175	[BUG]  [BUGGY]  tokens.add(options.getOption(arg));  [CE]  cannot  find  symbol  opt  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(options.getOption(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(options.getOption(arg));	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	69	None	replace
176	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {  [CE]  'else'  without  'if'  [FE]        ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
177	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  opt  [FE]          ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	69	None	replace
178	[BUG]  [BUGGY]  tokens.add( "-- ",  arg.substring(1));  [CE]  no  suitable  method  found  for  add(String,String)  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ",  arg.substring(1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ",  arg.substring(1));	          tokens.add(       "--       ");    tokens.add(   "--   ".);    	non-compiled	[CE]  no  suitable  method  found  for  add(String,String)	114	None	replace
179	[BUG]  [BUGGY]  tokens.add( "-- ",  arg.substring(2));  [CE]  no  suitable  method  found  for  add(String,String)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ",  arg.substring(2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ",  arg.substring(2));	          tokens.add(       "--       ");    tokens.add(   "--   ".);    	non-compiled	[CE]  no  suitable  method  found  for  add(String,String)	114	None	replace
180	[BUG]  [BUGGY]  tokens.add( "-: ".equals(arg));  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-: ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-: ".equals(arg));	  tokens.add(   "-:   ");    	non-compiled	[CE]  cannot  find  symbol  opt	110	None	replace
181	[BUG]  [BUGGY]  tokens.add( "-: "  +  arg.substring(1));  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-: "  +  arg.substring(1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-: "  +  arg.substring(1));	  tokens.add(   "-:   ");    	non-compiled	[CE]  cannot  find  symbol  opt	110	None	replace
182	[BUG]  [BUGGY]  arg  =  Util.stripRadingHyphens(arg);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripRadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripRadingHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripRadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
183	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    2);    String  opt  =  Util.stripLeadingHyphens(arg  +  2);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
184	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  option  =  Util.stripLeadingHyphens(arg  +  2);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  option  =  Util.stripLeadingHyphens(arg  +  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    2);    String  option  =  Util.stripLeadingHyphens(arg  +  2);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
185	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  opt  =  Util.stripLeadingHyphens(arg  +  2));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  opt  =  Util.stripLeadingHyphens(arg  +  2));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    2);    String  opt  =  Util.stripLeadingHyphens(arg  +  2));	  	non-compiled	[CE]  ';'  expected	1	None	add
186	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ");  tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	47	14	add
187	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  tokens.add( "--   ".equals(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ");  tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	47	14	add
188	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  tokens.add( "--. ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ");  tokens.add( "--. ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	47	14	add
189	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  tokens.add( "--. ".equals(arg));  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  tokens.add( "--. ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ");  tokens.add( "--. ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	47	14	add
190	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( ",--   ");  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( ",--   ");  tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	47	14	add
191	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( ",--   ");  tokens.add( "--   ".equals(arg));  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( ",--   ");  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( ",--   ");  tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	47	14	add
192	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ")+  2;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ")+  2;  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ")+  2;	  String[]    arguments    =    arg.split(   "-   ")+    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	24	None	replace
193	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ")+  3;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ")+  3;  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ")+  3;	  String[]    arguments    =    arg.split(   "-   ")+    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	24	None	replace
194	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ")+  4;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ")+  4;  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ")+  4;	  String[]    arguments    =    arg.split(   "-   ")+    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	24	None	replace
195	[BUG]  [BUGGY]  tokens.add( "--. ".equals(arg));  [CE]  cannot  find  symbol  opt  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "--. ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "--. ".equals(arg));	          tokens.add(       "--       ".equals(arg));    tokens.add(   "--.   ".equals(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	60	None	replace
196	[BUG]  [BUGGY]  tokens.add( "-- ");  tokens.add( "--. ".equals(arg));  [CE]  cannot  find  symbol  opt  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ");  tokens.add( "--. ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ");  tokens.add( "--. ".equals(arg));	          tokens.add(       "--       ".equals(arg));    tokens.add(   "--.   ".equals(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	60	None	replace
197	[BUG]  [BUGGY]  arg  =  Util.stripFloat(arg);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripFloat(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripFloat(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
198	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  i);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	62	None	replace
199	[BUG]  [BUGGY]  tokens  =(String[])options.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens  =(String[])options.clone();  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens  =(String[])options.clone();	          tokens.add(arg);    tokens    =(String[])options.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	126	None	replace
200	[BUG]  [BUGGY]  tokens.add( "- ");  tokens  =(String[])options.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ");  tokens  =(String[])options.clone();  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ");  tokens  =(String[])options.clone();	          tokens.add(arg);    tokens    =(String[])options.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	126	None	replace
201	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    2;    String  opt  =  Util.stripLeadingHyphens(arg)+  2;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	96	None	add
202	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  option  =  Util.stripLeadingHyphens(arg)+  2;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  option  =  Util.stripLeadingHyphens(arg)+  2;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    2;    String  option  =  Util.stripLeadingHyphens(arg)+  2;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	96	None	add
203	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  opt  =  Util.stripLeadingHyphens(arg)+  2);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  opt  =  Util.stripLeadingHyphens(arg)+  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    2;    String  opt  =  Util.stripLeadingHyphens(arg)+  2);	  	non-compiled	[CE]  ';'  expected	96	None	add
204	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( "--.   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--.   ".equals(arg));    tokens.add( "--   ".equals(arg));  tokens.add( "--.   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	59	14	add
205	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( "--.   ".equals(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( "--.   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--.   ".equals(arg));    tokens.add( "--   ".equals(arg));  tokens.add( "--.   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	59	14	add
206	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--. ".equals(arg));  tokens.add( "--.   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--.   ".equals(arg));    tokens.add( "--. ".equals(arg));  tokens.add( "--.   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	59	14	add
207	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--. ".equals(arg));  tokens.add( "--.   ".equals(arg));  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--. ".equals(arg));  tokens.add( "--.   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--.   ".equals(arg));    tokens.add( "--. ".equals(arg));  tokens.add( "--.   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	59	14	add
208	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--[.equals(arg));  tokens.add( "--.   ".equals(arg));  [CE]  [FE]        ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--[.equals(arg));  tokens.add( "--.   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--.   ".equals(arg));    tokens.add( "--[.equals(arg));  tokens.add( "--.   ".equals(arg));	  	non-compiled	[CE]  	59	None	add
209	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[0]);    String  opt  =  Util.stripLeadingHyphens(arguments[0]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
210	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[0]);    String  opt  =  Util.stripLeadingHyphens(arguments[1]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
211	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  option  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  option  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[0]);    String  option  =  Util.stripLeadingHyphens(arguments[0]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
212	[BUG]  [BUGGY]  tokens  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  opt  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens  =  new  ArrayList  <  String>();  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens  =  new  ArrayList  <  String>();	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arguments[i]);    }    	non-compiled	[CE]  cannot  find  symbol  opt	20	None	replace
213	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [CE]  cannot  find  symbol  opt  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
214	[BUG]  [BUGGY]  tokens.add(options.getOption(arg.substring(0,  2)));  [CE]  cannot  find  symbol  opt  [FE]      NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(options.getOption(arg.substring(0,  2)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(options.getOption(arg.substring(0,  2)));	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
215	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  }  [CE]  cannot  find  symbol  opt  [FE]        NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
216	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));  }  [CE]  cannot  find  symbol  opt  [FE]          NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  1)));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
217	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1);  String  options  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1);  String  options  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1);  String  options  =  Util.stripLeadingHyphens(arg  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    options    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	105	None	replace
218	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    options    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	105	None	replace
219	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i);  String  options  =  Util.stripLeadingHyphens(arg  +  1,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i);  String  options  =  Util.stripLeadingHyphens(arg  +  1,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i);  String  options  =  Util.stripLeadingHyphens(arg  +  1,  options);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    options    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	105	None	replace
220	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   ",--     ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ".equals(arg));        tokens.add(   ",--       ".equals(arg));    tokens.add( "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	57	14	add
221	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   ",--     ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   ",--     ".equals(arg));  tokens.add( "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   ",--       ".equals(arg));    tokens.add( "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	57	14	add
222	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  opt);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  opt);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  opt);	  String    opt    =    Util.stripLeadingHyphens(opt,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	113	None	replace
223	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  options);	  String    opt    =    Util.stripLeadingHyphens(opt,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	113	None	replace
224	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  opt,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  opt,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  opt,  options);	  String    opt    =    Util.stripLeadingHyphens(opt,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	113	None	replace
225	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt,  options,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt,  options,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(opt,  options,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(opt,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	113	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	33	14	add
227	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	33	14	add
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  String  argument  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    String  argument  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	33	14	add
229	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  String  argument  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  String  argument  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    String  argument  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	33	14	add
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[0]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[0]);  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	33	14	add
231	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[0]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[0]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[0]);  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	33	14	add
232	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arg.length());  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arg.length());  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arg.length());	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    opt    =    Util.stripLeadingHyphens(arg    +    1));    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	54	None	replace
233	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[2]);  [CE]  cannot  find  symbol  opt  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[2]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[2]);	  arg    =    Util.stripLeadingHyphens(arguments[1]);    	non-compiled	[CE]  cannot  find  symbol  opt	8	None	replace
234	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length(),  arg.length());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length(),  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length(),  arg.length());	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    arg.length());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
235	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1,  arg.length());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1,  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1,  arg.length());	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    arg.length());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
236	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  arg.length()  +  1);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  arg.length()  +  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  arg.length()  +  1);	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    arg.length());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
237	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  options,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(options,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	41	None	replace
238	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  arg);	  String    opt    =    Util.stripLeadingHyphens(options,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	41	None	replace
239	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	103	None	replace
240	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  i,  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	103	None	replace
241	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  i);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	103	None	replace
242	[BUG]  [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  }  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  }  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  }	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    tokens.add(arg);    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	137	None	replace
243	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    3;    String  opt  =  Util.stripLeadingHyphens(arg)+  3;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	99	None	add
244	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  option  =  Util.stripLeadingHyphens(arg)+  3;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  option  =  Util.stripLeadingHyphens(arg)+  3;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    3;    String  option  =  Util.stripLeadingHyphens(arg)+  3;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	99	None	add
245	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  opt  =  Util.stripLeadingHyphens(arg)+  4;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  opt  =  Util.stripLeadingHyphens(arg)+  4;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    3;    String  opt  =  Util.stripLeadingHyphens(arg)+  4;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	99	None	add
246	[BUG]  [BUGGY]  tokens.add(i);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(i);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(i);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
247	[BUG]  [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
248	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1),  i);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1),  i);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  1),  i);	  String[]    arguments    =    options.get(arg.substring(0,    2),    i);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
249	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  2);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  2);	  String[]    arguments    =    options.get(arg.substring(0,    2),    i);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
250	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  1);	  String[]    arguments    =    options.get(arg.substring(0,    2),    i);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
251	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  i  +  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  i  +  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  i  +  1);	  String[]    arguments    =    options.get(arg.substring(0,    2),    i);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
252	[BUG]  [BUGGY]  tokens.add( ",-- ".equals(arg));  [CE]  cannot  find  symbol  opt  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( ",-- ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( ",-- ".equals(arg));	          tokens.add(       "--       ".equals(arg));    tokens.add(   ",--       ".equals(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	58	None	replace
253	[BUG]  [BUGGY]  tokens.add( "-- ",  arg.equals(arg));  [CE]  no  suitable  method  found  for  add(String,boolean)  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ",  arg.equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ",  arg.equals(arg));	          tokens.add(       "--       ".equals(arg));    tokens.add(   ",--       ".equals(arg));    	non-compiled	[CE]  no  suitable  method  found  for  add(String,boolean)	58	None	replace
254	[BUG]  [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	78	None	replace
255	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  -  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  -  1);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length);    	non-compiled	[CE]  cannot  find  symbol  length	75	None	replace
256	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  +  1);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length);    	non-compiled	[CE]  cannot  find  symbol  length	75	None	replace
257	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  -  2);  [CE]  cannot  find  symbol  length  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  -  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length  -  2);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length);    	non-compiled	[CE]  cannot  find  symbol  length	75	None	replace
258	[BUG]  [BUGGY]  tokens.add( "- ",  arg.equals( "- "));  [CE]  no  suitable  method  found  for  add(String,boolean)  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ",  arg.equals( "- "));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ",  arg.equals( "- "));	          tokens.add(       "--       ");    tokens.add(   "--   ".equals(arg));    	non-compiled	[CE]  no  suitable  method  found  for  add(String,boolean)	48	None	replace
259	[BUG]  [BUGGY]  tokens.add(Util.stripFloat(arg));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(Util.stripFloat(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(Util.stripFloat(arg));	  arg    =    Util.stripFloat(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
260	[BUG]  [BUGGY]  tokens.add(util.stripFloat(arg));  [CE]  cannot  find  symbol  util  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(util.stripFloat(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(util.stripFloat(arg));	  arg    =    Util.stripFloat(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  util	89	None	replace
261	[BUG]  [BUGGY]  tokens.add(Util.stripFloat(arg);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(Util.stripFloat(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(Util.stripFloat(arg);	  arg    =    Util.stripFloat(arg);    tokens.add(arg);    	non-compiled	[CE]  ')'  expected	89	None	replace
262	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]                AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg;    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	82	None	replace
263	[BUG]  [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]                  AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg;    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	82	None	replace
264	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg;  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg;    tokens.add(arg);    	non-compiled	[CE]  ')'  expected	82	None	replace
265	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }  [CE]  cannot  find  symbol  opt  [FE]                      AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg;    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	82	None	replace
266	[BUG]  [BUGGY]  tokens.add( "- ");  arg  =  Util.stripLeadingHyphens(arg);  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ");  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ");  arg  =  Util.stripLeadingHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	80	None	replace
267	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  arg  =  Util.stripLeadingHyphens(arg);  }  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  arg  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  arg  =  Util.stripLeadingHyphens(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	80	None	replace
268	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
269	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  argument.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  argument.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  argument.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
270	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  1;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  1;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  1;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
271	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg  +  1,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg  +  1,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg  +  1,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	121	None	replace
272	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	121	None	replace
273	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arguments,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arguments,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arguments,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	121	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));	  String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    	compilable	  [FE]  AssertionFailedError  	5	9	replace
275	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));  [FE]  AssertionFailedError  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));	  String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    	compilable	  [FE]  AssertionFailedError  	5	9	replace
276	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2),  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2),  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2),  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	5	None	replace
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  i));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  i));	  String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    	compilable	  [FE]  AssertionFailedError  	5	9	replace
278	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  i));  [FE]  AssertionFailedError  [FE]        UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  i));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  i));	  String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    	compilable	  [FE]  AssertionFailedError  	5	9	replace
279	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  -  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  -  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  -  1);	  String[]    arguments    =    options.get(arg.substring(0,    2),    arg.length());    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	138	None	replace
280	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1),  arg.length());  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1),  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  1),  arg.length());	  String[]    arguments    =    options.get(arg.substring(0,    2),    arg.length());    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	138	None	replace
281	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  -  2);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  -  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  -  2);	  String[]    arguments    =    options.get(arg.substring(0,    2),    arg.length());    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	138	None	replace
282	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  +  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  +  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length()  +  1);	  String[]    arguments    =    options.get(arg.substring(0,    2),    arg.length());    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	138	None	replace
283	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
284	[BUG]  [BUGGY]  if(arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(arg.startsWith( "- "))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
285	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  if(options.hasOption(opt))  {  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  if(options.hasOption(opt))  {  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  if(options.hasOption(opt))  {	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
286	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt)  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt)  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt)	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    	non-compiled	[CE]  ')'  expected	136	None	replace
287	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]    MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  tokens.add(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    tokens.add(arg);  tokens.add(arg);	  	compilable	  [FE]  MissingArgumentException  	16	11	add
288	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  tokens.add(arg);  tokens.add(arg);  [FE]  MissingArgumentException  [FE]    MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  tokens.add(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    tokens.add(arg);  tokens.add(arg);	  	compilable	  [FE]  MissingArgumentException  	16	11	add
289	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]      MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
290	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  [FE]  MissingArgumentException  [FE]      MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
291	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]        MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
292	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [FE]  MissingArgumentException  [FE]        MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
293	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]          MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
294	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }  [FE]  MissingArgumentException  [FE]          MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
295	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]            MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    tokens.add(arg);	  	compilable	  [FE]  MissingArgumentException  	16	11	add
296	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  tokens.add(arg);  [FE]  MissingArgumentException  [FE]            MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    tokens.add(arg);	  	compilable	  [FE]  MissingArgumentException  	16	11	add
297	[BUG]  [BUGGY]  int  arg  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  int  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	int  arg  =  Util.stripLeadingHyphens(arguments[i]);	          arg    =    Util.stripLeadingHyphens(arguments[i]);    int    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
298	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  i);	  String    opt    =    Util.stripLeadingHyphens(arguments,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	72	None	replace
299	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(1,  2));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(1,  2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(1,  2));	  String[]    arguments    =    options.get(arg.substring(0,    1));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	86	None	replace
300	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    old    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	6	replace
301	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    old    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	6	replace
302	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[0]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    old    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ComparisonFailure  	120	4	replace
303	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[0]);  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  old  =  Util.stripLeadingHyphens(arguments[0]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    old    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ComparisonFailure  	120	4	replace
304	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i], "- ");  String  old  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    old    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	120	None	replace
305	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg)+  1;  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg)+  1;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arg)+  1;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    String    option    =    Util.stripLeadingHyphens(arg)+    1;    	non-compiled	[CE]  cannot  find  symbol  opt	43	None	replace
306	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  option  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  option  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    option    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	6	replace
307	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  option  =  Util.stripLeadingHyphens(arguments[1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  option  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  option  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    option    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	6	replace
308	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    option    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	94	None	replace
309	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arguments,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arguments,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  arguments,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(options,    arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	40	None	replace
310	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  options,  arguments);	  String    opt    =    Util.stripLeadingHyphens(options,    arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	40	None	replace
311	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arguments,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arguments,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  arguments,  i);	  String    opt    =    Util.stripLeadingHyphens(options,    arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	40	None	replace
312	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arg  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    option    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	53	None	replace
313	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	31	None	replace
314	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(options,  arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(options,  arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(options,  arg,  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	31	None	replace
315	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	31	None	replace
316	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	31	None	replace
317	[BUG]  [BUGGY]  tokens.add(arg.substring(i,  2));  [CE]  cannot  find  symbol  opt  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg.substring(i,  2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(i,  2));	  tokens.add(arg.substring(2));    	non-compiled	[CE]  cannot  find  symbol  opt	90	None	replace
318	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  0,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  0,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  0,  i);	  String    opt    =    Util.stripLeadingHyphens(arguments,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	73	None	replace
319	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arguments,  i);	  String    opt    =    Util.stripLeadingHyphens(arguments,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	73	None	replace
320	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments,  i);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption,    arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	12	None	replace
321	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  options);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	27	None	replace
322	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	27	None	replace
323	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	27	None	replace
324	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  eatTheRest,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  eatTheRest,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  eatTheRest,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	27	None	replace
325	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i);  arg  =  Util.stripRightHyphens(arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  i);  arg  =  Util.stripRightHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  i);  arg  =  Util.stripRightHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripRightHyphens(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	109	None	replace
326	[BUG]  [BUGGY]  tokens.add( "-- ").equals(arg.substring(2));  [CE]  boolean  cannot  be  dereferenced  [FE]        ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ").equals(arg.substring(2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ").equals(arg.substring(2));	  tokens.add(   "--   ").equals(arg));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	88	None	replace
327	[BUG]  [BUGGY]  tokens.add( "-- ").equals(arg.substring(1));  [CE]  boolean  cannot  be  dereferenced  [FE]          ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ").equals(arg.substring(1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ").equals(arg.substring(1));	  tokens.add(   "--   ").equals(arg));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	88	None	replace
328	[BUG]  [BUGGY]  tokens.add(util.stripLeadingHyphens(arg));  [CE]  cannot  find  symbol  util  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(util.stripLeadingHyphens(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(util.stripLeadingHyphens(arg));	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripRightHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  util	101	None	replace
329	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
330	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  option  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  option  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    String  option  =  Util.stripLeadingHyphens(arg.substring(0,  2));	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
331	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  1));	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
332	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ",  -1).split( "- ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ",  -1).split( "- ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ",  -1).split( "- ");	  String[]    arguments    =    arg.split(   "-   ").split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	143	None	replace
333	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ".split( "- "));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ".split( "- "));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ".split( "- "));	  String[]    arguments    =    arg.split(   "-   ").split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	143	None	replace
334	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arguments[i]);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	30	None	replace
335	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg,  null);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg,  null);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg,  null);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	30	None	replace
336	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments[i],  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments[i],  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  arguments[i],  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	30	None	replace
337	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0].);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0].);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[0].);	          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg    =    Util.stripLeadingHyphens(arguments[i].);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
338	[BUG]  [BUGGY]  tokens.add(util.stripLeadingHyphens(arg,  stopAtNonOption));  [CE]  cannot  find  symbol  util  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(util.stripLeadingHyphens(arg,  stopAtNonOption));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(util.stripLeadingHyphens(arg,  stopAtNonOption));	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  util	129	None	replace
339	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  tokens.add(arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  tokens.add(arg);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    tokens.add(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	129	None	replace
340	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  -  2);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  -  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  -  2);	  String    opt    =    Util.stripLeadingHyphens(arg    +    2);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	2	None	replace
341	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  2);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  2);	  String    opt    =    Util.stripLeadingHyphens(arg    +    2);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	2	None	replace
342	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  /  2);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  /  2);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  /  2);	  String    opt    =    Util.stripLeadingHyphens(arg    +    2);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	2	None	replace
343	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add( "- ");  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add( "- ");  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add( "- ");  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	77	None	replace
344	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	77	None	replace
345	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption,  arguments);	  String    opt    =    Util.stripLeadingHyphens(options,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	38	None	replace
346	[BUG]  [BUGGY]  tokens.add( "-? ",  i);  [CE]  no  suitable  method  found  for  add(String,int)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-? ",  i);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-? ",  i);	  tokens.add(   "-?   ");    	non-compiled	[CE]  no  suitable  method  found  for  add(String,int)	111	None	replace
347	[BUG]  [BUGGY]  String  options  =  Util.stripLeadingHyphens(arg)+  1;  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  options  =  Util.stripLeadingHyphens(arg)+  1;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  options  =  Util.stripLeadingHyphens(arg)+  1;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    String    option    =    Util.stripLeadingHyphens(arg)+    1;    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	43	None	replace
348	[BUG]  [BUGGY]  tokens.add( "-- ",  arg.equals( "-- "));  [CE]  no  suitable  method  found  for  add(String,boolean)  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ",  arg.equals( "-- "));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ",  arg.equals( "-- "));	          tokens.add(       "--       ");    tokens.add(   "--   ".equals(arg));    	non-compiled	[CE]  no  suitable  method  found  for  add(String,boolean)	48	None	replace
349	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  }	          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	34	None	replace
350	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  }  else  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  }  else  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  }  else  {  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	34	None	replace
351	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  option  =  Util.stripLeadingHyphens(arguments[1]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  option  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[1]);    String  option  =  Util.stripLeadingHyphens(arguments[1]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	28	None	add
352	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(arg);  }  [CE]  cannot  find  symbol  tos  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    tos.add(arg);    	non-compiled	[CE]  cannot  find  symbol  tos	81	None	replace
353	[BUG]  [BUGGY]  String[]  arguments  =  options.split( "-?   ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.split( "-?   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.split( "-?   ");	  String[]    arguments    =    arg.split(   "-?   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	104	None	replace
354	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(tokens,  arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(tokens,  arg,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(tokens,  arg,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	14	None	replace
355	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[1],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[1],  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[1],  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arguments[1]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	8	None	replace
356	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ");	  	compilable	  [FE]  ArrayStoreException  	47	14	add
357	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--   ".equals(arg));  tokens.add( "--   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ");        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ");	  	compilable	  [FE]  ArrayStoreException  	47	14	add
358	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	31	None	replace
359	[BUG]  [BUGGY]  tokens.add( "-: "  +  arg);  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-: "  +  arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-: "  +  arg);	  tokens.add(   "-:   ");    	non-compiled	[CE]  cannot  find  symbol  opt	110	None	replace
360	[BUG]  [BUGGY]  tokens.add( ": ");  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( ": ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( ": ");	  tokens.add(   "-:   ");    	non-compiled	[CE]  cannot  find  symbol  opt	110	None	replace
361	[BUG]  [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg,  stopAtNonOption));  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(Util.stripLeadingHyphens(arg,  stopAtNonOption));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(Util.stripLeadingHyphens(arg,  stopAtNonOption));	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    tokens.add(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	129	None	replace
362	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arg  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    options    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	105	None	replace
363	[BUG]  [BUGGY]  tokens.add( "- ").equals(arg));  [CE]  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ").equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ").equals(arg));	  tokens.add(   "-   ".equals(arg));    	non-compiled	[CE]  	70	None	replace
364	[BUG]  [BUGGY]  tokens.add( "- "  +  arg.equals( "- "));  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  arg.equals( "- "));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- "  +  arg.equals( "- "));	  tokens.add(   "-   ".equals(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	70	None	replace
365	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  opt  =  Util.stripLeadingHyphens(arg  +  3);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  String  opt  =  Util.stripLeadingHyphens(arg  +  3);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    2);    String  opt  =  Util.stripLeadingHyphens(arg  +  3);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
366	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  eatTheRest);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  eatTheRest);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  eatTheRest);	  String    opt    =    Util.stripLeadingHyphens(arguments,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	72	None	replace
367	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(opt,  arguments);	  String    opt    =    Util.stripLeadingHyphens(opt,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	113	None	replace
368	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(option,  opt);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(option,  opt);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(option,  opt);	  String    opt    =    Util.stripLeadingHyphens(opt,    options);    	non-compiled	[CE]  cannot  find  symbol  option	113	None	replace
369	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[0]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	26	None	replace
370	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]	  	non-compiled	[CE]  ')'  expected	33	None	add
371	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyps(arguments[i]);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyps(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyps(arguments[i]);	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
372	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  option,  stopAtNonOption);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  option,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  option,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    options);    	non-compiled	[CE]  cannot  find  symbol  option	39	None	replace
373	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options),  stopAtNonOption);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options),  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  options),  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    options);    	non-compiled	[CE]  ';'  expected	39	None	replace
374	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  0,  i  +  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  0,  i  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  0,  i  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	122	None	replace
375	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  tokens);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  tokens);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1,  tokens);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	122	None	replace
376	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  buffer,  i  +  1);  [CE]  cannot  find  symbol  buffer  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  buffer,  i  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  buffer,  i  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  cannot  find  symbol  buffer	122	None	replace
377	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  argument  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  String  argument  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[0]);    String  argument  =  Util.stripLeadingHyphens(arguments[0]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
378	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(1));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(1));	  String[]    arguments    =    options.get(arg.substring(0,    1));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	86	None	replace
379	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(2));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(2));	  String[]    arguments    =    options.get(arg.substring(0,    1));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	86	None	replace
380	[BUG]  [BUGGY]  Integer  arg  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  Integer  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	Integer  arg  =  Util.stripLeadingHyphens(arguments[i]);	          arg    =    Util.stripLeadingHyphens(arguments[i]);    int    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
381	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  0,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  0,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  0,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    i,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	15	None	replace
382	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    option    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	53	None	replace
383	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  eatTheRest);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  eatTheRest);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  eatTheRest);	  String[]    arguments    =    options.get(arg.substring(0,    2),    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	85	None	replace
384	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption  +  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption  +  1);	  arg    =    Util.stripLeadingHyphens(arguments[i]    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	7	None	replace
385	[BUG]  [BUGGY]  String[]  arguments  =  options.stripLeadingHyphens(arguments[i]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	93	None	replace
386	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  String  options  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    options    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	119	None	replace
387	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  options.put(options.getOption(options.substring(0,  2)));  }  [CE]  cannot  find  symbol  [FE]    MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  options.put(options.getOption(options.substring(0,  2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    if(stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  options.put(options.getOption(options.substring(0,  2)));  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
388	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1);	  arg    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	32	None	replace
389	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	74	None	replace
390	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  i);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	74	None	replace
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  0;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg)+  0;	  String    opt    =    Util.stripLeadingHyphens(arg)+    3;    	compilable	  [FE]  AssertionFailedError  	100	9	replace
392	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  0;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)+  0;	  String    opt    =    Util.stripLeadingHyphens(arg)+    3;    	compilable	  [FE]  AssertionFailedError  	100	9	replace
393	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	62	None	replace
394	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	62	None	replace
395	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add( "- ");  }  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add( "- ");  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add( "- ");  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	62	None	replace
396	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  opt,  arg);  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  opt,  arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  opt,  arg);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  cannot  find  symbol  opt	134	None	replace
397	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  opt);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  opt);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  opt);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  cannot  find  symbol  opt	134	None	replace
398	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  null,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  null,  arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  null,  arg);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	134	None	replace
399	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyps(arg);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyps(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyps(arg);	  	non-compiled	[CE]  cannot  find  symbol	61	None	add
400	[BUG]  [BUGGY]  tokens  =(String[])options.toArray(new  String[options.size()  ]);  [CE]  cannot  find  symbol  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens  =(String[])options.toArray(new  String[options.size()  ]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens  =(String[])options.toArray(new  String[options.size()  ]);	          tokens.add(arg);    tokens    =(String[])options.clone();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
401	[BUG]  [BUGGY]  tokens.add( "-?   ",  stopAtNonOption);  [CE]  no  suitable  method  found  for  add(String,boolean)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-?   ",  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-?   ",  stopAtNonOption);	  tokens.add(   "-?   ");    	non-compiled	[CE]  no  suitable  method  found  for  add(String,boolean)	111	None	replace
402	[BUG]  [BUGGY]  tokens.add( "-?   "  +  arg);  [CE]  cannot  find  symbol  opt  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-?   "  +  arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-?   "  +  arg);	  tokens.add(   "-?   ");    	non-compiled	[CE]  cannot  find  symbol  opt	111	None	replace
403	[BUG]  [BUGGY]  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens  =  new  TokenBuffer(arg,  stopAtNonOption);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
404	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    option    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	94	None	replace
405	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arguments[0]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    option    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	94	None	replace
406	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ",  2).split( "- ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ",  2).split( "- ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ",  2).split( "- ");	  String[]    arguments    =    arg.split(   "-   ").split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	143	None	replace
407	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[0],  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arguments[0]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	6	None	replace
408	[BUG]  [BUGGY]  tokens.add( "--   ".equals(arg)&&!eatTheRest);  [CE]  cannot  find  symbol  opt  [FE]        ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "--   ".equals(arg)&&!eatTheRest);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "--   ".equals(arg)&&!eatTheRest);	  tokens.add(   "--   ".equals(arg)&&!stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	130	None	replace
409	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	116	None	replace
410	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i].substring(1));  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i].substring(1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i].substring(1));	          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg    =    Util.stripLeadingHyphens(arguments[i].);    	non-compiled	[CE]  cannot  find  symbol  opt	123	None	replace
411	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg;    tokens.add(arg);    	non-compiled	[CE]  ')'  expected	82	None	replace
412	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg;    tokens.add(arg);    	non-compiled	[CE]  ')'  expected	82	None	replace
413	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments.length);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments.length);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  arguments.length);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	75	None	replace
414	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arguments.length());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arguments.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg,  arguments.length());	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
415	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]));  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]));  }	          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg    =    Util.stripLeadingHyphens(arguments[i]));    	non-compiled	[CE]  ';'  expected	37	None	replace
416	[BUG]  [BUGGY]  tokens.add( "-- "  +  arg.substring(i,  2));  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- "  +  arg.substring(i,  2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- "  +  arg.substring(i,  2));	  tokens.add(   "--   "    +    arg.substring(2));    	non-compiled	[CE]  cannot  find  symbol  opt	84	None	replace
417	[BUG]  [BUGGY]  tokens.add( "-non-option ");  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-non-option ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-non-option ");	  tokens.add(   "-n   ");    	non-compiled	[CE]  cannot  find  symbol  opt	71	None	replace
418	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  block,  arg,  stopAtNonOption);  [CE]  cannot  find  symbol  block  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  block,  arg,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  block,  arg,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  block	13	None	replace
419	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	80	None	replace
420	[BUG]  [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	80	None	replace
421	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  options  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  String  options  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg.substring(0,    2));    String  options  =  Util.stripLeadingHyphens(arg.substring(0,  2));	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
422	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  Token  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [CE]  cannot  find  symbol  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  Token  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    Token  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
423	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(options.getOption(arg));  [CE]  ')'  expected  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(options.getOption(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(options.getOption(arg));	  	non-compiled	[CE]  ')'  expected	68	None	add
424	[BUG]  [BUGGY]  tokens.add(Util.stripRightHyphens(arg));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(Util.stripRightHyphens(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(Util.stripRightHyphens(arg));	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripRightHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
425	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i], "- ");  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i], "- ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i], "- ");	          arg    =    Util.stripLeadingHyphens(arguments[i]);    String    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	36	None	replace
426	[BUG]  [BUGGY]  tokens  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  incompatible  types  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens  =  Util.stripLeadingHyphens(arguments[i]);	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arguments[i]);    }    	non-compiled	[CE]  incompatible  types	20	None	replace
427	[BUG]  [BUGGY]  tokens.add( "- ");  if(!stopAtNonOption)  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]                MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ");  if(!stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ");  if(!stopAtNonOption)  {  tokens.add(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arguments[i]);    }    	non-compiled	[CE]  cannot  find  symbol  opt	20	None	replace
428	[BUG]  [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "-   ");  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	67	None	replace
429	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg;  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg;  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg;	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg;    	non-compiled	[CE]  ')'  expected	106	None	replace
430	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  [CE]  cannot  find  symbol  opt  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	69	None	replace
431	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {  [CE]  'else'  without  'if'  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  else  {	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
432	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  tokens,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  tokens,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  tokens,  i);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	139	None	replace
433	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));  }  [CE]  cannot  find  symbol  opt  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
434	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  }  [CE]  cannot  find  symbol  opt  [FE]      NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(2)));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
435	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripRadingHyphens(arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripRadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripRadingHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripRadingHyphens(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	108	None	replace
436	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRadingHyphens(arg,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRadingHyphens(arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRadingHyphens(arg,  stopAtNonOption);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripRadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
437	[BUG]  [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add( "- ");  }  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add( "- ");  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add( "- ");  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	78	None	replace
438	[BUG]  [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  else  {  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    String    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	78	None	replace
439	[BUG]  [BUGGY]  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  cannot  find  symbol  opt  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  old  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    old    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	120	None	replace
440	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  String  old  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    old    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	120	None	replace
441	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  opt  =  Util.stripLeadingHyphens(arg)+1  2;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  String  opt  =  Util.stripLeadingHyphens(arg)+1  2;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    2;    String  opt  =  Util.stripLeadingHyphens(arg)+1  2;	  	non-compiled	[CE]  ';'  expected	96	None	add
442	[BUG]  [BUGGY]  tokens.add( "-- ").equals(arg)&&!stopAtNonOption);  [CE]  not  a  statement  [FE]        ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ").equals(arg)&&!stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ").equals(arg)&&!stopAtNonOption);	  tokens.add(   "--   ").equals(arg));    	non-compiled	[CE]  not  a  statement	88	None	replace
443	[BUG]  [BUGGY]  tokens.add( "-- ").equals(arg)&&!stopAtNonOption;  [CE]  not  a  statement  [FE]          ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ").equals(arg)&&!stopAtNonOption;  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ").equals(arg)&&!stopAtNonOption;	  tokens.add(   "--   ").equals(arg));    	non-compiled	[CE]  not  a  statement	88	None	replace
444	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  tokens.add(arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  tokens.add(arg);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    tokens.add(arg);    	compilable	  [FE]  MissingArgumentException  	137	11	replace
445	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  tokens.add(arg);  [FE]  MissingArgumentException  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  tokens.add(arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]);  tokens.add(arg);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    tokens.add(arg);    	compilable	  [FE]  MissingArgumentException  	137	11	replace
446	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    tokens.add(arg);    	compilable	  [FE]  MissingArgumentException  	137	11	replace
447	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  [FE]  MissingArgumentException  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    tokens.add(arg);    	compilable	  [FE]  MissingArgumentException  	137	11	replace
448	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripRightHyphens(arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripRightHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripRightHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripRightHyphens(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	109	None	replace
449	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRightHyphens(arg,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRightHyphens(arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRightHyphens(arg,  stopAtNonOption);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripRightHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
450	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--.   ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	59	14	add
451	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--   ".equals(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   "--.   ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   "--.   ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	59	14	add
452	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  ')'  expected	79	None	add
453	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options,  stopAtNonOption,  eatTheRest);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options,  stopAtNonOption,  eatTheRest);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  options,  stopAtNonOption,  eatTheRest);	  String    opt    =    Util.stripLeadingHyphens(options,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	38	None	replace
454	[BUG]  [BUGGY]  tokens.add('-').toLowerCase();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add('-').toLowerCase();  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add('-').toLowerCase();	  tokens.add('-');    	non-compiled	[CE]  boolean  cannot  be  dereferenced	133	None	replace
455	[BUG]  [BUGGY]  tokens.add('-'  +  arg);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add('-'  +  arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add('-'  +  arg);	  tokens.add('-');    	non-compiled	[CE]  cannot  find  symbol  opt	133	None	replace
456	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  options,  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	103	None	replace
457	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  option,  arg);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  option,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  option,  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg);    	non-compiled	[CE]  cannot  find  symbol  option	103	None	replace
458	[BUG]  [BUGGY]  tokens.add( "-- ".);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ".);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ".);	          tokens.add(       "--       ");    tokens.add(   "--   ".);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
459	[BUG]  [BUGGY]  tokens.add(arg  +  3);  [CE]  cannot  find  symbol  opt  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg  +  3);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg  +  3);	  tokens.add(arg    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	140	None	replace
460	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripLaadingHyphens(arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripLaadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  arg  =  Util.stripLaadingHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLaadingHyphens(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	107	None	replace
461	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  null,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  null,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  null,  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	30	None	replace
462	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  option);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  option);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  option);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  cannot  find  symbol  option	30	None	replace
463	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));	  	compilable	  [FE]  NullPointerException  	64	14	add
464	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1)));	  	compilable	  [FE]  NullPointerException  	64	14	add
465	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	136	None	replace
466	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options,  i);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  options,  i);	  String    opt    =    Util.stripLeadingHyphens(arguments,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	73	None	replace
467	[BUG]  [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	77	None	replace
468	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1,  arguments);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption  +  1,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    stopAtNonOption);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	121	None	replace
469	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption,  options);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	121	None	replace
470	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length(),  arg.length());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length(),  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length(),  arg.length());	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    arg.length());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
471	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1,  arg.length());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1,  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1,  arg.length());	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length(),    arg.length());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
472	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption,  eatTheRest);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption,  eatTheRest);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption,  eatTheRest);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]),    stopAtNonOption);    	non-compiled	[CE]  ';'  expected	135	None	replace
473	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  eatTheRest);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  eatTheRest);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption,  eatTheRest);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	27	None	replace
474	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  buffer,  stopAtNonOption);  [CE]  cannot  find  symbol  buffer  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  buffer,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  buffer,  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  buffer	31	None	replace
475	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  Token  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  Token  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    Token  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
476	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
477	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	79	14	add
478	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }	  	compilable	  [FE]  NullPointerException  	64	14	add
479	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }	  	compilable	  [FE]  NullPointerException  	64	14	add
480	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }	  	compilable	  [FE]  NullPointerException  	64	14	add
481	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  }	  	compilable	  [FE]  NullPointerException  	64	14	add
482	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(	  	non-compiled	[CE]  ')'  expected	64	None	add
483	[BUG]  [BUGGY]  tokens.add( "- ",  arg.substring(2));  [CE]  no  suitable  method  found  for  add(String,String)  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ",  arg.substring(2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ",  arg.substring(2));	          tokens.add(       "-       ");    tokens.add(   "-       ");    	non-compiled	[CE]  no  suitable  method  found  for  add(String,String)	50	None	replace
484	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
485	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!eatTheRest)  {  tokens.add(arg);  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
486	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  argument.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  argument.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  argument.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
487	[BUG]  [BUGGY]  int  arg  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  int  arg  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	int  arg  =  Util.stripLeadingHyphens(arguments[0]);	          arg    =    Util.stripLeadingHyphens(arguments[i]);    int    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
488	[BUG]  [BUGGY]  int  arg  =  Util.stripLeadingHyphens(arguments[i], "- ");  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  int  arg  =  Util.stripLeadingHyphens(arguments[i], "- ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	int  arg  =  Util.stripLeadingHyphens(arguments[i], "- ");	          arg    =    Util.stripLeadingHyphens(arguments[i]);    int    arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
489	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(opt.startsWith( "-   "))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(opt.startsWith( "-   "))  {  tokens.add(arg);  }  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(opt.startsWith( "-   "))  {  tokens.add(arg);  }	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
490	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
491	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	93	None	replace
492	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(arg);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
493	[BUG]  [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  2);  [CE]  cannot  find  symbol  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  2);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  2);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg.length());    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
494	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.substring(0,  arg.length()));  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.substring(0,  arg.length()));  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.substring(0,  arg.length()));	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	74	None	replace
495	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length(),  options);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg.length());    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	74	None	replace
496	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }	  	compilable	  [FE]  ArrayStoreException  	68	14	add
497	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg));    if(options.hasOption(arg))  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  }	  	compilable	  [FE]  ArrayStoreException  	68	14	add
498	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  opt  =  Util.stripLeadingHyphens(arg)+1  3;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  String  opt  =  Util.stripLeadingHyphens(arg)+1  3;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    3;    String  opt  =  Util.stripLeadingHyphens(arg)+1  3;	  	non-compiled	[CE]  ';'  expected	99	None	add
499	[BUG]  [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tos.add( "-   ");  [CE]  cannot  find  symbol  tos  [FE]    UnrecognizedOptionException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tos.add( "-   ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");  tos.add( "-   ");	  	non-compiled	[CE]  cannot  find  symbol  tos	49	None	add
500	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]),  arg);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]),  arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]),  arg);	          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg    =    Util.stripLeadingHyphens(arguments[i]));    	non-compiled	[CE]  ';'  expected	37	None	replace
501	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  4);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  4);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]  +  4);	  arg    =    Util.stripLeadingHyphens(arguments[i]    +    1);    	non-compiled	[CE]  cannot  find  symbol  opt	7	None	replace
502	[BUG]  [BUGGY]  String  argument  =  Util.stripLeadingHyphens(arguments[i], "- ");  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  argument  =  Util.stripLeadingHyphens(arguments[i], "- ");  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  argument  =  Util.stripLeadingHyphens(arguments[i], "- ");	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    argument    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	118	None	replace
503	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arguments,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	39	None	replace
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  	compilable	  [FE]  AssertionFailedError  	76	14	add
505	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  }	  	compilable	  [FE]  AssertionFailedError  	76	14	add
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
507	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        tokens.add(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	76	14	add
508	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  options,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  options,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  options,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	27	None	replace
509	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)-  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)-  2;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)-  2;	  String    opt    =    Util.stripLeadingHyphens(arg)+    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	97	None	replace
510	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!eatTheRest)  {  tokens.add(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    i++)    {    tokens[i]    =    Util.stripLeadingHyphens(arguments[i]);    }    	non-compiled	[CE]  cannot  find  symbol  opt	20	None	replace
511	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(1,  1));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(1,  1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(1,  1));	  String[]    arguments    =    options.get(arg.substring(0,    1));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	86	None	replace
512	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  null);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  null);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  null);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	103	None	replace
513	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   ",--     ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(       "--       ".equals(arg));        tokens.add(   ",--       ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	57	14	add
514	[BUG]  [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   ",--     ".equals(arg));  tokens.add( "--   ".equals(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(     "--     ".equals(arg));    tokens.add(   ",--     ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(       "--       ".equals(arg));        tokens.add(   ",--       ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	57	14	add
515	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  opt);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption,  opt);	  String[]    arguments    =    options.get(arg.substring(0,    2),    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	85	None	replace
516	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]    MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
517	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  [FE]  MissingArgumentException  [FE]    MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
518	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]      MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(options.hasOption(arg))  {  tokens.add(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    if(options.hasOption(arg))  {  tokens.add(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
519	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(options.hasOption(arg))  {  tokens.add(arg);  tokens.add(arg);  }  [FE]  MissingArgumentException  [FE]      MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(options.hasOption(arg))  {  tokens.add(arg);  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    if(options.hasOption(arg))  {  tokens.add(arg);  tokens.add(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
520	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]        MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                tokens.add(arg);        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
521	[BUG]  [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }  [FE]  MissingArgumentException  [FE]        MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          tokens.add(arg);    tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                tokens.add(arg);        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  tokens.add(arg);  }  else  {  Util.stripLeadingHyphens(arg);  }	  	compilable	  [FE]  MissingArgumentException  	16	11	add
522	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  }  else  {  tokens.add(arg);  }	          arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	77	None	replace
523	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arguments[i],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arguments[i],  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arguments[i],  stopAtNonOption);	  arg    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	134	None	replace
524	[BUG]  [BUGGY]  arg  =  Util.stripLaadingHyphens(arg);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  arg  =  Util.stripLaadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLaadingHyphens(arg);	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLaadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
525	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLEadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLEadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLEadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  cannot  find  symbol	61	None	add
526	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  arg);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	52	None	replace
527	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arg  +  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arg  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  arg  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	52	None	replace
528	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!eatTheRest)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
529	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  reached  end  of  file  while  parsing  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!eatTheRest)  {  tokens.add(arg);  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!eatTheRest)  {  tokens.add(arg);  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	          tokens.add(arg);    if(!stopAtNonOption)    {    tokens.add(arg);    }    else    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    tokens[i]    =    Util.stripLeadingHyphens(arg);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
530	[BUG]  [BUGGY]  tokens.add(arg.substring(1,  2));  [CE]  cannot  find  symbol  opt  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg.substring(1,  2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(1,  2));	  tokens.add(arg.substring(1));    	non-compiled	[CE]  cannot  find  symbol  opt	91	None	replace
531	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add('-');  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add('-');	  	compilable	  [FE]  ArrayStoreException  	66	14	add
532	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add('-');  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(   "-   ");  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add('-');  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arg);        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(   "-   ");    arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add('-');	  	compilable	  [FE]  ArrayStoreException  	66	14	add
533	[BUG]  [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLEadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]          arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLEadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	                arg        =        Util.stripLeadingHyphens(arguments[i]);        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLEadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
534	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments,  stopAtNonOption,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments,  stopAtNonOption,  options);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  arguments,  stopAtNonOption,  options);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption,    options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	116	None	replace
535	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  options.length());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg,  options.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg,  options.length());	  TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
536	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  ')'  expected	63	None	replace
537	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[i], "- ");  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arguments[i], "- ");  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arguments[i], "- ");	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    option    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	94	None	replace
538	[BUG]  [BUGGY]  tokens.add( "-null ");  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-null ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-null ");	  tokens.add(   "-n   ");    	non-compiled	[CE]  cannot  find  symbol  opt	71	None	replace
539	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ").split( "- ".split( "- "));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String[]  arguments  =  arg.split( "- ").split( "- ".split( "- "));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ").split( "- ".split( "- "));	  String[]    arguments    =    arg.split(   "-   ").split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	143	None	replace
540	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  options  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  options  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i]),  options  =  Util.stripLeadingHyphens(arguments[i]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    options    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	119	None	replace
541	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  int  i  +  1);  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  int  i  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  int  i  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg,    i    +    1);    	non-compiled	[CE]  '.class'  expected	122	None	replace
542	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));  }  [CE]  cannot  find  symbol  opt  [FE]    NullPointerException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(1,  2)));  }	          arg    =    Util.stripLeadingHyphens(arg);    arg    =    Util.stripLeadingHyphens(arg);    tokens.add(options.getOption(arg.substring(0,    2)));    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
543	[BUG]  [BUGGY]  tokens.add(arg.substring(i  +  2));  [CE]  cannot  find  symbol  opt  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg.substring(i  +  2));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(i  +  2));	  tokens.add(arg.substring(2));    	non-compiled	[CE]  cannot  find  symbol  opt	90	None	replace
544	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add( "-   ");  }  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add( "-   ");  }  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add( "-   ");  }	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	95	None	replace
545	[BUG]  [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(opt.startsWith( "-   "))  {  tokens.add( "- ");  }  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(opt.startsWith( "-   "))  {  tokens.add( "- ");  }  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(options.hasOption(arg))  {  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(opt.startsWith( "-   "))  {  tokens.add( "- ");  }	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String    opt    =    Util.stripLeadingHyphens(arguments[i]);    if(options.hasOption(opt))    {    tokens.add(   "-   ");    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	95	None	replace
546	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arg,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arg,  arguments);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  arg,  arguments);	  String    opt    =    Util.stripLeadingHyphens(options,    arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	40	None	replace
547	[BUG]  [BUGGY]  tokens.add('-').trim();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add('-').trim();  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add('-').trim();	  tokens.add('-');    	non-compiled	[CE]  boolean  cannot  be  dereferenced	133	None	replace
548	[BUG]  [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  *  1);  [CE]  cannot  find  symbol  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  *  1);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  *  1);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
549	[BUG]  [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length();  [CE]  ')'  expected  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length();  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length();	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    -    1);    	non-compiled	[CE]  ')'  expected	141	None	replace
550	[BUG]  [BUGGY]  tokens.add(arg);  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]        MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
551	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]),  stopAtNonOption);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]),  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[1]),  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[1]);    	non-compiled	[CE]  ';'  expected	29	None	replace
552	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg)+  2;  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg)+  2;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arg)+  2;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    String    option    =    Util.stripLeadingHyphens(arg)+    1;    	non-compiled	[CE]  cannot  find  symbol  opt	43	None	replace
553	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg)/  1;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arg)/  1;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    String    option    =    Util.stripLeadingHyphens(arg)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	43	None	replace
554	[BUG]  [BUGGY]  tokens.add( ",-- ").equals(arg));  [CE]  [FE]    ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( ",-- ").equals(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( ",-- ").equals(arg));	          tokens.add(       "--       ".equals(arg));    tokens.add(   ",--       ".equals(arg));    	non-compiled	[CE]  	58	None	replace
555	[BUG]  [BUGGY]  tokens.add( ",-- ");  [CE]  cannot  find  symbol  opt  [FE]      ArrayStoreException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( ",-- ");  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( ",-- ");	          tokens.add(       "--       ".equals(arg));    tokens.add(   ",--       ".equals(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	58	None	replace
556	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  argument,  stopAtNonOption);  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  argument,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  argument,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(options,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  argument	38	None	replace
557	[BUG]  [BUGGY]  tokens.add( "-? ",  arg);  [CE]  no  suitable  method  found  for  add(String,String)  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-? ",  arg);  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-? ",  arg);	  tokens.add(   "-?   ");    	non-compiled	[CE]  no  suitable  method  found  for  add(String,String)	111	None	replace
558	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments[i],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arguments[i],  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arguments[i],  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    i);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	73	None	replace
559	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments,  eatTheRest);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments,  eatTheRest);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments,  eatTheRest);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption,    arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	12	None	replace
560	[BUG]  [BUGGY]  tokens.add( "- ",  arg.substring(1));  [CE]  no  suitable  method  found  for  add(String,String)  [FE]        AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ",  arg.substring(1));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ",  arg.substring(1));	          tokens.add(       "--       ");    tokens.add(   "--   ".);    	non-compiled	[CE]  no  suitable  method  found  for  add(String,String)	114	None	replace
561	[BUG]  [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length());  [CE]  cannot  find  symbol  [FE]          MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  arg.length());	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
562	[BUG]  [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  buffer.length());  [CE]  cannot  find  symbol  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  buffer.length());  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  buffer.length());	          tokens.add(arg);    TokenBuffer    tokens    =    new    TokenBuffer(arg.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
563	[BUG]  [BUGGY]  tokens.add( "-- ").append(arg));  [CE]  [FE]        ArrayStoreException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ").append(arg));  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ").append(arg));	  tokens.add(   "--   ").equals(arg));    	non-compiled	[CE]  	88	None	replace
564	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[4]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  String  opt  =  Util.stripLeadingHyphens(arguments[4]);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[1]);    String  opt  =  Util.stripLeadingHyphens(arguments[4]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	28	None	add
565	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arguments[i],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arguments[i],  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  arguments[i],  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i],    arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	30	None	replace
566	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)/  3;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    AssertionFailedError    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)/  3;  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)/  3;	  String    opt    =    Util.stripLeadingHyphens(arg)+    3;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	100	None	replace
567	[BUG]  [BUGGY]  tokens.add(arg);  if(options.hasOption(options))  {  tokens  =(String[])options.clone();  }  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  if(options.hasOption(options))  {  tokens  =(String[])options.clone();  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  if(options.hasOption(options))  {  tokens  =(String[])options.clone();  }	          tokens.add(arg);    tokens    =(String[])options.clone();    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	126	None	replace
568	[BUG]  [BUGGY]  tokens.add(arg);  if(options.hasOption(options.get(arg)))  {  tokens  =(String[])options.clone();  }  [CE]  cannot  find  symbol  [FE]              MissingArgumentException      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  tokens.add(arg);  if(options.hasOption(options.get(arg)))  {  tokens  =(String[])options.clone();  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg);  if(options.hasOption(options.get(arg)))  {  tokens  =(String[])options.clone();  }	          tokens.add(arg);    tokens    =(String[])options.clone();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
569	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  0,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  0,  stopAtNonOption);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  0,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments,    arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	13	None	replace
570	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add(arg);  }  [CE]  'else'  without  'if'  [FE]    MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  else  if(!stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	else  if(!stopAtNonOption)  {  tokens.add(arg);  }	          tokens.add(arg);    tokens.add(arg);    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
571	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]      MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  tokens.add(arg);  }	          tokens.add(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	17	None	replace
572	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  tokens.add(arg);  }  [CE]  cannot  find  symbol  opt  [FE]        MissingArgumentException    [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  tokens.add(arg);  }  [BUGGY]      String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  tokens.add(arg);  }	          tokens.add(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	17	None	replace
573	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg,  arg  +  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg,  arg  +  1);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arg,  arg  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    option    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	53	None	replace
574	[BUG]  [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg  +  1,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      {  eatTheRest  =  true;  tokens.add(     "--     ");  }  else  if  (     "-     ".equals(arg))  {  tokens.add(     "-     ");  }  else  if  (arg.startsWith(     "-     "))  {      [BUGGY]  String  option  =  Util.stripLeadingHyphens(arg  +  1,  arg);  [BUGGY]        if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  option  =  Util.stripLeadingHyphens(arg  +  1,  arg);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String    option    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	53	None	replace
