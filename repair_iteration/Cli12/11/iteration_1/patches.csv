bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg  +  2);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	compilable	  [FE]  AssertionFailedError  	21	9	replace
2	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  2);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  2);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	compilable	  [FE]  AssertionFailedError  	21	9	replace
3	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.length  +  1);  [CE]  cannot  find  symbol  length  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.length  +  1);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.length  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  cannot  find  symbol  length	21	None	replace
4	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
5	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [FE]  UnrecognizedOptionException  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg.substring(0,  2));	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	compilable	  [FE]  UnrecognizedOptionException  	21	4	replace
6	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0]);  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[0]);	      arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	4	None	replace
7	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  1);  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i]  +  1);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i]  +  1);	      arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	4	None	replace
8	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[1]);  [CE]  cannot  find  symbol  opt  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[1]);	      arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  opt	4	None	replace
9	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1);	      TokenBuffer    tokens    =    new    TokenBuffer(arg.length());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
10	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  2);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  2);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  2);	      TokenBuffer    tokens    =    new    TokenBuffer(arg.length());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
11	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1);	      TokenBuffer    tokens    =    new    TokenBuffer(arg.length());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
12	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  arguments);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	9	None	replace
13	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	9	None	replace
14	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  arguments,  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  arguments,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	9	None	replace
15	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i,  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	9	None	replace
16	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]    MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        tokens.add(arg);    tokens.add(arg);	  	compilable	  [FE]  MissingArgumentException  	15	11	add
17	[BUG]  [BUGGY]      tokens.add(arg);  tokens.add(arg);  [FE]  MissingArgumentException  [FE]    MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    tokens.add(arg);	  	compilable	  [FE]  MissingArgumentException  	15	11	add
18	[BUG]  [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]      MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
19	[BUG]  [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [CE]  'else'  without  'if'  [FE]        MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  tokens[i]  =  Util.stripLeadingHyphens(arg);  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
20	[BUG]  [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arguments[i]);  }  [CE]  'else'  without  'if'  [FE]          MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arguments[i]);  }  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arguments[i]);  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
21	[BUG]  [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg,  i);  }  [CE]  'else'  without  'if'  [FE]            MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg,  i);  }  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    if(!stopAtNonOption)  {  tokens.add(arg);  }  else  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  tokens[i]  =  Util.stripLeadingHyphens(arg,  i);  }	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
22	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- "  +  i);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  arg.split( "- "  +  i);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- "  +  i);	      String[]    arguments    =    arg.split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
23	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ",  2);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  arg.split( "- ",  2);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ",  2);	      String[]    arguments    =    arg.split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
24	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ")+  1;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  arg.split( "- ")+  1;  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ")+  1;	      String[]    arguments    =    arg.split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[0]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ComparisonFailure  	12	4	replace
26	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[0]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[0]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ComparisonFailure  	12	4	replace
27	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	12	None	replace
28	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	8	replace
29	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[1]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[1]);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	8	replace
30	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i],  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	12	None	replace
31	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);	      arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	2	None	replace
32	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg  +  1);	      arg    =    Util.stripLeadingHyphens(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	2	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	3	14	add
34	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]);	  	compilable	  [FE]  AssertionFailedError  	3	14	add
35	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  int  arg  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  int  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arguments[i]);    int  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	3	None	add
36	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  String  arg  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  String  arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arguments[i]);    String  arg  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	3	None	add
37	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i]));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i]));	  	non-compiled	[CE]  ';'  expected	3	None	add
38	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
39	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  options);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  options);	  String    opt    =    Util.stripLeadingHyphens(options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
40	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  arguments);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  arguments);	  String    opt    =    Util.stripLeadingHyphens(options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
41	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  options);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  options);	  String    opt    =    Util.stripLeadingHyphens(options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
42	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    1;    String  opt  =  Util.stripLeadingHyphens(arg)+  1;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	23	None	add
43	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  String  option  =  Util.stripLeadingHyphens(arg)+  1;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  String  option  =  Util.stripLeadingHyphens(arg)+  1;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    1;    String  option  =  Util.stripLeadingHyphens(arg)+  1;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	23	None	add
44	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg)+    1;    String  opt  =  Util.stripLeadingHyphens(arg)+  2;	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	23	None	add
45	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ");  tokens.add( "--   ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        tokens.add(   "--   ");    tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	13	13	add
46	[BUG]  [BUGGY]      tokens.add(   "--   ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ");  tokens.add( "--   ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ");    tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	13	13	add
47	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ");  tokens.add( "-- ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        tokens.add(   "--   ");    tokens.add( "-- ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	13	14	add
48	[BUG]  [BUGGY]      tokens.add(   "--   ");  tokens.add( "-- ".equals(arg));  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ");  tokens.add( "-- ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ");    tokens.add( "-- ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	13	14	add
49	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        tokens.add(   "-   ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	5	13	add
50	[BUG]  [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "-   ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	5	13	add
51	[BUG]  [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   "));  [CE]  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   "));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "-   ");    tokens.add( "-   "));	  	non-compiled	[CE]  	5	None	add
52	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String  opt  =  Util.stripLeadingHyphens(arg  +  1);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	20	None	add
53	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  option  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  option  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String  option  =  Util.stripLeadingHyphens(arg  +  1);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	20	None	add
54	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  opt  =  Util.stripLeadingHyphens(arg  +  1));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  opt  =  Util.stripLeadingHyphens(arg  +  1));  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String  opt  =  Util.stripLeadingHyphens(arg  +  1));	  	non-compiled	[CE]  ';'  expected	20	None	add
55	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	17	14	add
56	[BUG]  [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--   ".equals(arg));  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--   ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ".equals(arg));    tokens.add( "--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	17	14	add
57	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        tokens.add(   "--   ".equals(arg));    tokens.add( ",--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	17	14	add
58	[BUG]  [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( ",--   ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ".equals(arg));    tokens.add( ",--   ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	17	14	add
59	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--. ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        tokens.add(   "--   ".equals(arg));    tokens.add( "--. ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	17	14	add
60	[BUG]  [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--. ".equals(arg));  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--. ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ".equals(arg));    tokens.add( "--. ".equals(arg));	  	compilable	  [FE]  ArrayStoreException  	17	14	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	1	14	add
62	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	1	14	add
63	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(Util.stripLeadingHyphens(arg);	  	non-compiled	[CE]  ')'  expected	1	None	add
64	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));	  	compilable	  [FE]  NullPointerException  	1	14	add
65	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg.substring(0,  2)));	  	compilable	  [FE]  NullPointerException  	1	14	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");	  	compilable	  [FE]  AssertionFailedError  	1	14	add
67	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add( "- ");	  	compilable	  [FE]  AssertionFailedError  	1	14	add
68	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));	  	compilable	  [FE]  ArrayStoreException  	1	14	add
69	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [FE]  ArrayStoreException  [FE]            AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(options.getOption(arg));	  	compilable	  [FE]  ArrayStoreException  	1	14	add
70	[BUG]  [BUGGY]  tokens.add( "- ".equals(arg));  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "- ".equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "- ".equals(arg));	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	6	None	replace
71	[BUG]  [BUGGY]  tokens.add( "-n ");  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "-n ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-n ");	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	6	None	replace
72	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	10	None	replace
73	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  i);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  i);	  String    opt    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	10	None	replace
74	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length());  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length());  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length());	  String    opt    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	10	None	replace
75	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length);  [CE]  cannot  find  symbol  length  [FE]                ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg.length);	  String    opt    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	25	14	add
77	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	compilable	  [FE]  AssertionFailedError  	25	14	add
78	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    String  arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);	  	non-compiled	[CE]  variable  arg  is  already  defined  in  method  flatten(Options,String[],boolean)	25	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	25	14	add
80	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);	  	compilable	  [FE]  AssertionFailedError  	25	14	add
81	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(arg);  [CE]  cannot  find  symbol  tos  [FE]          AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg);  tos.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg);  tos.add(arg);	  	non-compiled	[CE]  cannot  find  symbol  tos	25	None	add
82	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripLeadingHyphens(arg;  tokens.add(arg);	  	non-compiled	[CE]  ')'  expected	25	None	add
83	[BUG]  [BUGGY]  tokens.add( "-- "  +  arg.substring(1));  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "-- "  +  arg.substring(1));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- "  +  arg.substring(1));	      tokens.add(   "--   ");    	non-compiled	[CE]  cannot  find  symbol  opt	14	None	replace
84	[BUG]  [BUGGY]  tokens.add( "-- "  +  arg.substring(2));  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "-- "  +  arg.substring(2));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- "  +  arg.substring(2));	      tokens.add(   "--   ");    	non-compiled	[CE]  cannot  find  symbol  opt	14	None	replace
85	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  stopAtNonOption);	      String[]    arguments    =    options.get(arg.substring(0,    2));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
86	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  1));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  1));	      String[]    arguments    =    options.get(arg.substring(0,    2));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
87	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  i);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  i);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  i);	      String[]    arguments    =    options.get(arg.substring(0,    2));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
88	[BUG]  [BUGGY]  tokens.add( "-- ").equals(arg));  [CE]  [FE]    ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "-- ").equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ").equals(arg));	      tokens.add(   "--   ".equals(arg));    	non-compiled	[CE]  	18	None	replace
89	[BUG]  [BUGGY]  arg  =  Util.stripFloat(arg);  tokens.add(arg);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripFloat(arg);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripFloat(arg);  tokens.add(arg);	      arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
90	[BUG]  [BUGGY]  tokens.add(arg.substring(2));  [CE]  cannot  find  symbol  opt  [FE]    MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add(arg.substring(2));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(2));	      tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	16	None	replace
91	[BUG]  [BUGGY]  tokens.add(arg.substring(1));  [CE]  cannot  find  symbol  opt  [FE]      MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add(arg.substring(1));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg.substring(1));	      tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	16	None	replace
92	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  opt  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
93	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add(arg);  }	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
94	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  option  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  option  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  option  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
95	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add( "- ");  }  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add( "- ");  }  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  tokens.add( "- ");  }	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg)+  2;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    	compilable	  [FE]  AssertionFailedError  	24	9	replace
97	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  2;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)+  2;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    	compilable	  [FE]  AssertionFailedError  	24	9	replace
98	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)/  1;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)/  1;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	24	None	replace
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg)+  3;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    	compilable	  [FE]  AssertionFailedError  	24	9	replace
100	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  3;  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)+  3;	  String    opt    =    Util.stripLeadingHyphens(arg)+    1;    	compilable	  [FE]  AssertionFailedError  	24	9	replace
101	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripRightHyphens(arg);  tokens.add(arg);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  arg  =  Util.stripRightHyphens(arg);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    arg  =  Util.stripRightHyphens(arg);  tokens.add(arg);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
102	[BUG]  [BUGGY]  tokens.add( "--? ");  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "--? ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "--? ");	      tokens.add(   "--   ");    	non-compiled	[CE]  cannot  find  symbol  opt	14	None	replace
103	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments,  arg);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments,  arg);	  String    opt    =    Util.stripLeadingHyphens(arguments);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	10	None	replace
104	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "-? ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  arg.split( "-? ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "-? ");	      String[]    arguments    =    arg.split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
105	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  options  =  Util.stripLeadingHyphens(arg  +  1);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  String  options  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arg    +    1);    String  options  =  Util.stripLeadingHyphens(arg  +  1);	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	20	None	add
106	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLeadingHyphens(arg;  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLeadingHyphens(arg;	  	non-compiled	[CE]  ')'  expected	1	None	add
107	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLaadingHyphens(arg);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripLaadingHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripLaadingHyphens(arg);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
108	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRadingHyphens(arg);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRadingHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripRadingHyphens(arg);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
109	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRightHyphens(arg);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arg);  arg  =  Util.stripRightHyphens(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arg);    arg  =  Util.stripRightHyphens(arg);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
110	[BUG]  [BUGGY]  tokens.add( "-: ");  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "-: ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-: ");	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	6	None	replace
111	[BUG]  [BUGGY]  tokens.add( "-? ");  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "-? ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-? ");	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	6	None	replace
112	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopsAtNonOption);  [CE]  cannot  find  symbol  stopsAtNonOption  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options,  stopsAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options,  stopsAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(options);    	non-compiled	[CE]  cannot  find  symbol  stopsAtNonOption	22	None	replace
113	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt,  options);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(opt,  options);	  String    opt    =    Util.stripLeadingHyphens(options);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
114	[BUG]  [BUGGY]      tokens.add(   "--   ");  tokens.add( "-- ".);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ");  tokens.add( "-- ".);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ");    tokens.add( "-- ".);	  	non-compiled	[CE]  <identifier>  expected	13	None	add
115	[BUG]  [BUGGY]      tokens.add(   "--   ");  tokens.add( "--   "));  [CE]  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ");  tokens.add( "--   "));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ");    tokens.add( "--   "));	  	non-compiled	[CE]  	13	None	add
116	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption,  options);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	9	None	replace
117	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  options,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg,    stopAtNonOption);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	9	None	replace
118	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  argument  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  argument  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  argument  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
119	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  options  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  options  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  options  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
120	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  old  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  old  =  Util.stripLeadingHyphens(arguments[i]);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
121	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	21	None	replace
122	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  i  +  1);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	21	None	replace
123	[BUG]  [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i].);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      arg  =  Util.stripLeadingHyphens(arguments[i]);  arg  =  Util.stripLeadingHyphens(arguments[i].);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        arg    =    Util.stripLeadingHyphens(arguments[i]);    arg  =  Util.stripLeadingHyphens(arguments[i].);	  	non-compiled	[CE]  <identifier>  expected	3	None	add
124	[BUG]  [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]    MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    TokenBuffer  tokens  =  new  TokenBuffer(arg,  stopAtNonOption);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
125	[BUG]  [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length());  [CE]  cannot  find  symbol  [FE]      MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length());  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    TokenBuffer  tokens  =  new  TokenBuffer(arg.length());	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
126	[BUG]  [BUGGY]      tokens.add(arg);  tokens  =(String[])options.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]        MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  tokens  =(String[])options.clone();  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    tokens  =(String[])options.clone();	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	15	None	add
127	[BUG]  [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg);  [CE]  cannot  find  symbol  [FE]          MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    TokenBuffer  tokens  =  new  TokenBuffer(arg);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
128	[BUG]  [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--  arg.equals(arg));  [CE]  unclosed  string  literal  [FE]    ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(   "--   ".equals(arg));  tokens.add( "--  arg.equals(arg));  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(   "--   ".equals(arg));    tokens.add( "--  arg.equals(arg));	  	non-compiled	[CE]  unclosed  string  literal	17	None	add
129	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  tokens.add(arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  tokens.add(arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  tokens.add(arg);	      arg    =    Util.stripLeadingHyphens(arg);    tokens.add(arg);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	26	None	replace
130	[BUG]  [BUGGY]  tokens.add( "-- ".equals(arg)&&!stopAtNonOption);  [CE]  cannot  find  symbol  opt  [FE]    ArrayStoreException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add( "-- ".equals(arg)&&!stopAtNonOption);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add( "-- ".equals(arg)&&!stopAtNonOption);	      tokens.add(   "--   ".equals(arg));    	non-compiled	[CE]  cannot  find  symbol  opt	18	None	replace
131	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  arg.length());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  arg.length());  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  arg.length());	      TokenBuffer    tokens    =    new    TokenBuffer(arg.length());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
132	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  2);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  2);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arg.length(),  2);	      TokenBuffer    tokens    =    new    TokenBuffer(arg.length());    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
133	[BUG]  [BUGGY]  tokens.add('-');  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add('-');  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add('-');	      tokens.add(   "--   ");    	non-compiled	[CE]  cannot  find  symbol  opt	14	None	replace
134	[BUG]  [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  arg  =  Util.stripLeadingHyphens(arguments[i],  arg);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	arg  =  Util.stripLeadingHyphens(arguments[i],  arg);	      arg    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	4	None	replace
135	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i]),  stopAtNonOption);	  String    opt    =    Util.stripLeadingHyphens(arguments[i]);    	non-compiled	[CE]  ';'  expected	12	None	replace
136	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  opt  =  Util.stripLeadingHyphens(arguments[i]);  if(options.hasOption(opt))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	add
137	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  [CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String    opt    =    Util.stripLeadingHyphens(arguments[i]);    String  opt  =  Util.stripLeadingHyphens(arguments[i]);  tokens.add(arg);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
138	[BUG]  [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length());  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length());  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  options.get(arg.substring(0,  2),  arg.length());	      String[]    arguments    =    options.get(arg.substring(0,    2));    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
139	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i);  [BUGGY]      if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1,  i);	  String    opt    =    Util.stripLeadingHyphens(arg    +    1);    	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	21	None	replace
140	[BUG]  [BUGGY]  tokens.add(arg  +  1);  [CE]  cannot  find  symbol  opt  [FE]    MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  tokens.add(arg  +  1);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	tokens.add(arg  +  1);	      tokens.add(arg);    	non-compiled	[CE]  cannot  find  symbol  opt	16	None	replace
141	[BUG]  [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1);  [CE]  cannot  find  symbol  [FE]    MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
142	[BUG]  [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1);  [CE]  cannot  find  symbol  [FE]      MissingArgumentException    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]      tokens.add(arg);  TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1);  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	        tokens.add(arg);    TokenBuffer  tokens  =  new  TokenBuffer(arg.length()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
143	[BUG]  [BUGGY]  String[]  arguments  =  arg.split( "- ").split( "- ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {  eatTheRest  =  true;  tokens.add(   "--   ");  }  else  if  (   "-   ".equals(arg))  {  tokens.add(   "-   ");  }  else  if  (arg.startsWith(   "-   "))  {    [BUGGY]  String[]  arguments  =  arg.split( "- ").split( "- ");  [BUGGY]    String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String[]  arguments  =  arg.split( "- ").split( "- ");	      String[]    arguments    =    arg.split(   "-   ");    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
