bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	    arg  =  Util.stripLeadingHyphens(arg);		compilable	  [FE]  AssertionFailedError  	23	14	add
2	[BUG]  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    arg  =  Util.stripLeadingHyphens(arg);		compilable	  [FE]  AssertionFailedError  	23	14	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	    arg  =  Util.stripLeadingHyphens(arguments[i]);		compilable	  [FE]  AssertionFailedError  	23	14	add
4	[BUG]  [BUGGY]    arg  =  Util.stripLeadingHyphens(arguments[i]);  [FE]  AssertionFailedError  [FE]      ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    arg  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    arg  =  Util.stripLeadingHyphens(arguments[i]);		compilable	  [FE]  AssertionFailedError  	23	14	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add( "- ");  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	    tokens.add( "- ");		compilable	  [FE]  AssertionFailedError  	23	11	add
6	[BUG]  [BUGGY]    tokens.add( "- ");  [FE]  AssertionFailedError  [FE]        ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add( "- ");  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    tokens.add( "- ");		compilable	  [FE]  AssertionFailedError  	23	11	add
7	[BUG]  [BUGGY]    String[]  arguments  =  arg.split( "- ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    String[]  arguments  =  arg.split( "- ");  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    String[]  arguments  =  arg.split( "- ");		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	23	None	add
8	[BUG]  [BUGGY]    String[]  arguments  =  options.get(arg.substring(0,  2));  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    String[]  arguments  =  options.get(arg.substring(0,  2));  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    String[]  arguments  =  options.get(arg.substring(0,  2));		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	23	None	add
9	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg,  stopAtNonOption);	String  opt  =  Util.stripLeadingHyphens(arg);  	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
10	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments);  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments);	String  opt  =  Util.stripLeadingHyphens(arg);  	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arguments[i]);	String  opt  =  Util.stripLeadingHyphens(arg);  	compilable	  [FE]  ComparisonFailure  	22	3	replace
12	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arguments[i]);  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arguments[i]);	String  opt  =  Util.stripLeadingHyphens(arg);  	compilable	  [FE]  ComparisonFailure  	22	3	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add( "-- ");  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	    tokens.add( "-- ");		compilable	  [FE]  AssertionFailedError  	23	14	add
14	[BUG]  [BUGGY]    tokens.add( "-- ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add( "-- ");  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    tokens.add( "-- ");		compilable	  [FE]  AssertionFailedError  	23	14	add
15	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]      ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add(arg);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	    tokens.add(arg);		compilable	  [FE]  MissingArgumentException  	23	11	add
16	[BUG]  [BUGGY]    tokens.add(arg);  [FE]  MissingArgumentException  [FE]      ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add(arg);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    tokens.add(arg);		compilable	  [FE]  MissingArgumentException  	23	11	add
17	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add( "-- ".equals(arg));  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	    tokens.add( "-- ".equals(arg));		compilable	  [FE]  ArrayStoreException  	23	14	add
18	[BUG]  [BUGGY]    tokens.add( "-- ".equals(arg));  [FE]  ArrayStoreException  [FE]        ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    tokens.add( "-- ".equals(arg));  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    tokens.add( "-- ".equals(arg));		compilable	  [FE]  ArrayStoreException  	23	14	add
19	[BUG]  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(arg.length());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(arg.length());  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    TokenBuffer  tokens  =  new  TokenBuffer(arg.length());		non-compiled	[CE]  cannot  find  symbol	23	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg  +  1);	String  opt  =  Util.stripLeadingHyphens(arg);  	compilable	  [FE]  AssertionFailedError  	22	9	replace
21	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg  +  1);  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg  +  1);	String  opt  =  Util.stripLeadingHyphens(arg);  	compilable	  [FE]  AssertionFailedError  	22	9	replace
22	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options);  [CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(options);  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(options);	String  opt  =  Util.stripLeadingHyphens(arg);  	non-compiled	[CE]  method  stripLeadingHyphens  in  class  Util  cannot  be  applied  to  given  types;	22	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	String  opt  =  Util.stripLeadingHyphens(arg)+  1;	String  opt  =  Util.stripLeadingHyphens(arg);  	compilable	  [FE]  AssertionFailedError  	22	9	replace
24	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg)+  1;  [BUGGY]    if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	String  opt  =  Util.stripLeadingHyphens(arg)+  1;	String  opt  =  Util.stripLeadingHyphens(arg);  	compilable	  [FE]  AssertionFailedError  	22	9	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	add	    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);		compilable	  [FE]  AssertionFailedError  	23	14	add
26	[BUG]  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  {  eatTheRest  =  true;  tokens.add( "-- ");  }  else  if  ( "- ".equals(arg))  {  tokens.add( "- ");  }  else  if  (arg.startsWith( "- "))  {  [BUGGY]    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(arg);  if  (options.hasOption(opt))  {  tokens.add(arg);  }  else  {  if  (options.hasOption(arg.substring(0,  2)))  {  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	73	73	3	replace	    arg  =  Util.stripLeadingHyphens(arg);  tokens.add(arg);		compilable	  [FE]  AssertionFailedError  	23	14	add
