bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  tokens  =  new  ArrayList();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    List  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	add
2	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  ComparisonFailure>  tokens  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  ComparisonFailure>  tokens  =  new  ArrayList();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    List  <  ComparisonFailure>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
3	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    ArrayList  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	add
4	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    List  <  Comparable>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	add
5	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt,  stopAtNonOption);	      String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	replace
6	[BUG]  [BUGGY]  String[]  arguments  =  options.get(options.length);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.get(options.length);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(options.length);	      String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	replace
7	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt  +  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.get(opt  +  1);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt  +  1);	      String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	replace
8	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  String  opt  =  options.getOption(arguments);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments);	      String    opt    =    options.getOption(opt);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	13	None	replace
9	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[i]);  [CE]  cannot  find  symbol  i  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  String  opt  =  options.getOption(arguments[i]);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[i]);	      String    opt    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
10	[BUG]  [BUGGY]  String  opt  =  options.getOption(opt,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  String  opt  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(opt,  stopAtNonOption);	      String    opt    =    options.getOption(opt);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	13	None	replace
11	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[0]);  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  String  opt  =  options.getOption(arguments[0]);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[0]);	      String    opt    =    options.getOption(opt);    	non-compiled	[CE]  incompatible  types	13	None	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	2	3	replace
13	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	2	3	replace
14	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	2	None	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	2	3	replace
16	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	2	3	replace
17	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	add
18	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	add
19	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	add
20	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	add
21	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	      List    <    String>    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	1	3	replace
23	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	      List    <    String>    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	1	3	replace
24	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  LinkedList  <  String>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  LinkedList  <  String>();  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  LinkedList  <  String>();	      List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
25	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt);  [CE]  cannot  find  symbol  opt  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  cannot  find  symbol  opt	17	None	replace
26	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(stopAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	12	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(arguments);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	12	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(stackAtNonOption);  [CE]  cannot  find  symbol  stackAtNonOption  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(stackAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(stackAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol  stackAtNonOption	12	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokens);  [CE]  cannot  find  symbol  tokens  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(tokens);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(tokens);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol  tokens	12	None	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  tokens  =  new  ArrayList(arguments.length);	  ArrayList    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	9	3	replace
31	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length);	  ArrayList    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	9	3	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	9	3	replace
33	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	9	3	replace
34	[BUG]  [BUGGY]  String[]  arguments  =  options.getArguments();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.getArguments();  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getArguments();	      String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	replace
35	[BUG]  [BUGGY]  String[]  arguments  =  options.getValues();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.getValues();  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getValues();	      String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	replace
36	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.getOptions(opt);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptions(opt);	      String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	replace
37	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments,  opt);  [CE]  cannot  find  symbol  opt  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments,  opt);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments,  opt);	  List    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  cannot  find  symbol  opt	11	None	replace
38	[BUG]  [BUGGY]  List  arguments  =  new  ArrayList(arguments);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  arguments  =  new  ArrayList(arguments);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  arguments  =  new  ArrayList(arguments);	  List    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	replace
39	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    List  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	add
40	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
41	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
42	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    List  <  String>  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	add
43	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	add
44	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  stopAtNonOption);	      Option    options    =    options.getOption(opt);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	14	None	replace
45	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments[i]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(arguments[i]);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(arguments[i]);	      Option    options    =    options.getOption(opt);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	14	None	replace
46	[BUG]  [BUGGY]  Option  options  =  options.getOption(stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(stopAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(stopAtNonOption);	      Option    options    =    options.getOption(opt);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	14	None	replace
47	[BUG]  [BUGGY]  Option  options  =  options.getOption(options[i]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(options[i]);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(options[i]);	      Option    options    =    options.getOption(opt);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	14	None	replace
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  String>  tokens  =  new  ArrayList();	      List    <    String>    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	5	3	replace
49	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList();	      List    <    String>    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	5	3	replace
50	[BUG]  [BUGGY]  List  tokens  =  options.sort(arguments);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  options.sort(arguments);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  options.sort(arguments);	      Arrays.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
51	[BUG]  [BUGGY]  Arrays.sort(tokens);  [CE]  cannot  find  symbol  tokens  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Arrays.sort(tokens);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(tokens);	      Arrays.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  tokens	15	None	replace
52	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption);  [CE]  cannot  find  symbol  Arrays  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Arrays.sort(arguments,  stopAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(arguments,  stopAtNonOption);	      Arrays.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  Arrays	15	None	replace
53	[BUG]  [BUGGY]  List.sort(arguments);  [CE]  method  sort  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List.sort(arguments);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List.sort(arguments);	      Arrays.sort(arguments);    	non-compiled	[CE]  method  sort  in  interface  List<E>  cannot  be  applied  to  given  types;	15	None	replace
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);	      List    <    String>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	3	3	replace
55	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);	      List    <    String>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	3	3	replace
56	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);	      List    <    String>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	3	None	replace
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  ArrayList(arguments.length  +  1);	  List    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	7	3	replace
58	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length  +  1);	  List    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	7	3	replace
59	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length,  arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	7	None	replace
60	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean)	17	None	replace
61	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Collections.sort(tokens);  [CE]  cannot  find  symbol  Collections  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Collections.sort(tokens);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    Collections.sort(tokens);	  	non-compiled	[CE]  cannot  find  symbol  Collections	8	None	add
62	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  ComparisonFailure  >=  false;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  ComparisonFailure  >=  false;  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    List  <  ComparisonFailure  >=  false;	  	non-compiled	[CE]  not  a  statement	8	None	add
63	[BUG]  [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ");  [CE]  cannot  find  symbol  tokens  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ");  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption( "stopAtNonOption ");	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol  tokens	12	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	12	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(block);  [CE]  cannot  find  symbol  block  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(block);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(block);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol  block	12	None	replace
66	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ]);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[options.size()  ]);	      String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	replace
67	[BUG]  [BUGGY]  Option  options  =  options.getOption(options);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(options);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(options);	      Option    options    =    options.getOption(opt);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	14	None	replace
68	[BUG]  [BUGGY]  Option  options  =  options.getOption(option);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(option);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(option);	      Option    options    =    options.getOption(opt);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	14	None	replace
69	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
70	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  not  a  statement	18	None	add
71	[BUG]  [BUGGY]  Arrays.sort(this.arguments);  [CE]  cannot  find  symbol  arguments  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Arrays.sort(this.arguments);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(this.arguments);	      Arrays.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  arguments	15	None	replace
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  tokens  =  new  ArrayList  <  String>();	  ArrayList    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	9	3	replace
73	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList  <  String>();	  ArrayList    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	9	3	replace
74	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  java.util.ArrayList();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  java.util.ArrayList();	  List    tokens    =    new    LinkedList();    	compilable	  [FE]  ComparisonFailure  	10	3	replace
75	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  java.util.ArrayList();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  java.util.ArrayList();	  List    tokens    =    new    LinkedList();    	compilable	  [FE]  ComparisonFailure  	10	3	replace
76	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  ArrayList  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  ArrayList  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    ArrayList  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	add
77	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
78	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
79	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	2	3	replace
80	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	      List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	2	3	replace
81	[BUG]  [BUGGY]  String  opt  =  options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  String  opt  =  options.getOption(options);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(options);	      String    opt    =    options.getOption(opt);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	13	None	replace
82	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments);  [CE]  no  suitable  constructor  found  for  ArrayList(String[])  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments);	  List    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[])	11	None	replace
83	[BUG]  [BUGGY]  String  opt  =  options.getOption(opt,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  String  opt  =  options.getOption(opt,  null);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(opt,  null);	      String    opt    =    options.getOption(opt);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	13	None	replace
84	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	add
85	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  LinkedList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  LinkedList  <  String>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  LinkedList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	add
86	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);	      String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	replace
87	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt)+  1;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  String[]  arguments  =  options.get(opt)+  1;  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt)+  1;	      String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	replace
88	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  null);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(opt,  null);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  null);	      Option    options    =    options.getOption(opt);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	14	None	replace
89	[BUG]  [BUGGY]  Arrays.sort(this.tokens);  [CE]  cannot  find  symbol  tokens  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Arrays.sort(this.tokens);  [BUGGY]    List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(this.tokens);	      Arrays.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  tokens	15	None	replace
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(8);	  List    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	19	3	replace
91	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(8);	  List    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	19	3	replace
92	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	add
93	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    List  <  String>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	add
94	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList();    List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	add
