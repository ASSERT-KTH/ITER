bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    List  <  String>  tokens  =  new  ArrayList  <  String>();		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	add
2	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	add
3	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    List  <  String>  tokens  =  new  ArrayList(arguments.length);		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	add
4	[BUG]  [BUGGY]    String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]    String[]  arguments  =  options.get(opt);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    String[]  arguments  =  options.get(opt);		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	add
5	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  String>  tokens  =  new  ArrayList();  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    List  <  String>  tokens  =  new  ArrayList();		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  ArrayList(arguments.length);	List  tokens  =  new  ArrayList();  	compilable	  [FE]  ComparisonFailure  	8	3	replace
7	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length);	List  tokens  =  new  ArrayList();  	compilable	  [FE]  ComparisonFailure  	8	3	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  tokens  =  new  ArrayList();	List  tokens  =  new  ArrayList();  	compilable	  [FE]  ComparisonFailure  	8	3	replace
9	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList();	List  tokens  =  new  ArrayList();  	compilable	  [FE]  ComparisonFailure  	8	3	replace
10	[BUG]  [BUGGY]  List  tokens  =  new  LinkedList();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]  List  tokens  =  new  LinkedList();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  LinkedList();	List  tokens  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol	8	None	replace
11	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments);  [CE]  no  suitable  constructor  found  for  ArrayList(String[])  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  List  tokens  =  new  ArrayList(arguments);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments);	List  tokens  =  new  ArrayList();  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[])	8	None	replace
12	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt);  [CE]  cannot  find  symbol  opt  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    Option  option  =  options.getOption(opt);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    Option  option  =  options.getOption(opt);		non-compiled	[CE]  cannot  find  symbol  opt	9	None	add
13	[BUG]  [BUGGY]    String  opt  =  options.getOption(opt);  [CE]  incompatible  types  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    String  opt  =  options.getOption(opt);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    String  opt  =  options.getOption(opt);		non-compiled	[CE]  incompatible  types	9	None	add
14	[BUG]  [BUGGY]    Option  options  =  options.getOption(opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    Option  options  =  options.getOption(opt);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    Option  options  =  options.getOption(opt);		non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	add
15	[BUG]  [BUGGY]    Arrays.sort(arguments);  [CE]  cannot  find  symbol  Arrays  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]    Arrays.sort(arguments);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    Arrays.sort(arguments);		non-compiled	[CE]  cannot  find  symbol  Arrays	9	None	add
16	[BUG]  [BUGGY]    String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure  [CONTEXT]  {  [BUGGY]    String[]  arguments  =  options.getOptions();  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    String[]  arguments  =  options.getOptions();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	add
17	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [CE]  no  suitable  constructor  found  for  ArrayList(String[])  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [BUGGY]  List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments);		non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[])	9	None	add
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  ArrayList  <  String>();	List  tokens  =  new  ArrayList();  	compilable	  [FE]  ComparisonFailure  	8	3	replace
19	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList  <  String>();	List  tokens  =  new  ArrayList();  	compilable	  [FE]  ComparisonFailure  	8	3	replace
