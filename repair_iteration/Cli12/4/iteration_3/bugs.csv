bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
2	[BUG]  [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  Comparable>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
4	[BUG]  [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  Comparable>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
6	[BUG]  [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
8	[BUG]  [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	43	3	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(arguments,  stopAtNonOption);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	27	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0],  arguments[1]);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(arguments[0],  arguments[1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(arguments[0],  arguments[1]);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	27	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[i]);  [CE]  cannot  find  symbol  i  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(arguments[i]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(arguments[i]);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  i	27	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[i],  arguments);  [CE]  cannot  find  symbol  i  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(arguments[i],  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(arguments[i],  arguments);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  i	27	None	replace
13	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  tokens  =  new  java.util.ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  tokens  =  new  java.util.ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    List  tokens  =  new  java.util.ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
14	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  java.util.ArrayList  tokens  =  new  java.util.ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  java.util.ArrayList  tokens  =  new  java.util.ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    java.util.ArrayList  tokens  =  new  java.util.ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
15	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  ArrayList  tokens  =  new  java.util.ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  ArrayList  tokens  =  new  java.util.ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    ArrayList  tokens  =  new  java.util.ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
16	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  ArrayList  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  ArrayList  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    ArrayList  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
17	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  String[]  arguments  =  options.get(opt);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    String[]  arguments  =  options.get(opt);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
18	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(opt,  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getOptions(opt,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptions(opt,  stopAtNonOption);	  String[]    arguments    =    options.getOptions(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
19	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(options,  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getOptions(options,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptions(options,  stopAtNonOption);	  String[]    arguments    =    options.getOptions(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
20	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(options);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                            ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getOptions(options);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptions(options);	  String[]    arguments    =    options.getOptions(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
21	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getOptions(stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptions(stopAtNonOption);	  String[]    arguments    =    options.getOptions(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	13	3	replace
23	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	13	3	replace
24	[BUG]  [BUGGY]  Arrays.sort(parameters);  [CE]  cannot  find  symbol  parameters  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(parameters);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(parameters);	  Arrays.sort(tokens);    	non-compiled	[CE]  cannot  find  symbol  parameters	51	None	replace
25	[BUG]  [BUGGY]  Arrays.sort(params);  [CE]  cannot  find  symbol  params  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(params);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(params);	  Arrays.sort(tokens);    	non-compiled	[CE]  cannot  find  symbol  params	51	None	replace
26	[BUG]  [BUGGY]  Arrays.sort(options);  [CE]  cannot  find  symbol  Arrays  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(options);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(options);	  Arrays.sort(tokens);    	non-compiled	[CE]  cannot  find  symbol  Arrays	51	None	replace
27	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    2);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	add
28	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    2);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	add
29	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    2);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	add
30	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    2);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  3);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	add
31	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    2);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	add
32	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
33	[BUG]  [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
34	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  LinkedList  <  ComparisonFailure>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
35	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(8);    List  <  String>  tokens  =  new  ArrayList  <  String>(8);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	90	None	add
36	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(8);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	90	None	add
37	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  List  <  String>  tokens  =  new  ArrayList  <  String>(7);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  List  <  String>  tokens  =  new  ArrayList  <  String>(7);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(8);    List  <  String>  tokens  =  new  ArrayList  <  String>(7);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	90	None	add
38	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  tokens  =  new  ArrayList  <  String>(8);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(8);    tokens  =  new  ArrayList  <  String>(8);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	90	None	add
39	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  List  <  String>  tokens  =  new  ArrayList  <  String>(6);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  List  <  String>  tokens  =  new  ArrayList  <  String>(6);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(8);    List  <  String>  tokens  =  new  ArrayList  <  String>(6);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	90	None	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    String>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	42	3	replace
41	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    String>    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	42	3	replace
42	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
43	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    List  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	30	None	add
44	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
45	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  ArrayList  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  ArrayList  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    ArrayList  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	30	None	add
46	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    List  <  Comparable>  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	30	None	add
47	[BUG]  [BUGGY]  String[]  arguments  =  option.getArguments();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  option.getArguments();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  option.getArguments();	  String[]    arguments    =    options.getArguments();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	34	None	replace
48	[BUG]  [BUGGY]  String[]  arguments  =  opt.getArguments();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  opt.getArguments();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  opt.getArguments();	  String[]    arguments    =    options.getArguments();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	34	None	replace
49	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	add
50	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	add
51	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    List  <  Comparable>  tokens  =  new  ArrayList  <  ComparisonFailure>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	add
52	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  Comparable>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  Comparable>();	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
53	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[0],  arguments[1]);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[0],  arguments[1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[0],  arguments[1]);	  String    opt    =    options.getOption(arguments[0]);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
54	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[0],  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[0],  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[0],  stopAtNonOption);	  String    opt    =    options.getOption(arguments[0]);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
55	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[arguments.size()  +  1]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[arguments.size()  +  1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[arguments.size()  +  1]);	  String[]    arguments    =    options.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	86	None	replace
56	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[args.size()  ]);	  String[]    arguments    =    options.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	86	None	replace
57	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    String>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
58	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    String>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
59	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);	  List    tokens    =    new    ArrayList    <    String>();    List    <    String>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	80	3	replace
61	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	80	3	replace
62	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	80	None	replace
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(1);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
64	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(1);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(4);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(4);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
66	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(4);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(4);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(4);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(2);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(2);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
68	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(2);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(2);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(2);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
69	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption,  options);  [CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean,Options)  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption,  options);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption,  options);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    stopAtNonOption);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean,Options)	60	None	replace
70	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption,  opt);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption,  opt);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	60	None	replace
71	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt,  stopAtNonOption);  [CE]  cannot  find  symbol  opt  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt,  stopAtNonOption);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	60	None	replace
72	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  stopAtNonOption);  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  stopAtNonOption);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    stopAtNonOption);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	60	None	replace
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);	  List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	55	3	replace
74	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);	  List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	55	3	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  3);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList(arguments.length  +  3);	  List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	55	3	replace
76	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  3);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  3);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length  +  3);	  List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	55	3	replace
77	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  LinkedList();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  LinkedList();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  LinkedList();	  ArrayList    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
78	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments,  stopAtNonOption);	  String    opt    =    options.getOption(arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	8	None	replace
79	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[i],  arguments);  [CE]  cannot  find  symbol  i  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[i],  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[i],  arguments);	  String    opt    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
80	[BUG]  [BUGGY]  List.sort(tokens);  [CE]  cannot  find  symbol  tokens  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  List.sort(tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List.sort(tokens);	  List.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  tokens	53	None	replace
81	[BUG]  [BUGGY]  List.sort(tokens,  arguments);  [CE]  cannot  find  symbol  tokens  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List.sort(tokens,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List.sort(tokens,  arguments);	  List.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  tokens	53	None	replace
82	[BUG]  [BUGGY]  List.sort(arguments,  tokens);  [CE]  cannot  find  symbol  tokens  [FE]                            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List.sort(arguments,  tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List.sort(arguments,  tokens);	  List.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  tokens	53	None	replace
83	[BUG]  [BUGGY]  List.sort(arguments,  stopAtNonOption);  [CE]  method  sort  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List.sort(arguments,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List.sort(arguments,  stopAtNonOption);	  List.sort(arguments);    	non-compiled	[CE]  method  sort  in  interface  List<E>  cannot  be  applied  to  given  types;	53	None	replace
84	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    List  tokens  =  new  ArrayList(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	add
85	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length  +  1);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length  +  1);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
86	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length  +  1);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
87	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  tokens  =  new  ArrayList(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  tokens  =  new  ArrayList(arguments.length  +  2);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    List  tokens  =  new  ArrayList(arguments.length  +  2);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	add
88	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	add
89	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments,  stopAtNonOption);	  List    tokens    =    new    ArrayList(arguments,    opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean)	37	None	replace
90	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments,  StopAtNonOption);  [CE]  cannot  find  symbol  StopAtNonOption  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments,  StopAtNonOption);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments,  StopAtNonOption);	  List    tokens    =    new    ArrayList(arguments,    opt);    	non-compiled	[CE]  cannot  find  symbol  StopAtNonOption	37	None	replace
91	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments);  [CE]  no  suitable  constructor  found  for  ArrayList(int,String[])  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length,  arguments);	  List    tokens    =    new    ArrayList(arguments,    opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,String[])	37	None	replace
92	[BUG]  [BUGGY]  List  arguments  =  new  ArrayList(arguments,  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  arguments  =  new  ArrayList(arguments,  stopAtNonOption);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  arguments  =  new  ArrayList(arguments,  stopAtNonOption);	  List    tokens    =    new    ArrayList(arguments,    opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	37	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.getOption(args);  [CE]  cannot  find  symbol  args  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(args);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(args);	  Option    option    =    options.getOption(tokens);    	non-compiled	[CE]  cannot  find  symbol  args	29	None	replace
94	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
95	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(args.length);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(args.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(args.length);	  List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
96	[BUG]  [BUGGY]  List  tokens  =  options.sort(arguments,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  options.sort(arguments,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  options.sort(arguments,  stopAtNonOption);	  List    tokens    =    options.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
97	[BUG]  [BUGGY]  List  tokens  =  arguments.sort(options);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  arguments.sort(options);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  arguments.sort(options);	  List    tokens    =    options.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
98	[BUG]  [BUGGY]  List  tokens  =  options.sort(arguments[i]);  [CE]  cannot  find  symbol  i  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  options.sort(arguments[i]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  options.sort(arguments[i]);	  List    tokens    =    options.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  i	50	None	replace
99	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments,  opt);  [CE]  cannot  find  symbol  opt  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments,  opt);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments,  opt);	  List    <    String>    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  cannot  find  symbol  opt	82	None	replace
100	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[i].trim());  [CE]  cannot  find  symbol  i  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[i].trim());  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[i].trim());	  String    opt    =    options.getOption(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  i	9	None	replace
101	[BUG]  [BUGGY]  String  option  =  options.getOption(arguments[i]);  [CE]  cannot  find  symbol  i  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  option  =  options.getOption(arguments[i]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  option  =  options.getOption(arguments[i]);	  String    opt    =    options.getOption(arguments[i]);    	non-compiled	[CE]  cannot  find  symbol  i	9	None	replace
102	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    ComparisonFailure>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
103	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    ComparisonFailure>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
104	[BUG]  [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    ComparisonFailure>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
105	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
106	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
107	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    List  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
108	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    String[]  arguments  =(String[])options.toArray(new  String[arguments.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
109	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.length  +  1]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.length  +  1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    String[]  arguments  =(String[])options.toArray(new  String[arguments.length  +  1]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
110	[BUG]  [BUGGY]  Set  <  String>  tokens  =  new  HashSet  <  String>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  String>  tokens  =  new  HashSet  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  String>  tokens  =  new  HashSet  <  String>();	  List    tokens    =    new    ArrayList    <    String>();    ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
111	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [CE]  no  suitable  constructor  found  for  ArrayList(String[])  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments);	  ArrayList    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[])	73	None	replace
112	[BUG]  [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    ComparisonFailure>    tokens    =    new    ArrayList    <    ComparisonFailure>(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
113	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList  <  ComparisonFailure>(arguments.length);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList  <  ComparisonFailure>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  LinkedList  <  ComparisonFailure>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    ComparisonFailure>    tokens    =    new    ArrayList    <    ComparisonFailure>(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
114	[BUG]  [BUGGY]  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure    >=    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	70	None	replace
115	[BUG]  [BUGGY]  List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure    >=    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	70	None	replace
116	[BUG]  [BUGGY]  ArrayList  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure    >=    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	70	None	replace
117	[BUG]  [BUGGY]  ArrayList  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure    >=    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	70	None	replace
118	[BUG]  [BUGGY]  List  <  ComparisonFailure  >>  false;  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure  >>  false;  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure  >>  false;	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure    >=    false;    	non-compiled	[CE]  not  a  statement	62	None	replace
119	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  ComparisonFailure  >>  false;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  List  <  ComparisonFailure  >>  false;  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList();  List  <  ComparisonFailure  >>  false;	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure    >=    false;    	non-compiled	[CE]  not  a  statement	62	None	replace
120	[BUG]  [BUGGY]  List  <  ComparisonFailure  >=  false;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure  >=  false;  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure  >=  false;	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure    >=    false;    	non-compiled	[CE]  not  a  statement	62	None	replace
121	[BUG]  [BUGGY]  ArrayList  <  ComparisonFailure  >>  false;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  ComparisonFailure  >>  false;  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  ComparisonFailure  >>  false;	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure    >=    false;    	non-compiled	[CE]  not  a  statement	62	None	replace
122	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    List  <  String>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
123	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  ArrayList  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  ArrayList  <  String>  tokens  =  new  ArrayList();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    ArrayList  <  String>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
124	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  arguments  =  getOptions();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    String[]  arguments  =  getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
125	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  arguments  =  new  String[opt.size()  ];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  arguments  =  new  String[opt.size()  ];  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    String[]  arguments  =  new  String[opt.size()  ];	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
126	[BUG]  [BUGGY]  Option  options  =  options.getOption(option,  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(option,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(option,  stopAtNonOption);	  Option    options    =    options.getOption(option);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	68	None	replace
127	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  +  1]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  +  1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[options.size()  +  1]);	  String[]    arguments    =    options.toArray(new    String[options.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	66	None	replace
128	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  -  1]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  -  1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[options.size()  -  1]);	  String[]    arguments    =    options.toArray(new    String[options.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	66	None	replace
129	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ]  +  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ]  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[options.size()  ]  +  1);	  String[]    arguments    =    options.toArray(new    String[options.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	66	None	replace
130	[BUG]  [BUGGY]  Option  options  =  options.getOption(options,  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(options,  stopAtNonOption);	  Option    options    =    options.getOption(options);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	67	None	replace
131	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(arguments);	  Option    options    =    options.getOption(options);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	67	None	replace
132	[BUG]  [BUGGY]  Arrays.sort(this.arguments,  tokens);  [CE]  cannot  find  symbol  arguments  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(this.arguments,  tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(this.arguments,  tokens);	  Arrays.sort(this.arguments);    	non-compiled	[CE]  cannot  find  symbol  arguments	71	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(options,  stopAtNonOption);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	64	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  tokens);  [CE]  cannot  find  symbol  tokens  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(options,  tokens);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  cannot  find  symbol  tokens	64	None	replace
135	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  options);  [CE]  cannot  find  symbol  opt  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(opt,  options);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(opt,  options);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  cannot  find  symbol  opt	64	None	replace
136	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  arguments[0],  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt,  arguments[0],  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  arguments[0],  stopAtNonOption);	  Option    options    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	44	None	replace
137	[BUG]  [BUGGY]  Option  options  =  options.getOption(stopAtNonOption,  opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(stopAtNonOption,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(stopAtNonOption,  opt);	  Option    options    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	44	None	replace
138	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption,  arguments);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  stopAtNonOption,  arguments);	  Option    options    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	44	None	replace
139	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  2);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  ArrayList(arguments.length  +  2);	  List    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	58	3	replace
140	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  2);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length  +  2);	  List    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	58	3	replace
141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  3);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  ArrayList(arguments.length  +  3);	  List    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	58	3	replace
142	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  3);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  3);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length  +  3);	  List    tokens    =    new    ArrayList(arguments.length    +    1);    	compilable	  [FE]  ComparisonFailure  	58	3	replace
143	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  TreeSet  <  String>();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  TreeSet  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  TreeSet  <  String>();	  List    <    String>    tokens    =    new    LinkedList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
144	[BUG]  [BUGGY]  Set  <  String>  tokens  =  new  HashSet  <  String>(arguments.length);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  String>  tokens  =  new  HashSet  <  String>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  String>  tokens  =  new  HashSet  <  String>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
145	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  options);  [CE]  cannot  find  symbol  Arrays  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  options);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(arguments,  stopAtNonOption,  options);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  Arrays	52	None	replace
146	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  tokens);  [CE]  cannot  find  symbol  tokens  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(arguments,  stopAtNonOption,  tokens);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  tokens	52	None	replace
147	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  opt);  [CE]  cannot  find  symbol  opt  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(arguments,  stopAtNonOption,  opt);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	52	None	replace
148	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length  +  1);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length  +  1);	  List    <    String>    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	56	None	replace
149	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length,  options.length);  [CE]  cannot  find  symbol  length  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length,  options.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length,  options.length);	  List    <    String>    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
150	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length  -  1);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length  -  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length  -  1);	  List    <    String>    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	56	None	replace
151	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [CE]  cannot  find  symbol  opt  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(opt,  stopAtNonOption);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	26	None	replace
152	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[i],  stopAtNonOption);  [CE]  cannot  find  symbol  i  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(arguments[i],  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(arguments[i],  stopAtNonOption);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
153	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
154	[BUG]  [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  ComparisonFailure>  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
155	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
156	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
157	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  String[]  arguments  =  getOptions();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    String[]  arguments  =  getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
158	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
159	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption,  tokens);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption,  tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt,  stopAtNonOption,  tokens);	  String[]    arguments    =    options.get(opt,    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	5	None	replace
160	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt,  null);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt,  null);	  String[]    arguments    =    options.get(opt,    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	5	None	replace
161	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	72	None	add
162	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	72	None	add
163	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	72	None	add
164	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  Collection  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  Collection  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    Collection  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
165	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  null,  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt,  null,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  null,  stopAtNonOption);	  Option    options    =    options.getOption(opt,    null);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	88	None	replace
166	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  arguments,  null);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt,  arguments,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  arguments,  null);	  Option    options    =    options.getOption(opt,    null);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	88	None	replace
167	[BUG]  [BUGGY]  Option  options  =  options.getOption(options,  null);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(options,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(options,  null);	  Option    options    =    options.getOption(opt,    null);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	88	None	replace
168	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  arguments);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  arguments);	  Option    options    =    options.getOption(opt,    null);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	88	None	replace
169	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
170	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
171	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
172	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    String[]  arguments  =(String[])options.toArray(new  String[arguments.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
173	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.length  +  1]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =(String[])options.toArray(new  String[arguments.length  +  1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    String[]  arguments  =(String[])options.toArray(new  String[arguments.length  +  1]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
174	[BUG]  [BUGGY]  List  arguments  =  new  ArrayList(arguments.length);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  arguments  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  arguments  =  new  ArrayList(arguments.length);	  List    arguments    =    new    ArrayList(arguments);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	38	None	replace
175	[BUG]  [BUGGY]  List  arguments  =  new  ArrayList(options);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  arguments  =  new  ArrayList(options);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  arguments  =  new  ArrayList(options);	  List    arguments    =    new    ArrayList(arguments);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	38	None	replace
176	[BUG]  [BUGGY]  List  arguments  =  new  ArrayList(arguments,  tokens);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  arguments  =  new  ArrayList(arguments,  tokens);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  arguments  =  new  ArrayList(arguments,  tokens);	  List    arguments    =    new    ArrayList(arguments);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	38	None	replace
177	[BUG]  [BUGGY]  List  arguments  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  arguments  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  arguments  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer    tokens    =    new    TokenBuffer(arguments.length);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	77	None	replace
178	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer    tokens    =    new    TokenBuffer(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
179	[BUG]  [BUGGY]  String[]  arguments  =  opt.getValues();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  opt.getValues();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  opt.getValues();	  String[]    arguments    =    options.getValues();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
180	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt  +  1,  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt  +  1,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt  +  1,  stopAtNonOption);	  String[]    arguments    =    options.get(opt    +    1);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
181	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt  +  2);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt  +  2);	  String[]    arguments    =    options.get(opt    +    1);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
182	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt  +  3);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt  +  3);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt  +  3);	  String[]    arguments    =    options.get(opt    +    1);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
183	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList();  Collections.sort(tokens);  [CE]  cannot  find  symbol  Collections  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList();  Collections.sort(tokens);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList();  Collections.sort(tokens);	  ArrayList    tokens    =    new    ArrayList();    Collections.sort(tokens);    	non-compiled	[CE]  cannot  find  symbol  Collections	61	None	replace
184	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	94	3	replace
185	[BUG]  [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	94	3	replace
186	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	94	3	replace
187	[BUG]  [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	94	3	replace
188	[BUG]  [BUGGY]  if(stopAtNonOption)  {  List  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  List  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  }  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	if(stopAtNonOption)  {  List  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>();  }	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList    <    Comparable>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	94	None	replace
189	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  java.util.ArrayList(arguments.length);	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
190	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList(arguments.length);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  java.util.ArrayList(arguments.length);	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
191	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList(arguments);  [CE]  no  suitable  constructor  found  for  ArrayList(String[])  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList(arguments);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  java.util.ArrayList(arguments);	  List    tokens    =    new    java.util.ArrayList();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[])	75	None	replace
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  java.util.ArrayList  <  Comparable>();	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
193	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList  <  Comparable>();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  java.util.ArrayList  <  Comparable>();	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
194	[BUG]  [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ",  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ",  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption( "stopAtNonOption ",  null);	  Option    option    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	63	None	replace
195	[BUG]  [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ",  false);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ",  false);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption( "stopAtNonOption ",  false);	  Option    option    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	63	None	replace
196	[BUG]  [BUGGY]  Option  options  =  options.getOption(stopAtNonOption,  arguments);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(stopAtNonOption,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(stopAtNonOption,  arguments);	  Option    options    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	46	None	replace
197	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  StopAtNonOption);  [CE]  cannot  find  symbol  StopAtNonOption  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  StopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  StopAtNonOption);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    opt);    	non-compiled	[CE]  cannot  find  symbol  StopAtNonOption	25	None	replace
198	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments);  [CE]  no  suitable  constructor  found  for  ArrayList(int,String[])  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,String[])	25	None	replace
199	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  argument);  [CE]  cannot  find  symbol  argument  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  argument);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  argument);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    opt);    	non-compiled	[CE]  cannot  find  symbol  argument	25	None	replace
200	[BUG]  [BUGGY]  null  tokens  =  new  ArrayList();  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  null  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	null  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    	non-compiled	[CE]  not  a  statement	3	None	replace
201	[BUG]  [BUGGY]  String  opt  =  options.getOption(stopAtNonOption,  opt);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(stopAtNonOption,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(stopAtNonOption,  opt);	  String    opt    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
202	[BUG]  [BUGGY]  String  opt  =  options.getOption(options,  stopAtNonOption,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(options,  stopAtNonOption,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(options,  stopAtNonOption,  arguments);	  String    opt    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
203	[BUG]  [BUGGY]  String  opt  =  options.getOption(opt,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(opt,  arguments,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(opt,  arguments,  stopAtNonOption);	  String    opt    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
204	[BUG]  [BUGGY]  String  opt  =  options.getOption(options,  stopAtNonOption,  tokens);  [CE]  cannot  find  symbol  tokens  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(options,  stopAtNonOption,  tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(options,  stopAtNonOption,  tokens);	  String    opt    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  tokens	10	None	replace
205	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
206	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
207	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  new  String[arguments.length  -  1];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  new  String[arguments.length  -  1];  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    String[]  arguments  =  new  String[arguments.length  -  1];	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
208	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
209	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.get(arguments.length);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.get(arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    String[]  arguments  =  options.get(arguments.length);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
210	[BUG]  [BUGGY]  String  opt  =  options.getOption(options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(options,  stopAtNonOption);	  String    opt    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	81	None	replace
211	[BUG]  [BUGGY]  Set  tokens  =  new  HashSet(arguments.length);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  tokens  =  new  HashSet(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  tokens  =  new  HashSet(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    ArrayList    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  Comparable>  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	4	3	replace
213	[BUG]  [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList();  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Comparable>  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  Comparable>  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	4	3	replace
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  Comparable>  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	4	3	replace
215	[BUG]  [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList();  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  Comparable>  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList();    	compilable	  [FE]  ComparisonFailure  	4	3	replace
216	[BUG]  [BUGGY]  null  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList();  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  null  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	null  tokens  =  new  ArrayList();  List  <  Comparable>  tokens  =  new  ArrayList();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList();    	non-compiled	[CE]  not  a  statement	4	None	replace
217	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(stackAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	28	None	replace
218	[BUG]  [BUGGY]  String[]  arguments  =  options.get(options.length  -  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(options.length  -  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(options.length  -  1);	  String[]    arguments    =    options.get(options.length);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	replace
219	[BUG]  [BUGGY]  String[]  arguments  =  options.get(options.length  +  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(options.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(options.length  +  1);	  String[]    arguments    =    options.get(options.length);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	replace
220	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt.length);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt.length);	  String[]    arguments    =    options.get(options.length);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	replace
221	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);	  ArrayList    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	31	3	replace
222	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);	  ArrayList    tokens    =    new    ArrayList(arguments.length);    	compilable	  [FE]  ComparisonFailure  	31	3	replace
223	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length,  arguments.length);	  ArrayList    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	31	None	replace
224	[BUG]  [BUGGY]  Arrays.sort(this.tokens,  arguments);  [CE]  cannot  find  symbol  tokens  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(this.tokens,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(this.tokens,  arguments);	  Arrays.sort(this.tokens);    	non-compiled	[CE]  cannot  find  symbol  tokens	89	None	replace
225	[BUG]  [BUGGY]  Arrays.sort(this.tokens,  opt);  [CE]  cannot  find  symbol  tokens  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(this.tokens,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(this.tokens,  opt);	  Arrays.sort(this.tokens);    	non-compiled	[CE]  cannot  find  symbol  tokens	89	None	replace
226	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(1);	  ArrayList    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	33	3	replace
227	[BUG]  [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(1);	  ArrayList    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	33	3	replace
228	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  +  1);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  +  1);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length,    arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	14	None	replace
229	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  -  1);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  -  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  -  1);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length,    arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	14	None	replace
230	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  *  2);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  *  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length  *  2);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length,    arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	14	None	replace
231	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  List    tokens    =    new    ArrayList    <    String>();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
232	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);	  List    tokens    =    new    ArrayList    <    String>();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
233	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  List    tokens    =    new    ArrayList    <    String>();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
234	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(args.length);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(args.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>();  TokenBuffer  tokens  =  new  TokenBuffer(args.length);	  List    tokens    =    new    ArrayList    <    String>();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
235	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments.length  +  1);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length,  arguments.length  +  1);	  List    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	59	None	replace
236	[BUG]  [BUGGY]  List  arguments  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  arguments  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  arguments  =  new  ArrayList(arguments.length,  arguments.length);	  List    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	59	None	replace
237	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt)/  1;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt)/  1;  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt)/  1;	  String[]    arguments    =    options.get(opt)+    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
238	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt)+  2;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt)+  2;  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt)+  2;	  String[]    arguments    =    options.get(opt)+    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
239	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt)+  0;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt)+  0;  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt)+  0;	  String[]    arguments    =    options.get(opt)+    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
240	[BUG]  [BUGGY]  String  opt  =  options.getOption(options,  null,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(options,  null,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(options,  null,  stopAtNonOption);	  String    opt    =    options.getOption(opt,    null);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	83	None	replace
241	[BUG]  [BUGGY]  String  opt  =  options.getOption(opt,  null,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(opt,  null,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(opt,  null,  arguments);	  String    opt    =    options.getOption(opt,    null);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	83	None	replace
242	[BUG]  [BUGGY]  String  opt  =  options.getOption(opt,  arguments,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(opt,  arguments,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(opt,  arguments,  null);	  String    opt    =    options.getOption(opt,    null);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	83	None	replace
243	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments,  null);	  String    opt    =    options.getOption(opt,    null);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	83	None	replace
244	[BUG]  [BUGGY]  Options  options  =  options.getOption(arguments[i]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Options  options  =  options.getOption(arguments[i]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Options  options  =  options.getOption(arguments[i]);	  Option    options    =    options.getOption(options[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	47	None	replace
245	[BUG]  [BUGGY]  options  =  options.getOption(arguments[i]);  [CE]  cannot  find  symbol  i  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  options  =  options.getOption(arguments[i]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	options  =  options.getOption(arguments[i]);	  Option    options    =    options.getOption(options[i]);    	non-compiled	[CE]  cannot  find  symbol  i	47	None	replace
246	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments[i],  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(arguments[i],  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(arguments[i],  stopAtNonOption);	  Option    options    =    options.getOption(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	45	None	replace
247	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments[0]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(arguments[0]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(arguments[0]);	  Option    options    =    options.getOption(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	45	None	replace
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	23	3	replace
249	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	23	3	replace
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  final  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	final  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	23	3	replace
251	[BUG]  [BUGGY]  final  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  final  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	final  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	23	3	replace
252	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  TreeList  <  String>();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  TreeList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  TreeList  <  String>();	  List    <    String>    tokens    =    new    LinkedList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
253	[BUG]  [BUGGY]  Arrays.sort(arguments,  opt);  [CE]  cannot  find  symbol  opt  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(arguments,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(arguments,  opt);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	52	None	replace
254	[BUG]  [BUGGY]  Set  <  String>  tokens  =  new  HashSet();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  String>  tokens  =  new  HashSet();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  String>  tokens  =  new  HashSet();	  ArrayList    tokens    =    new    ArrayList();    List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
255	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
256	[BUG]  [BUGGY]  List  tokens  =  new  LinkedList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  LinkedList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  LinkedList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
257	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt)+  1L;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt)+  1L;  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt)+  1L;	  String[]    arguments    =    options.get(opt)+    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	87	None	replace
258	[BUG]  [BUGGY]  HashMap  <  String,String>  tokens  =  new  HashMap  <  String,String>();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  HashMap  <  String,String>  tokens  =  new  HashMap  <  String,String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	HashMap  <  String,String>  tokens  =  new  HashMap  <  String,String>();	  ArrayList    tokens    =    new    ArrayList();    List    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
259	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stoppingAtNonOption);  [CE]  cannot  find  symbol  stoppingAtNonOption  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stoppingAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stoppingAtNonOption);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    opt);    	non-compiled	[CE]  cannot  find  symbol  stoppingAtNonOption	25	None	replace
260	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  opt);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  opt);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    opt);    	non-compiled	[CE]  cannot  find  symbol  opt	25	None	replace
261	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  arguments  =  options.getOptions();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    String[]  arguments  =  options.getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
262	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  Collections.sort(tokens);  [CE]  cannot  find  symbol  Collections  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  Collections.sort(tokens);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    Collections.sort(tokens);	  	non-compiled	[CE]  cannot  find  symbol  Collections	48	None	add
263	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  tokens  =  new  String[0];  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  String[]  tokens  =  new  String[0];  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    String[]  tokens  =  new  String[0];	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
264	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  options.length);  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  options.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length,  options.length);	  List    <    String>    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
265	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);	  List    <    String>    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	56	None	replace
266	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    ArrayList  <  String>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
267	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  String[]  arguments  =  options.getOptions();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    String[]  arguments  =  options.getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
268	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[modules.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[modules.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[modules.size()  ]);	  String[]    arguments    =    options.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	86	None	replace
269	[BUG]  [BUGGY]  Set  <  String>  tokens  =  new  LinkedHashSet  <  String>(arguments.length);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  String>  tokens  =  new  LinkedHashSet  <  String>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  String>  tokens  =  new  LinkedHashSet  <  String>(arguments.length);	  List    tokens    =    new    ArrayList    <    String>();    List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
270	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  options.length);  [CE]  cannot  find  symbol  length  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  options.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  options.length);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
271	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments,  stopAtNonOption);	  List    <    String>    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[],boolean)	82	None	replace
272	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(8);    TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  	non-compiled	[CE]  cannot  find  symbol	90	None	add
273	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(8);    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());	  	non-compiled	[CE]  cannot  find  symbol	90	None	add
274	[BUG]  [BUGGY]  Set  <  ComparisonFailure>  tokens  =  new  HashSet  <  ComparisonFailure>(arguments.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  ComparisonFailure>  tokens  =  new  HashSet  <  ComparisonFailure>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  ComparisonFailure>  tokens  =  new  HashSet  <  ComparisonFailure>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    ComparisonFailure>    tokens    =    new    ArrayList    <    ComparisonFailure>(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
275	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[0]).toString();  [CE]  cannot  find  symbol  tokens  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[0]).toString();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[0]).toString();	  String    opt    =    options.getOption(arguments[0]);    	non-compiled	[CE]  cannot  find  symbol  tokens	11	None	replace
276	[BUG]  [BUGGY]  Option  option  =  options.getOption(blockAtNonOption);  [CE]  cannot  find  symbol  blockAtNonOption  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(blockAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(blockAtNonOption);	  Option    option    =    options.getOption(stackAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  blockAtNonOption	28	None	replace
277	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption,  arguments);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt,  stopAtNonOption,  arguments);	  String[]    arguments    =    options.get(opt,    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	5	None	replace
278	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption,  null);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt,  stopAtNonOption,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt,  stopAtNonOption,  null);	  String[]    arguments    =    options.get(opt,    stopAtNonOption);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	5	None	replace
279	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
280	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.length  +  1]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.length  +  1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    String[]  arguments  =  options.toArray(new  String[arguments.length  +  1]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
281	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(6);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(6);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
282	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(6);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(6);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(6);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
283	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(7);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  <  String>  tokens  =  new  ArrayList  <  String>(7);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
284	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(7);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(7);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(7);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	compilable	  [FE]  ComparisonFailure  	91	3	replace
285	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptionArgs();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getOptionArgs();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptionArgs();	  String[]    arguments    =    options.getArguments();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	34	None	replace
286	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptionArguments();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getOptionArguments();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptionArguments();	  String[]    arguments    =    options.getArguments();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	34	None	replace
287	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  Comparable>();  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  Comparable>();	  	non-compiled	[CE]  not  a  statement	32	None	add
288	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  Comparable>();  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  Comparable>();	  	non-compiled	[CE]  not  a  statement	32	None	add
289	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList(arguments.length);  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    List  <  ComparisonFailure  >=  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  not  a  statement	30	None	add
290	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  ComparisonFailure>(arguments.length);	  	non-compiled	[CE]  not  a  statement	30	None	add
291	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	33	3	replace
292	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  Comparable>();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	33	3	replace
293	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.length  +  1]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.length  +  1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    String[]  arguments  =  options.toArray(new  String[arguments.length  +  1]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
294	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length  +  2);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
295	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	add
296	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt  +  1).toString();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt  +  1).toString();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt  +  1).toString();	  String[]    arguments    =    options.get(opt    +    1);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
297	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
298	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.toArray(new  String[arguments.length  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.toArray(new  String[arguments.length  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    String[]  arguments  =  options.toArray(new  String[arguments.length  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
299	[BUG]  [BUGGY]  List  tokens  =  options.sort(arguments,  StopAtNonOption);  [CE]  cannot  find  symbol  StopAtNonOption  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  options.sort(arguments,  StopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  options.sort(arguments,  StopAtNonOption);	  List    tokens    =    options.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  StopAtNonOption	50	None	replace
300	[BUG]  [BUGGY]  Arrays.sort(tokens,  stopAtNonOption);  [CE]  cannot  find  symbol  tokens  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(tokens,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(tokens,  stopAtNonOption);	  Arrays.sort(tokens);    	non-compiled	[CE]  cannot  find  symbol  tokens	51	None	replace
301	[BUG]  [BUGGY]  String[]  arguments  =  options.get(options.length,  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(options.length,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(options.length,  stopAtNonOption);	  String[]    arguments    =    options.get(options.length);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	replace
302	[BUG]  [BUGGY]  Set  <  ComparisonFailure>  tokens  =  new  HashSet  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  ComparisonFailure>  tokens  =  new  HashSet  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  ComparisonFailure>  tokens  =  new  HashSet  <  ComparisonFailure>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    ComparisonFailure>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
303	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments,  stoppingAtNonOption);  [CE]  cannot  find  symbol  stoppingAtNonOption  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments,  stoppingAtNonOption);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments,  stoppingAtNonOption);	  List    tokens    =    new    ArrayList(arguments,    opt);    	non-compiled	[CE]  cannot  find  symbol  stoppingAtNonOption	37	None	replace
304	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  LinkedList();	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
305	[BUG]  [BUGGY]  Set  <  ComparisonFailure>  tokens  =  new  HashSet();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  ComparisonFailure>  tokens  =  new  HashSet();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  ComparisonFailure>  tokens  =  new  HashSet();	  ArrayList    tokens    =    new    ArrayList();    List    <    ComparisonFailure>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
306	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(options,  arguments);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	27	None	replace
307	[BUG]  [BUGGY]  Set  <  Comparable>  tokens  =  new  HashSet  <  Comparable>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  Comparable>  tokens  =  new  HashSet  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  Comparable>  tokens  =  new  HashSet  <  Comparable>();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList    <    Comparable>();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  tokens  =  new  ArrayList  <  String>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	92	3	replace
309	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>(arguments.length);  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  ArrayList  <  String>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	compilable	  [FE]  ComparisonFailure  	92	3	replace
310	[BUG]  [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList(arguments.length);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  ComparisonFailure>  tokens  =  new  LinkedList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  ComparisonFailure>  tokens  =  new  LinkedList(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    ComparisonFailure>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
311	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[1]);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[1]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[1]);	  String    opt    =    options.getOption(arguments[i]);    	non-compiled	[CE]  incompatible  types	9	None	replace
312	[BUG]  [BUGGY]  String  option  =  options.getOption(arguments[0]);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  option  =  options.getOption(arguments[0]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  option  =  options.getOption(arguments[0]);	  String    opt    =    options.getOption(arguments[i]);    	non-compiled	[CE]  incompatible  types	9	None	replace
313	[BUG]  [BUGGY]  Set  <  String>  tokens  =  new  HashSet  <  ComparisonFailure>();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  String>  tokens  =  new  HashSet  <  ComparisonFailure>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  String>  tokens  =  new  HashSet  <  ComparisonFailure>();	  List    tokens    =    new    ArrayList    <    String>();    List    <    String>    tokens    =    new    ArrayList    <    ComparisonFailure>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
314	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ])+  1;  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ])+  1;  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[options.size()  ])+  1;	  String[]    arguments    =    options.toArray(new    String[options.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	66	None	replace
315	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[i],  stopAtNonOption);  [CE]  cannot  find  symbol  i  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[i],  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[i],  stopAtNonOption);	  String    opt    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
316	[BUG]  [BUGGY]  List.sort(arguments,  opt);  [CE]  cannot  find  symbol  opt  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  List.sort(arguments,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List.sort(arguments,  opt);	  List.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol  opt	53	None	replace
317	[BUG]  [BUGGY]  String  opt  =  options.getOption(opt,  null,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(opt,  null,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(opt,  null,  stopAtNonOption);	  String    opt    =    options.getOption(opt,    null);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	83	None	replace
318	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    List  <  ComparisonFailure  >=  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  not  a  statement	72	None	add
319	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    List  <  ComparisonFailure  >>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  not  a  statement	72	None	add
320	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  Collections.sort(tokens);  [CE]  cannot  find  symbol  Collections  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  Collections.sort(tokens);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    Collections.sort(tokens);	  	non-compiled	[CE]  cannot  find  symbol  Collections	72	None	add
321	[BUG]  [BUGGY]  Option  options  =  options.getOption(options[i],  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(options[i],  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(options[i],  stopAtNonOption);	  Option    options    =    options.getOption(options[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	47	None	replace
322	[BUG]  [BUGGY]  Option  options  =  options.getOption(options[0]);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(options[0]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(options[0]);	  Option    options    =    options.getOption(options[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	47	None	replace
323	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  java.util.ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  tokens  =  new  java.util.ArrayList();	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
324	[BUG]  [BUGGY]  ArrayList  tokens  =  new  java.util.ArrayList();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  java.util.ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  new  java.util.ArrayList();	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
325	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  String[]  arguments  =  options.getOptions();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    String[]  arguments  =  options.getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
326	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  Arrays.sort(tokens);  [CE]  cannot  find  symbol  Arrays  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  Arrays.sort(tokens);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    Arrays.sort(tokens);	  	non-compiled	[CE]  cannot  find  symbol  Arrays	74	None	add
327	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  options.length);  [CE]  cannot  find  symbol  length  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  options.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  ArrayList(arguments.length,  options.length);	  List    tokens    =    new    ArrayList(arguments.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol  length	59	None	replace
328	[BUG]  [BUGGY]  HashMap  <  String,Object>  tokens  =  new  HashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  HashMap  <  String,Object>  tokens  =  new  HashMap  <  String,Object>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	HashMap  <  String,Object>  tokens  =  new  HashMap  <  String,Object>();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
329	[BUG]  [BUGGY]  Set  <  Comparable>  tokens  =  new  HashSet();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  Comparable>  tokens  =  new  HashSet();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  Comparable>  tokens  =  new  HashSet();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
330	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	add
331	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  LinkedList  <  Comparable>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Comparable>();  List  <  Comparable>  tokens  =  new  LinkedList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    Comparable>();    List  <  Comparable>  tokens  =  new  LinkedList  <  Comparable>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	add
332	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt  -  1);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get(opt  -  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.get(opt  -  1);	  String[]    arguments    =    options.get(opt    +    1);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
333	[BUG]  [BUGGY]  Set  <  String>  tokens  =  new  TreeSet  <  String>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  String>  tokens  =  new  TreeSet  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  String>  tokens  =  new  TreeSet  <  String>();	  List    tokens    =    new    ArrayList    <    String>();    ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
334	[BUG]  [BUGGY]  String  opt  =  options.getOption(arguments[0],  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(arguments[0],  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(arguments[0],  null);	  String    opt    =    options.getOption(arguments[0]);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
335	[BUG]  [BUGGY]  String[]  arguments  =  options.getAllValues();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getAllValues();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getAllValues();	  String[]    arguments    =    options.getValues();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
336	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList(8);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	List  tokens  =  new  java.util.ArrayList(8);	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
337	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList(8);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList(8);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  tokens  =  new  java.util.ArrayList(8);	  List    tokens    =    new    java.util.ArrayList();    	compilable	  [FE]  ComparisonFailure  	75	3	replace
338	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments[0].length);  [CE]  cannot  find  symbol  length  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments[0].length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments[0].length);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
339	[BUG]  [BUGGY]  String  opt  =  options.getOption(option,  stopAtNonOption,  arguments);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(option,  stopAtNonOption,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(option,  stopAtNonOption,  arguments);	  String    opt    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  option	10	None	replace
340	[BUG]  [BUGGY]  HashMap  <  String,String>  arguments  =  new  HashMap  <  String,String>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  HashMap  <  String,String>  arguments  =  new  HashMap  <  String,String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	HashMap  <  String,String>  arguments  =  new  HashMap  <  String,String>();	  ArrayList    tokens    =    new    ArrayList();    List    <    Comparable>    tokens    =    new    ArrayList    <    Comparable>();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
341	[BUG]  [BUGGY]  ArrayList  tokens  =  options.sort(arguments);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  options.sort(arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  tokens  =  options.sort(arguments);	  List    tokens    =    options.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
342	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length    +    1);    String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	add
343	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(tokens.length);  [CE]  cannot  find  symbol  length  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(tokens.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(tokens.length);	  List    tokens    =    new    ArrayList    <    String>();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol  length	21	None	replace
344	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);	  List    tokens    =    new    ArrayList    <    String>();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
345	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    List  <  String>  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	30	None	add
346	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList(arguments.length);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	30	None	add
347	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  LinkedList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  LinkedList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  LinkedList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	72	None	add
348	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    tokens    =    new    ArrayList    <    String>();    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	72	None	add
349	[BUG]  [BUGGY]  Option  options  =  options.getOption(options[i],  opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(options[i],  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(options[i],  opt);	  Option    options    =    options.getOption(options[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	47	None	replace
350	[BUG]  [BUGGY]  Option  option  =  options.getOption(options[i]);  [CE]  cannot  find  symbol  i  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options[i]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(options[i]);	  Option    options    =    options.getOption(options[i]);    	non-compiled	[CE]  cannot  find  symbol  i	47	None	replace
351	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  LinkedList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  LinkedList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  LinkedList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
352	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
353	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	22	None	add
354	[BUG]  [BUGGY]  String  opt  =  options.getOption(opt,  null,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(opt,  null,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(opt,  null,  null);	  String    opt    =    options.getOption(opt,    null);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	83	None	replace
355	[BUG]  [BUGGY]  Option  options  =  options.getOption(option,  null,  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(option,  null,  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(option,  null,  stopAtNonOption);	  Option    options    =    options.getOption(opt,    null);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	88	None	replace
356	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  null,  StopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt,  null,  StopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(opt,  null,  StopAtNonOption);	  Option    options    =    options.getOption(opt,    null);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	88	None	replace
357	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ],  stopAtNonOption);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.toArray(new  String[options.size()  ],  stopAtNonOption);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.toArray(new  String[options.size()  ],  stopAtNonOption);	  String[]    arguments    =    options.toArray(new    String[options.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	66	None	replace
358	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);	  ArrayList    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	73	3	replace
359	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);	  ArrayList    tokens    =    new    ArrayList    <    String>();    	compilable	  [FE]  ComparisonFailure  	73	3	replace
360	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
361	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    <    String>    tokens    =    new    ArrayList(arguments.length    +    1);    String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	54	None	add
362	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length);  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    TokenBuffer    tokens    =    new    TokenBuffer(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
363	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(opt,  null);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.getOptions(opt,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String[]  arguments  =  options.getOptions(opt,  null);	  String[]    arguments    =    options.getOptions(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
364	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  arguments);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(opt,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(opt,  arguments);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  opt	27	None	replace
365	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  opt);  [CE]  cannot  find  symbol  opt  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(arguments,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(arguments,  opt);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  opt	27	None	replace
366	[BUG]  [BUGGY]  Arrays.sort(this.arguments,  this.opt);  [CE]  cannot  find  symbol  arguments  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(this.arguments,  this.opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(this.arguments,  this.opt);	  Arrays.sort(this.arguments);    	non-compiled	[CE]  cannot  find  symbol  arguments	71	None	replace
367	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    String[]  arguments  =  options.toArray(new  String[args.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	79	None	add
368	[BUG]  [BUGGY]  Set  <  Comparable>  tokens  =  new  HashSet  <  Comparable>(arguments.length);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  Comparable>  tokens  =  new  HashSet  <  Comparable>(arguments.length);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Set  <  Comparable>  tokens  =  new  HashSet  <  Comparable>(arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    List    <    Comparable>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
369	[BUG]  [BUGGY]  List  <  E>  tokens  =  new  ArrayList  <  E>(arguments);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  E>  tokens  =  new  ArrayList  <  E>(arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  E>  tokens  =  new  ArrayList  <  E>(arguments);	  List.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
370	[BUG]  [BUGGY]  List  <  E>  tokens  =  options.sort(arguments);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  E>  tokens  =  options.sort(arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  E>  tokens  =  options.sort(arguments);	  List.sort(arguments);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
371	[BUG]  [BUGGY]  Arrays.sort(tokens,  opt);  [CE]  cannot  find  symbol  tokens  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(tokens,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(tokens,  opt);	  Arrays.sort(tokens);    	non-compiled	[CE]  cannot  find  symbol  tokens	51	None	replace
372	[BUG]  [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption, ");  [CE]  cannot  find  symbol  tokens  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption, ");  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption( "stopAtNonOption, ");	  Option    option    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  cannot  find  symbol  tokens	63	None	replace
373	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	add
374	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length  +  1);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    ArrayList(arguments.length    +    1);    List  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(arguments.length  +  1);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	add
375	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  opt);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  option  =  options.getOption(options,  opt);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  cannot  find  symbol  opt	64	None	replace
376	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(4);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	add	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(4);	  ArrayList    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	33	3	replace
377	[BUG]  [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(4);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(4);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList  <  Comparable>  tokens  =  new  ArrayList  <  Comparable>(4);	  ArrayList    tokens    =    new    ArrayList    <    Comparable>();    	compilable	  [FE]  ComparisonFailure  	33	3	replace
378	[BUG]  [BUGGY]  String  opt  =  options.getOption(options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  String  opt  =  options.getOption(options,  arguments);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	String  opt  =  options.getOption(options,  arguments);	  String    opt    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	81	None	replace
379	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments[i],  opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(arguments[i],  opt);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(arguments[i],  opt);	  Option    options    =    options.getOption(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	45	None	replace
380	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments[i]).toString();  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(arguments[i]).toString();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Option  options  =  options.getOption(arguments[i]).toString();	  Option    options    =    options.getOption(arguments[i]);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	45	None	replace
381	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
382	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
383	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	ArrayList    <    String>    tokens    =    new    ArrayList();    List  <  String>  tokens  =  new  ArrayList(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	add
384	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  null);  [CE]  no  suitable  constructor  found  for  ArrayList(String[],<null>)  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  null);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments,    opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[],<null>)	25	None	replace
385	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  <  String>  tokens  =  new  java.util.ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  <  String>  tokens  =  new  java.util.ArrayList();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    List  <  String>  tokens  =  new  java.util.ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
386	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  <  String>  tokens  =  new  java.util.ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  <  String>  tokens  =  new  java.util.ArrayList  <  String>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    List  <  String>  tokens  =  new  java.util.ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
387	[BUG]  [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  <  String>  tokens  =  new  java.util.ArrayList  <  Comparable>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  List  tokens  =  new  java.util.ArrayList();  List  <  String>  tokens  =  new  java.util.ArrayList  <  Comparable>();  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List    tokens    =    new    java.util.ArrayList();    List  <  String>  tokens  =  new  java.util.ArrayList  <  Comparable>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	74	None	add
388	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments,  options);  [CE]  no  suitable  constructor  found  for  ArrayList(String[],Options)  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments,  options);  [BUGGY]        boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments,  options);	  List    <    String>    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String[],Options)	82	None	replace
389	[BUG]  [BUGGY]  Arrays.sort(arguments,  null);  [CE]  cannot  find  symbol  Arrays  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arrays.sort(arguments,  null);  [BUGGY]      List  tokens  =  new  ArrayList();  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	54	54	3	replace	Arrays.sort(arguments,  null);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  Arrays	52	None	replace
