bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   ");  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	        tokens.add(   "-   ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	11	13	add
2	[BUG]  [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]    AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]      tokens.add(   "-   ");  tokens.add( "-   ");  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	        tokens.add(   "-   ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	11	13	add
3	[BUG]  [BUGGY]      tokens.add(   "-   ");  tokens.add( "- ".equals(opt));  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]      tokens.add(   "-   ");  tokens.add( "- ".equals(opt));  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	        tokens.add(   "-   ");    tokens.add( "- ".equals(opt));	  	non-compiled	[CE]  cannot  find  symbol  opt	11	None	add
4	[BUG]  [BUGGY]      tokens.add(   "-   ");  tokens.add( "- ".equals(option));  [CE]  cannot  find  symbol  option  [FE]        AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]      tokens.add(   "-   ");  tokens.add( "- ".equals(option));  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	        tokens.add(   "-   ");    tokens.add( "- ".equals(option));	  	non-compiled	[CE]  cannot  find  symbol  option	11	None	add
5	[BUG]  [BUGGY]      tokens.add(   "-   ");  tokens.add( "- ".equals(arguments[i]));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]      tokens.add(   "-   ");  tokens.add( "- ".equals(arguments[i]));  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	        tokens.add(   "-   ");    tokens.add( "- ".equals(arguments[i]));	  	non-compiled	[CE]  cannot  find  symbol  i	11	None	add
6	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	      ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	replace
7	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments);	      ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	replace
8	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  tokens  =  new  ArrayList(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList(arguments.length);	      List    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
9	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  tokens  =  new  ArrayList  <  String>();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList  <  String>();	      List    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
10	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    Boolean  eatTheRest  =  true;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
11	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
12	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    String[]  arguments  =  getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
13	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  new  String[tokens.size()  ];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  new  String[tokens.size()  ];  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    String[]  arguments  =  new  String[tokens.size()  ];	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
14	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    String[]  arguments  =  options.get(opt);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
15	[BUG]  [BUGGY]  boolean  eattheRest  =  false;  [CE]  cannot  find  symbol  eatTheRest  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eattheRest  =  false;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eattheRest  =  false;	  boolean    eatTheRest    =    true;    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	2	None	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  false;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	Boolean  eatTheRest  =  false;	  boolean    eatTheRest    =    true;    	compilable	  [FE]  ComparisonFailure  	2	3	replace
17	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  false;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;	  boolean    eatTheRest    =    true;    	compilable	  [FE]  ComparisonFailure  	2	3	replace
18	[BUG]  [BUGGY]  boolean  stopAtNonOption  =  true;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  stopAtNonOption  =  true;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  stopAtNonOption  =  true;	  boolean    eattheRest    =    true;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	3	None	replace
19	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	      List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	replace
20	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments);	      List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	replace
21	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.length);	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
22	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length,  arguments.length);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length,  arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length,  arguments.length);	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
23	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  +  1);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  +  1);	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
24	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
25	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
26	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
27	[BUG]  [BUGGY]  tokens.add( "- ".equals(opt));  [CE]  cannot  find  symbol  opt  [FE]    AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  tokens.add( "- ".equals(opt));  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ".equals(opt));	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	12	None	replace
28	[BUG]  [BUGGY]  tokens.add( "- "  +  opt);  [CE]  cannot  find  symbol  opt  [FE]      AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  tokens.add( "- "  +  opt);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- "  +  opt);	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  opt	12	None	replace
29	[BUG]  [BUGGY]  tokens.add( "- ".equals(option));  [CE]  cannot  find  symbol  option  [FE]        AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  tokens.add( "- ".equals(option));  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ".equals(option));	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  option	12	None	replace
30	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length);	      ArrayList    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
31	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  tokens  =  new  ArrayList(arguments);	      ArrayList    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
32	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    boolean  eatTheRest  =  true;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
33	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  new  String[tokens.size()  ];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  new  String[tokens.size()  ];  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    String[]  arguments  =  new  String[tokens.size()  ];	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
34	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    String[]  arguments  =  getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
35	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    String[]  arguments  =  options.get(opt);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
36	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    String[]  arguments  =  options.toArray(new  String[args.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
37	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList();	      List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	10	None	replace
38	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  LinkedList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  <  String>  tokens  =  new  LinkedList();  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  LinkedList();	      List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	10	None	replace
39	[BUG]  [BUGGY]  Boolean  eattheRest  =  false;  [CE]  cannot  find  symbol  eatTheRest  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eattheRest  =  false;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eattheRest  =  false;	  Boolean    eatTheRest    =    true;    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	5	None	replace
40	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  1);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  1);	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.length);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
41	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  tokens  =  new  ArrayList(arguments);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList(arguments);	      List    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
42	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens);  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
43	[BUG]  [BUGGY]  tokens.add( "-- ");  [CE]  cannot  find  symbol  eatTheRest  [FE]                ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  tokens.add( "-- ");  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-- ");	      	non-compiled	[CE]  cannot  find  symbol  eatTheRest	6	None	replace
44	[BUG]  [BUGGY]  boolean  eatTheRest  =  null;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  null;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  null;	  boolean    eatTheRest    =    true;    	non-compiled	[CE]  incompatible  types	2	None	replace
45	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length);	      List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	10	None	replace
46	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  List  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  List  tokens  =  new  ArrayList();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    List  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
47	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    String[]  arguments  =  options.getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
48	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    List  <  String>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
49	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
50	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  List  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  List  tokens  =  new  ArrayList();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    List  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
51	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    String[]  arguments  =  options.getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
52	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  null;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	Boolean  eatTheRest  =  null;	  Boolean    eatTheRest    =    true;    	compilable	  [FE]  NullPointerException  	5	14	replace
53	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  null;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  null;	  Boolean    eatTheRest    =    true;    	compilable	  [FE]  NullPointerException  	5	14	replace
54	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size());  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.size());	      TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	boolean  eatTheRest  =  stopAtNonOption;	  boolean    eattheRest    =    true;    	compilable	  [FE]  ComparisonFailure  	3	3	replace
56	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  stopAtNonOption;	  boolean    eattheRest    =    true;    	compilable	  [FE]  ComparisonFailure  	3	3	replace
57	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
58	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
59	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    true;    List  <  String>  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	1	None	add
60	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(8);	      List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	replace
61	[BUG]  [BUGGY]  tokens.add( "- ".equals(arguments[i]));  [CE]  cannot  find  symbol  i  [FE]    AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  tokens.add( "- ".equals(arguments[i]));  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ".equals(arguments[i]));	      tokens.add(   "-   ");    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
62	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  boolean  stopAtNonOption  =  stopAtNonOption;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  boolean  stopAtNonOption  =  stopAtNonOption;  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    boolean  stopAtNonOption  =  stopAtNonOption;	  	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
63	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    true;    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	4	None	add
64	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(8);	      ArrayList    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	15	None	replace
65	[BUG]  [BUGGY]      tokens.add(   "-   ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    {  List  tokens  =  new  ArrayList();    [BUGGY]      tokens.add(   "-   ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]    boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (   "--   ".equals(arg))  {  eatTheRest  =  true;  tokens.add(   "--   ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	        tokens.add(   "-   ");    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
