bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]  boolean  eatTheRest  =  true;  [BUGGY]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	boolean  eatTheRest  =  true;	boolean  eatTheRest  =  false;  	compilable	  [FE]  ComparisonFailure  	10	3	replace
2	[BUG]  [BUGGY]  boolean  eatTheRest  =  true;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]  boolean  eatTheRest  =  true;  [BUGGY]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  true;	boolean  eatTheRest  =  false;  	compilable	  [FE]  ComparisonFailure  	10	3	replace
3	[BUG]  [BUGGY]  boolean  eattheRest  =  true;  [CE]  cannot  find  symbol  eatTheRest  [FE]      ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]  boolean  eattheRest  =  true;  [BUGGY]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eattheRest  =  true;	boolean  eatTheRest  =  false;  	non-compiled	[CE]  cannot  find  symbol  eatTheRest	10	None	replace
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]  Boolean  eatTheRest  =  true;  [BUGGY]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	Boolean  eatTheRest  =  true;	boolean  eatTheRest  =  false;  	compilable	  [FE]  ComparisonFailure  	10	3	replace
5	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]  Boolean  eatTheRest  =  true;  [BUGGY]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  true;	boolean  eatTheRest  =  false;  	compilable	  [FE]  ComparisonFailure  	10	3	replace
6	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  eatTheRest  [FE]          ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    [BUGGY]    for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	  	boolean  eatTheRest  =  false;  	non-compiled	[CE]  cannot  find  symbol  eatTheRest	10	None	replace
7	[BUG]  [BUGGY]    List  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    List  tokens  =  new  ArrayList();  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    List  tokens  =  new  ArrayList();		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
8	[BUG]  [BUGGY]    ArrayList  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    ArrayList  tokens  =  new  ArrayList();  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    ArrayList  tokens  =  new  ArrayList();		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
9	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    List  <  String>  tokens  =  new  ArrayList  <  String>();		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
10	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    List  <  String>  tokens  =  new  ArrayList();  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    List  <  String>  tokens  =  new  ArrayList();		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    tokens.add( "- ");  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	    tokens.add( "- ");		compilable	  [FE]  AssertionFailedError  	11	10	add
12	[BUG]  [BUGGY]    tokens.add( "- ");  [FE]  AssertionFailedError  [FE]            ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    tokens.add( "- ");  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    tokens.add( "- ");		compilable	  [FE]  AssertionFailedError  	11	10	add
13	[BUG]  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    TokenBuffer  tokens  =  new  TokenBuffer(tokens.length);		non-compiled	[CE]  cannot  find  symbol	11	None	add
14	[BUG]  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());		non-compiled	[CE]  cannot  find  symbol	11	None	add
15	[BUG]  [BUGGY]    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure  [CONTEXT]  {  List  tokens  =  new  ArrayList();  [BUGGY]    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]  boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  ( "-- ".equals(arg))  {  eatTheRest  =  true;  tokens.add( "-- ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	    ArrayList  <  String>  tokens  =  new  ArrayList  <  String>();		non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	add
