bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length  +  1);	  ArrayList    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	30	None	replace
2	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  tokens  =  new  ArrayList(arguments.length,  arguments.length);	  ArrayList    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	30	None	replace
3	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens,  opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens,  opt);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens,  opt);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
4	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());	  TokenBuffer    tokens    =    new    TokenBuffer(tokens);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
5	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eatTheRest  =  null;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eatTheRest  =  null;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    Boolean  eatTheRest  =  null;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
6	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  boolean  eatTheRest  =  null;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  boolean  eatTheRest  =  null;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    boolean  eatTheRest  =  null;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
7	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eatTheRest  =  null;  tokens.add( "- ");  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eatTheRest  =  null;  tokens.add( "- ");  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    Boolean  eatTheRest  =  null;  tokens.add( "- ");	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
8	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eatTheRest  =  null;  tokens.add( "-- ");  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eatTheRest  =  null;  tokens.add( "-- ");  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    Boolean  eatTheRest  =  null;  tokens.add( "-- ");	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
9	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	20	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[args.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
11	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[args.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
12	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	String[]  arguments  =  options.toArray(new  String[args.size()  ]);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[args.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
13	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[args.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	36	None	replace
14	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  }	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	replace
15	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	replace
16	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	48	None	replace
17	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	63	None	replace
18	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  }	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	63	None	replace
19	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length);	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	63	None	replace
20	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  LinkedList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  LinkedList  <  String>();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  LinkedList  <  String>();	  List    <    String>    tokens    =    new    LinkedList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	38	None	replace
21	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
22	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
23	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  else  {  tokens.add( "-- ");  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  else  {  tokens.add( "-- ");  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  else  {  tokens.add( "-- ");  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
24	[BUG]  [BUGGY]  String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  String[]  arguments  =  options.get(opt);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	String[]  arguments  =  options.get(opt);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
25	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	19	None	replace
26	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	19	None	replace
27	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  2);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	19	None	replace
28	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  }  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  }	  Boolean    eatTheRest    =    true;    Boolean    eatTheRest    =    true;    	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	10	None	replace
29	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  if(! "-- ".equals(opt))  {  eatTheRest  =  true;  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  if(! "-- ".equals(opt))  {  eatTheRest  =  true;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  if(! "-- ".equals(opt))  {  eatTheRest  =  true;  }	  Boolean    eatTheRest    =    true;    Boolean    eatTheRest    =    true;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
30	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  }  else  {  tokens.add( "-- ");  }  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  }  else  {  tokens.add( "-- ");  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  Boolean  eatTheRest  =  true;  }  else  {  tokens.add( "-- ");  }	  Boolean    eatTheRest    =    true;    Boolean    eatTheRest    =    true;    	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	10	None	replace
31	[BUG]  [BUGGY]  boolean  stopAtNonOption  =  false;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  stopAtNonOption  =  false;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  stopAtNonOption  =  false;	  boolean    stopAtNonOption    =    true;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	replace
32	[BUG]  [BUGGY]  Boolean  stopAtNonOption  =  false;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  stopAtNonOption  =  false;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  stopAtNonOption  =  false;	  boolean    stopAtNonOption    =    true;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	replace
33	[BUG]  [BUGGY]  final  boolean  stopAtNonOption  =  true;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  final  boolean  stopAtNonOption  =  true;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	final  boolean  stopAtNonOption  =  true;	  boolean    stopAtNonOption    =    true;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	replace
34	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(arguments.size());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
35	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  -  2);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  -  2);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  -  2);	  TokenBuffer    tokens    =    new    TokenBuffer(arguments.size());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
36	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  +  1);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.size()  +  1);	  TokenBuffer    tokens    =    new    TokenBuffer(arguments.size());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
37	[BUG]  [BUGGY]  tokens.add( "-   ".equals(arg));  [CE]  cannot  find  symbol  arg  [FE]            AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-   ".equals(arg));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-   ".equals(arg));	  tokens.add(   "-   ".equals(option));    	non-compiled	[CE]  cannot  find  symbol  arg	29	None	replace
38	[BUG]  [BUGGY]  tokens.add( "-   "  +  stopAtNonOption);  [CE]  cannot  find  symbol  eatTheRest  [FE]          AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-   "  +  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-   "  +  stopAtNonOption);	  tokens.add(   "-   "    +    opt);    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	28	None	replace
39	[BUG]  [BUGGY]  tokens.add( "-   "  +  arg);  [CE]  cannot  find  symbol  arg  [FE]            AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-   "  +  arg);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-   "  +  arg);	  tokens.add(   "-   "    +    opt);    	non-compiled	[CE]  cannot  find  symbol  arg	28	None	replace
40	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	51	None	replace
41	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	51	None	replace
42	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  String[]  arguments  =  options.getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	String[]  arguments  =  options.getOptions();	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	51	None	replace
43	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  }  else  {  tokens.add( "-- ");  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  }  else  {  tokens.add( "-- ");  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.getOptions();  }  else  {  tokens.add( "-- ");  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	51	None	replace
44	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length  +  1);	  List    <    String>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	45	None	replace
45	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList(arguments.length,  arguments.length);	  List    <    String>    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	45	None	replace
46	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	replace
47	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	replace
48	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();	  Boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	11	None	replace
49	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  Boolean  eatTheRest  =  false;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  Boolean  eatTheRest  =  false;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    false;    Boolean  eatTheRest  =  false;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	add
50	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    false;    String[]  arguments  =  options.get(opt);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	add
51	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    false;    String[]  arguments  =  getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	add
52	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    false;    List  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	add
53	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList(arguments,  stopAtNonOption);	  List    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	41	None	replace
54	[BUG]  [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(arg));  [CE]  cannot  find  symbol  arg  [FE]            AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(arg));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ");  tokens.add( "- ".equals(arg));	          tokens.add(       "-       ");    tokens.add(   "-   ".equals(option));    	non-compiled	[CE]  cannot  find  symbol  arg	4	None	replace
55	[BUG]  [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(arguments[0]));  [CE]  cannot  find  symbol  eatTheRest  [FE]              AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(arguments[0]));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ");  tokens.add( "- ".equals(arguments[0]));	          tokens.add(       "-       ");    tokens.add(   "-   ".equals(arguments[i]));    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	5	None	replace
56	[BUG]  [BUGGY]  tokens.add( "- ").equals(arguments[i]));  [CE]  [FE]                AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ").equals(arguments[i]));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ").equals(arguments[i]));	          tokens.add(       "-       ");    tokens.add(   "-   ".equals(arguments[i]));    	non-compiled	[CE]  	5	None	replace
57	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }	  boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	replace
58	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList  <  String>();  }	  boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	57	None	replace
59	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  new  String[tokens.size()  ];  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  new  String[tokens.size()  ];  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  new  String[tokens.size()  ];  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    new    String[tokens.size()    ];    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	33	None	replace
60	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];	  boolean    eatTheRest    =    true;    String[]    arguments    =    new    String[tokens.size()    ];    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	33	None	replace
61	[BUG]  [BUGGY]  String[]  arguments  =  new  String[tokens.size()  ];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  String[]  arguments  =  new  String[tokens.size()  ];  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	String[]  arguments  =  new  String[tokens.size()  ];	  boolean    eatTheRest    =    true;    String[]    arguments    =    new    String[tokens.size()    ];    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	33	None	replace
62	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    new    String[tokens.size()    ];    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	33	None	replace
63	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();	  Boolean    eatTheRest    =    true;    List    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	46	None	replace
64	[BUG]  [BUGGY]  Integer  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Integer  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Integer  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);	  Boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  incompatible  types	14	None	replace
65	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();	  Boolean    eatTheRest    =    true;    String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	47	None	replace
66	[BUG]  [BUGGY]  Boolean  eattheRest  =  true;  [CE]  cannot  find  symbol  eatTheRest  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eattheRest  =  true;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eattheRest  =  true;	  Boolean    eattheRest    =    false;    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	39	None	replace
67	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(1);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	60	None	replace
68	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(2);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(2);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	60	None	replace
69	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.size()  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.size()  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(args.size()  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
70	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
71	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments,  opt);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
72	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	64	None	replace
73	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(2);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(2);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	64	None	replace
74	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length  -  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.length  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length    -    1);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
75	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.length  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.length  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(args.length  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length    -    1);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
76	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  1,  arguments.length  -  1);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  1,  arguments.length  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  1,  arguments.length  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length    -    1);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
77	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	58	None	replace
78	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	58	None	replace
79	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  }  else  {  tokens.add( "-- ");  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  }  else  {  tokens.add( "-- ");  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[arguments.size()  ]);  }  else  {  tokens.add( "-- ");  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	58	None	replace
80	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList(arguments.length  +  1);	  List    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
81	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  tokens  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList(arguments.length,  arguments.length);	  List    tokens    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	8	None	replace
82	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tokens.add( "-   ");  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	1	13	add
83	[BUG]  [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  tokens.add( "-   ");  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");  tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	1	13	add
84	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	1	13	add
85	[BUG]  [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]          tokens.add(     "-     ");    tokens.add(   "-     ");  tokens.add( "-   ");  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	                tokens.add(       "-       ");        tokens.add(   "-       ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	1	13	add
86	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  }  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  }	  boolean    eatTheRest    =    true;    boolean    eatTheRest    =    true;    	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	replace
87	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if(!eatTheRest)  {  eatTheRest  =  true;  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if(!eatTheRest)  {  eatTheRest  =  true;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if(!eatTheRest)  {  eatTheRest  =  true;  }	  boolean    eatTheRest    =    true;    boolean    eatTheRest    =    true;    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
88	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  false;  }  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  false;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  false;  }	  boolean    eatTheRest    =    true;    boolean    eatTheRest    =    true;    	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	replace
89	[BUG]  [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);	          tokens.add(       "-       ");    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
90	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length  +  1);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	replace
91	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(arguments.length,  arguments.length);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	6	None	replace
92	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  boolean  eatTheRest  =  stopAtNonOption;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  boolean  eatTheRest  =  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    boolean  eatTheRest  =  stopAtNonOption;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
93	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    String[]  arguments  =  options.toArray(new  String[args.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
94	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.get(opt);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.get(opt);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    String[]  arguments  =  options.get(opt);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
95	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[arguments.length]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[arguments.length]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    String[]  arguments  =  options.toArray(new  String[arguments.length]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
96	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    String[]  arguments  =  getOptions();	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
97	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length,  tokens.length);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length,  tokens.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.length,  tokens.length);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
98	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens,  arguments.length);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens,  arguments.length);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
99	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arrays.length,  tokens.length);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arrays.length,  tokens.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arrays.length,  tokens.length);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
100	[BUG]  [BUGGY]  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  String[]  arguments  =  getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	String[]  arguments  =  getOptions();	  Boolean    eatTheRest    =    true;    String[]    arguments    =    getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	replace
101	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }	  Boolean    eatTheRest    =    true;    String[]    arguments    =    getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	replace
102	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();	  Boolean    eatTheRest    =    true;    String[]    arguments    =    getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	12	None	replace
103	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length  +  1);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.length  +  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length    +    1);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
104	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  +  2);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  +  2);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  +  2);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length    +    1);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
105	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.length  +  1);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.length  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(args.length  +  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length    +    1);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
106	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(arguments,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  tokens  =  new  ArrayList(arguments,  stopAtNonOption);	  ArrayList    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	31	None	replace
107	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  ];	  Boolean    eatTheRest    =    true;    String[]    arguments    =    new    String[tokens.size()    ];    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	13	None	replace
108	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  +  1];  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  +  1];  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;  String[]  arguments  =  new  String[tokens.size()  +  1];	  Boolean    eatTheRest    =    true;    String[]    arguments    =    new    String[tokens.size()    ];    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	13	None	replace
109	[BUG]  [BUGGY]  tokens.add( "- ".equals(arguments[0]));  [CE]  cannot  find  symbol  eatTheRest  [FE]        AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ".equals(arguments[0]));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ".equals(arguments[0]));	  tokens.add(   "-   ".equals(arguments[i]));    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	61	None	replace
110	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	49	None	replace
111	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	49	None	replace
112	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	49	None	replace
113	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  }  else  {  tokens.add( "-- ");  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  }  else  {  tokens.add( "-- ");  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  }  else  {  tokens.add( "-- ");  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	49	None	replace
114	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  <  String>  tokens  =  new  ArrayList();  }	  boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	59	None	replace
115	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  <  String>  tokens  =  new  ArrayList();  }	  boolean    eatTheRest    =    true;    List    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	59	None	replace
116	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.size());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.size());  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(args.size());	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size()    -    2);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
117	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	34	None	replace
118	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }  else  {  tokens.add( "-- ");  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }  else  {  tokens.add( "-- ");  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  getOptions();  }  else  {  tokens.add( "-- ");  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	34	None	replace
119	[BUG]  [BUGGY]  tokens.add( "-- ".equals(arg));  [CE]  cannot  find  symbol  arg  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-- ".equals(arg));  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-- ".equals(arg));	  tokens.add(   "--   ");    	non-compiled	[CE]  cannot  find  symbol  arg	43	None	replace
120	[BUG]  [BUGGY]  tokens.add( "-- ".equals(arguments[i]));  [CE]  cannot  find  symbol  i  [FE]                      ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-- ".equals(arguments[i]));  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-- ".equals(arguments[i]));	  tokens.add(   "--   ");    	non-compiled	[CE]  cannot  find  symbol  i	43	None	replace
121	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length,  arguments.length);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(arguments.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(arguments.length,  arguments.length);	  TokenBuffer    tokens    =    new    TokenBuffer(arguments.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
122	[BUG]  [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(stopAtNonOption));  [CE]  cannot  find  symbol  eatTheRest  [FE]          AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(stopAtNonOption));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ");  tokens.add( "- ".equals(stopAtNonOption));	          tokens.add(       "-       ");    tokens.add(   "-   ".equals(opt));    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	3	None	replace
123	[BUG]  [BUGGY]  tokens.add( "n ");  [CE]  cannot  find  symbol  eatTheRest  [FE]    UnrecognizedOptionException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "n ");  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "n ");	          tokens.add(       "-       ");    tokens.add(   "-       ");    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	2	None	replace
124	[BUG]  [BUGGY]  tokens.add( "-1 ");  [CE]  cannot  find  symbol  eatTheRest  [FE]      UnrecognizedOptionException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-1 ");  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-1 ");	          tokens.add(       "-       ");    tokens.add(   "-       ");    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	2	None	replace
125	[BUG]  [BUGGY]  tokens.add( "0 ");  [CE]  cannot  find  symbol  eatTheRest  [FE]        UnrecognizedOptionException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "0 ");  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "0 ");	          tokens.add(       "-       ");    tokens.add(   "-       ");    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	2	None	replace
126	[BUG]  [BUGGY]  Boolean  eatTheRest;  [CE]  variable  eatTheRest  might  not  have  been  initialized  [FE]    NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest;	  Boolean    eatTheRest    =    null;    	non-compiled	[CE]  variable  eatTheRest  might  not  have  been  initialized	53	None	replace
127	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(options.size()  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(options.size()  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(options.size()  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
128	[BUG]  [BUGGY]  tokens.add( "-   ".equals(arguments));  [CE]  cannot  find  symbol  eatTheRest  [FE]            AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-   ".equals(arguments));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-   ".equals(arguments));	  tokens.add(   "-   ".equals(option));    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	29	None	replace
129	[BUG]  [BUGGY]  tokens.add( "-   ".equals(stopAtNonOption));  [CE]  cannot  find  symbol  eatTheRest  [FE]              AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-   ".equals(stopAtNonOption));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-   ".equals(stopAtNonOption));	  tokens.add(   "-   ".equals(option));    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	29	None	replace
130	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(options.size());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(options.size());  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(options.size());	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size()    -    2);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
131	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(params.size());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(params.size());  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(params.size());	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size()    -    2);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
132	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  2);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  2);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length  -  2);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length    -    1);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
133	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  tokens  =  new  ArrayList();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  tokens  =  new  ArrayList();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  List  tokens  =  new  ArrayList();  }	  boolean    eatTheRest    =    true;    List    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	50	None	replace
134	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();  }  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  List  tokens  =  new  ArrayList();  }	  boolean    eatTheRest    =    true;    List    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	50	None	replace
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	Boolean  eatTheRest  =  stopAtNonOption;	  Boolean    eatTheRest    =    null;    	compilable	  [FE]  ComparisonFailure  	53	3	replace
136	[BUG]  [BUGGY]  Boolean  eatTheRest  =  stopAtNonOption;  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  stopAtNonOption;	  Boolean    eatTheRest    =    null;    	compilable	  [FE]  ComparisonFailure  	53	3	replace
137	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens,  options);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens,  options);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
138	[BUG]  [BUGGY]  tokens.add( "-- ".equals(arguments));  [CE]  cannot  find  symbol  eatTheRest  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-- ".equals(arguments));  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-- ".equals(arguments));	  tokens.add(   "--   ");    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	43	None	replace
139	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(options);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  tokens  =  new  ArrayList(options);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList(options);	  List    tokens    =    new    ArrayList(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	41	None	replace
140	[BUG]  [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(arguments[1]));  [CE]  cannot  find  symbol  eatTheRest  [FE]              AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ");  tokens.add( "- ".equals(arguments[1]));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ");  tokens.add( "- ".equals(arguments[1]));	          tokens.add(       "-       ");    tokens.add(   "-   ".equals(arguments[i]));    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	5	None	replace
141	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	64	None	replace
142	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.length,  arguments.length);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(args.length,  arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(args.length,  arguments.length);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
143	[BUG]  [BUGGY]  boolean  stopAtNonOption  =  null;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  stopAtNonOption  =  null;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  stopAtNonOption  =  null;	  boolean    stopAtNonOption    =    true;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	18	None	replace
144	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  getOptions();  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	34	None	replace
145	[BUG]  [BUGGY]  Integer  eatTheRest  =  true;  String[]  arguments  =  getOptions();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Integer  eatTheRest  =  true;  String[]  arguments  =  getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Integer  eatTheRest  =  true;  String[]  arguments  =  getOptions();	  Boolean    eatTheRest    =    true;    String[]    arguments    =    getOptions();    	non-compiled	[CE]  incompatible  types	12	None	replace
146	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if  (eatTheRest  ==  null)  {  eatTheRest  =  true;  }  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if  (eatTheRest  ==  null)  {  eatTheRest  =  true;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if  (eatTheRest  ==  null)  {  eatTheRest  =  true;  }	  boolean    eatTheRest    =    true;    boolean    eatTheRest    =    true;    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
147	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if  (eatTheRest  ==  null)  {  eatTheRest  =  false;  }  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if  (eatTheRest  ==  null)  {  eatTheRest  =  false;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  if  (eatTheRest  ==  null)  {  eatTheRest  =  false;  }	  boolean    eatTheRest    =    true;    boolean    eatTheRest    =    true;    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
148	[BUG]  [BUGGY]  tokens.add( "- ".equals(arguments[args.length]));  [CE]  cannot  find  symbol  args  [FE]        AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ".equals(arguments[args.length]));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ".equals(arguments[args.length]));	  tokens.add(   "-   ".equals(arguments[i]));    	non-compiled	[CE]  cannot  find  symbol  args	61	None	replace
149	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList  <  String>(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  tokens  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  tokens  =  new  ArrayList  <  String>(arguments.length);	  List    tokens    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	9	None	replace
150	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
151	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  String[]  arguments  =  options.toArray(new  String[args.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    String[]  arguments  =  options.toArray(new  String[args.size()  ]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
152	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  String[]  arguments  =  options.toArray(new  String[arguments.length]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  String[]  arguments  =  options.toArray(new  String[arguments.length]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    String[]  arguments  =  options.toArray(new  String[arguments.length]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
153	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  Options  options  =  options.getOptions();  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  Options  options  =  options.getOptions();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    Options  options  =  options.getOptions();	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
154	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  Option  options  =  options.getOption(opt);  [CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  Option  options  =  options.getOption(opt);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    Option  options  =  options.getOption(opt);	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
155	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  List  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  List  tokens  =  new  ArrayList();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    List  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
156	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  options.get(opt);  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
157	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(options);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(options);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(options);	  List    <    String>    tokens    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	20	None	replace
158	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList(arguments.length);	  ArrayList    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	37	None	replace
159	[BUG]  [BUGGY]  tokens.add( "-   "  +  StopAtNonOption);  [CE]  cannot  find  symbol  StopAtNonOption  [FE]          AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-   "  +  StopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-   "  +  StopAtNonOption);	  tokens.add(   "-   "    +    opt);    	non-compiled	[CE]  cannot  find  symbol  StopAtNonOption	28	None	replace
160	[BUG]  [BUGGY]  tokens.add( "-   "  +  stopsAtNonOption);  [CE]  cannot  find  symbol  stopsAtNonOption  [FE]            AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-   "  +  stopsAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-   "  +  stopsAtNonOption);	  tokens.add(   "-   "    +    opt);    	non-compiled	[CE]  cannot  find  symbol  stopsAtNonOption	28	None	replace
161	[BUG]  [BUGGY]  boolean  eatTheRest  =  false;  boolean  stopAtNonOption  =  stopAtNonOption;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  false;  boolean  stopAtNonOption  =  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  false;  boolean  stopAtNonOption  =  stopAtNonOption;	  Boolean    eatTheRest    =    true;    boolean    stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	62	None	replace
162	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  boolean  stopAtNonOption  =  stopAtNonOption;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  boolean  stopAtNonOption  =  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean  eatTheRest  =  false;  boolean  stopAtNonOption  =  stopAtNonOption;	  Boolean    eatTheRest    =    true;    boolean    stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	62	None	replace
163	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(4);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(4);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(4);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	60	None	replace
164	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption  >  0;  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption  >  0;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  stopAtNonOption  >  0;	  boolean    eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	56	None	replace
165	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  false;  String[]  arguments  =  options.getOptions();  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	51	None	replace
166	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(options);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(options);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(options);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	7	None	replace
167	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length,  arguments.length  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.length,  arguments.length  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.length,  arguments.length  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.length,    arguments.length);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
168	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	49	None	replace
169	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(7);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(7);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(7);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	60	None	replace
170	[BUG]  [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(6);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  List  <  String>  tokens  =  new  ArrayList  <  String>(6);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	List  <  String>  tokens  =  new  ArrayList  <  String>(6);	  List    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	60	None	replace
171	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  boolean  eatTheRest  =  false;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  boolean  eatTheRest  =  false;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    false;    boolean  eatTheRest  =  false;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	add
172	[BUG]  [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  options.get( "eatTheRest ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  false;  String[]  arguments  =  options.get( "eatTheRest ");  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    false;    String[]  arguments  =  options.get( "eatTheRest ");	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	16	None	add
173	[BUG]  [BUGGY]  Set  <  String>  tokens  =  new  HashSet();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Set  <  String>  tokens  =  new  HashSet();  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Set  <  String>  tokens  =  new  HashSet();	  ArrayList    <    String>    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
174	[BUG]  [BUGGY]  boolean  stopAtNonOption  =  stopAtNonOption;  [CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  stopAtNonOption  =  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  stopAtNonOption  =  stopAtNonOption;	  Boolean    eatTheRest    =    true;    boolean    stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  variable  stopAtNonOption  is  already  defined  in  method  flatten(Options,String[],boolean)	62	None	replace
175	[BUG]  [BUGGY]  boolean  eatTheRest  =  StopAtNonOption.stopAtNonOption;  [CE]  cannot  find  symbol  StopAtNonOption  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  StopAtNonOption.stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  StopAtNonOption.stopAtNonOption;	  boolean    eatTheRest    =    null;    	non-compiled	[CE]  cannot  find  symbol  StopAtNonOption	44	None	replace
176	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  List  <  String>  tokens  =  new  ArrayList  <  String>();  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    List  <  String>  tokens  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
177	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.get( "stopAtNonOption ");  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.get( "stopAtNonOption ");  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    String[]  arguments  =  options.get( "stopAtNonOption ");	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
178	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[0]);  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  String[]  arguments  =  options.toArray(new  String[0]);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean    eatTheRest    =    stopAtNonOption;    String[]  arguments  =  options.toArray(new  String[0]);	  	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	55	None	add
179	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  eatTheRest  =  true;  }  [CE]  cannot  find  symbol  eatTheRest  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  eatTheRest  =  true;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  Boolean  eatTheRest  =  true;  eatTheRest  =  true;  }	  Boolean    eatTheRest    =    true;    Boolean    eatTheRest    =    true;    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	10	None	replace
180	[BUG]  [BUGGY]  tokens.add( "-- ",  stopAtNonOption);  [CE]  no  suitable  method  found  for  add(String,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "-- ",  stopAtNonOption);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "-- ",  stopAtNonOption);	  tokens.add(   "--   ");    	non-compiled	[CE]  no  suitable  method  found  for  add(String,boolean)	43	None	replace
181	[BUG]  [BUGGY]  tokens.add( "- ").equals(arguments[0]));  [CE]  [FE]              AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ").equals(arguments[0]));  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ").equals(arguments[0]));	          tokens.add(       "-       ");    tokens.add(   "-   ".equals(arguments[i]));    	non-compiled	[CE]  	5	None	replace
182	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption);  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  stopAtNonOption);	  boolean    eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  ';'  expected	56	None	replace
183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	add	boolean  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;	  boolean    eatTheRest    =    stopAtNonOption;    	compilable	  [FE]  ComparisonFailure  	56	3	replace
184	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	boolean  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;	  boolean    eatTheRest    =    stopAtNonOption;    	compilable	  [FE]  ComparisonFailure  	56	3	replace
185	[BUG]  [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);	          tokens.add(       "-       ");    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
186	[BUG]  [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	tokens.add( "- ");  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);	          tokens.add(       "-       ");    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
187	[BUG]  [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eattheRest  =  null;  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    NullPointerException    [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  Boolean  eatTheRest  =  null;  Boolean  eattheRest  =  null;  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	Boolean    eatTheRest    =    null;    Boolean  eattheRest  =  null;	  	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	52	None	add
188	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  [CE]  cannot  find  symbol  eatTheRest  [FE]              ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	35	None	replace
189	[BUG]  [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  else  {  tokens.add(arguments[0]);  }  [CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  else  {  tokens.add(arguments[0]);  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(stopAtNonOption)  {  boolean  eatTheRest  =  true;  String[]  arguments  =  options.get(opt);  }  else  {  tokens.add(arguments[0]);  }	  boolean    eatTheRest    =    true;    String[]    arguments    =    options.get(opt);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  flatten(Options,String[],boolean)	35	None	replace
190	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  }  [CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]        ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  if(!stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  }  [BUGGY]        for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	if(!stopAtNonOption)  {  boolean  eatTheRest  =  true;  boolean  eatTheRest  =  true;  }	  boolean    eatTheRest    =    true;    boolean    eatTheRest    =    true;    	non-compiled	[CE]  variable  eatTheRest  is  already  defined  in  method  flatten(Options,String[],boolean)	32	None	replace
191	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(7);  [CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]            ComparisonFailure      [CONTEXT]      {  List  tokens  =  new  ArrayList();      [BUGGY]  ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(7);  [BUGGY]      boolean  eatTheRest  =  false;  for  (int  i  =  0;  i  <  arguments.length;  i++)  {  String  arg  =  arguments[i];  if  (     "--     ".equals(arg))  {  eatTheRest  =  true;  tokens.add(     "--     ");  }  [CLASS]  GnuParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  List  tokens  String[]  arguments  String  arg  opt  int  i  	projects/Cli12/src/java/org/apache/commons/cli/GnuParser.java	0.4629100498862757	56	56	3	replace	ArrayList  <  String>  tokens  =  new  ArrayList  <  String>(7);	  ArrayList    <    String>    tokens    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  flatten(Options,String[],boolean)	64	None	replace
