bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(Double.NaN,  nextGaussian);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  this(Double.NaN,  nextGaussian);  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(Double.NaN,  nextGaussian);	      this(nextGaussian,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  this(nextGaussian,  Double.NaN,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  this(nextGaussian,  Double.NaN,  1);  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  Double.NaN,  1);	      this(nextGaussian,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  super(nextGaussian);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  super(nextGaussian);  [BUGGY]      [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	super(nextGaussian);	  super();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY;	      nextGaussian    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]      nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	add	        nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	1	3	add
6	[BUG]  [BUGGY]      nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]      nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	        nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	1	3	add
7	[BUG]  [BUGGY]      nextGaussian  =  Double.NaN;  NextGaussian  =  Double.NaN;  [CE]  cannot  find  symbol  NextGaussian  [FE]      AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]      nextGaussian  =  Double.NaN;  NextGaussian  =  Double.NaN;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	        nextGaussian    =    Double.NaN;    NextGaussian  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  NextGaussian	1	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]      this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	add	        this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
9	[BUG]  [BUGGY]      this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]      this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	        this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
10	[BUG]  [BUGGY]      this.nextGaussian  =  Double.POSITIVE_INFINITY;  This.nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]      this.nextGaussian  =  Double.POSITIVE_INFINITY;  This.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	        this.nextGaussian    =    Double.POSITIVE_INFINITY;    This.nextGaussian  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  This	8	None	add
11	[BUG]  [BUGGY]  this(nextGaussian,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  this(nextGaussian,  Double.POSITIVE_INFINITY);  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  Double.POSITIVE_INFINITY);	      this(nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  super().nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  super().nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	super().nextGaussian  =  Double.POSITIVE_INFINITY;	  super();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]      this.nextGaussian  =  Double.POSITIVE_INFINITY;  super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]      this.nextGaussian  =  Double.POSITIVE_INFINITY;  super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	        this.nextGaussian    =    Double.POSITIVE_INFINITY;    super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	add
14	[BUG]  [BUGGY]  this(nextGaussian,  nextGaussian);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  this(nextGaussian,  nextGaussian);  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  nextGaussian);	      this(nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY;	      nextGaussian    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
