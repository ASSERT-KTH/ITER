bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	add	nextGaussian  =  Double.POSITIVE_INFINITY;	nextGaussian  =  Double.NaN;  	compilable	  [FE]  AssertionError  	31	3	replace
2	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY;	nextGaussian  =  Double.NaN;  	compilable	  [FE]  AssertionError  	31	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    [BUGGY]  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	add	  	nextGaussian  =  Double.NaN;  	compilable	  [FE]  AssertionError  	31	3	replace
4	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    [BUGGY]  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	  	nextGaussian  =  Double.NaN;  	compilable	  [FE]  AssertionError  	31	3	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    super();  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	add	    super();		compilable	  [FE]  AssertionError  	32	3	add
6	[BUG]  [BUGGY]    super();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    super();  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	    super();		compilable	  [FE]  AssertionError  	32	3	add
7	[BUG]  [BUGGY]    this(null);  [CE]  constructor  BitsStreamGenerator  in  class  BitsStreamGenerator  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    this(null);  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	    this(null);		non-compiled	[CE]  constructor  BitsStreamGenerator  in  class  BitsStreamGenerator  cannot  be  applied  to  given  types;	32	None	add
8	[BUG]  [BUGGY]    this(nextGaussian);  [CE]  cannot  reference  nextGaussian  before  supertype  constructor  has  been  called  [FE]        AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    this(nextGaussian);  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	    this(nextGaussian);		non-compiled	[CE]  cannot  reference  nextGaussian  before  supertype  constructor  has  been  called	32	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    super();  this.nextGaussian  =  Double.NaN;  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	add	    super();  this.nextGaussian  =  Double.NaN;		compilable	  [FE]  AssertionError  	32	3	add
10	[BUG]  [BUGGY]    super();  this.nextGaussian  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    super();  this.nextGaussian  =  Double.NaN;  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	    super();  this.nextGaussian  =  Double.NaN;		compilable	  [FE]  AssertionError  	32	3	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	add	    super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;		compilable	  [FE]  AssertionError  	32	3	add
12	[BUG]  [BUGGY]    super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]    super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]  nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	    super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;		compilable	  [FE]  AssertionError  	32	3	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	add	nextGaussian  =  Double.NEGATIVE_INFINITY;	nextGaussian  =  Double.NaN;  	compilable	  [FE]  AssertionError  	31	3	replace
14	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  BitsStreamGenerator()  {  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]  }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	38	38	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY;	nextGaussian  =  Double.NaN;  	compilable	  [FE]  AssertionError  	31	3	replace
