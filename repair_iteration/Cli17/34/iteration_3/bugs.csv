bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    option;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    option;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength];  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength];	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    option;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    options.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
5	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    options.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
6	[BUG]  [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  +  2);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(token);  currentOption  =  options.getOption(tokenLength  +  2);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
7	[BUG]  [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  +  3);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(token);  currentOption  =  options.getOption(tokenLength  +  3);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
8	[BUG]  [BUGGY]  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength  +  1);	  tokens.add(tokenLength);    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
9	[BUG]  [BUGGY]  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength  -  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength  -  1);	  tokens.add(tokenLength);    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
10	[BUG]  [BUGGY]  return(tokenLength  <  1)?  options.get(tokenLength  -  1):  arguments[1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  <  1)?  options.get(tokenLength  -  1):  arguments[1];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  <  1)?  options.get(tokenLength  -  1):  arguments[1];	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    arguments[1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(0):  arguments[1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(0):  arguments[1];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(0):  arguments[1];	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    arguments[1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  return(tokenLength  <  2)?  options.get(tokenLength  -  1):  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  <  2)?  options.get(tokenLength  -  1):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  <  2)?  options.get(tokenLength  -  1):  null;	  return(tokenLength    <    1)?    options.get(tokenLength    -    1):    null;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
13	[BUG]  [BUGGY]  return(tokenLength  <  1)?  options.get(0):  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  <  1)?  options.get(0):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  <  1)?  options.get(0):  null;	  return(tokenLength    <    1)?    options.get(tokenLength    -    1):    null;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
14	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tos[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tos[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tos[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tos[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
15	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tos[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tos[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tos[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tos[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
16	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  2];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  2];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  2];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength    +    1];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(iter.next());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(iter.next());	  tokens.add(iter.next());    continue;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
18	[BUG]  [BUGGY]  tokens.add(iter.next().toString());  continue;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(iter.next().toString());  continue;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(iter.next().toString());  continue;	  tokens.add(iter.next());    continue;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
19	[BUG]  [BUGGY]  tokens.add(iter.next().toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(iter.next().toString());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(iter.next().toString());	  tokens.add(iter.next());    continue;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
20	[BUG]  [BUGGY]  options.add(arguments[tokenLength]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options.add(arguments[tokenLength]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options.add(arguments[tokenLength]);	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    else    {    tokens.add(arguments[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
21	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(0):  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(0):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(0):  null;	  return(tokenLength    >    0)?    options.get(0):    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
22	[BUG]  [BUGGY]  return(tokenLength  >  0)?  options.get(1):  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  0)?  options.get(1):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  0)?  options.get(1):  null;	  return(tokenLength    >    0)?    options.get(0):    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
23	[BUG]  [BUGGY]  return(tokenLength  ==  0)?  options.get(0):  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  ==  0)?  options.get(0):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  ==  0)?  options.get(0):  null;	  return(tokenLength    >    0)?    options.get(0):    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
24	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(0):  arguments[0];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(0):  arguments[0];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(0):  arguments[0];	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    arguments[0];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  return(tokenLength  <  1)?  options.get(tokenLength  -  1):  arguments[0];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  <  1)?  options.get(tokenLength  -  1):  arguments[0];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  <  1)?  options.get(tokenLength  -  1):  arguments[0];	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    arguments[0];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    argument.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
27	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    argument.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
28	[BUG]  [BUGGY]  return  options.toArray(arguments):  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments):  null;	  return    stopsAtNonOption?    options.toArray(arguments):    null;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
29	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  currentOption.getOption( "stopAtNonOption ");  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  currentOption.getOption( "stopAtNonOption ");	  Option    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
30	[BUG]  [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ",  arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ",  arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption( "stopAtNonOption ",  arguments);	  Option    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
31	[BUG]  [BUGGY]  iter.add(arguments[1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.add(arguments[1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.add(arguments[1]);	  iter.add(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  iter.add(arguments[0].toLowerCase());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.add(arguments[0].toLowerCase());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.add(arguments[0].toLowerCase());	  iter.add(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  iter.add(arguments[0],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.add(arguments[0],  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.add(arguments[0],  stopAtNonOption);	  iter.add(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  tokens.add(arguments[0],  arguments[1].toLowerCase());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0],  arguments[1].toLowerCase());  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0],  arguments[1].toLowerCase());	  tokens.add(arguments[0],    arguments[1]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
35	[BUG]  [BUGGY]  tokens.add(arguments[0],  arguments[2]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0],  arguments[2]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0],  arguments[2]);	  tokens.add(arguments[0],    arguments[1]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
36	[BUG]  [BUGGY]  tokens.add(arguments[0],  arguments[1]  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0],  arguments[1]  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0],  arguments[1]  +  1);	  tokens.add(arguments[0],    arguments[1]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
37	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  arguments,  0,  tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  arguments,  0,  tokenLength);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  arguments,  0,  tokenLength);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  tokens.add(arguments[0].toLowerCase());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0].toLowerCase());  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0].toLowerCase());	  tokens.add(arguments[0].trim());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
41	[BUG]  [BUGGY]  tokens.add(arguments[1].trim());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[1].trim());  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[1].trim());	  tokens.add(arguments[0].trim());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
42	[BUG]  [BUGGY]  tokens.add(arguments[0].trim(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0].trim(),  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0].trim(),  stopAtNonOption);	  tokens.add(arguments[0].trim());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
43	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[0];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[0];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[0];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
44	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[1];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[1];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[1];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
45	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[0];  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[0];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[0];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[0];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  iter.remove(arguments[1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.remove(arguments[1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.remove(arguments[1]);	  iter.remove(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
47	[BUG]  [BUGGY]  Option  currentOption  =  options.get(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.get(tokenLength  -  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.get(tokenLength  -  1);	  if(!stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
48	[BUG]  [BUGGY]  Option  currentOption  =  options.get(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.get(tokenLength  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.get(tokenLength  +  1);	  if(!stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
49	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption);	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(arguments);	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
51	[BUG]  [BUGGY]  tokens.clear();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.clear();	  iter.clear();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(token,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(token,  stopAtNonOption);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
53	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(token);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  currentOption.getOption(token);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  currentOption.getOption(token);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
54	[BUG]  [BUGGY]  return  stopAtNonOption?  options.toString(arguments[0]):  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  stopAtNonOption?  options.toString(arguments[0]):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  stopAtNonOption?  options.toString(arguments[0]):  null;	  return    stopAtNonOption?    options.toString(arguments):    null;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
55	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  currentOption.getOption(token);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  currentOption.getOption(token);	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
56	[BUG]  [BUGGY]  Options  options  =  currentOption.getOption(token);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Options  options  =  currentOption.getOption(token);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Options  options  =  currentOption.getOption(token);	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
57	[BUG]  [BUGGY]  options  =  currentOption.getOption(token);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options  =  currentOption.getOption(token);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options  =  currentOption.getOption(token);	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
58	[BUG]  [BUGGY]  options  =  options.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options  =  options.getOption(tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options  =  options.getOption(tokenLength);	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
59	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    option[i];    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
60	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option[i];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  option[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    option[i];    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
61	[BUG]  [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  2);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  2);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
62	[BUG]  [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1  +  1);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
63	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
64	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  currentOption.getOption(tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  currentOption.getOption(tokenLength);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
66	[BUG]  [BUGGY]  Options  options  =  currentOption.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Options  options  =  currentOption.getOption(tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Options  options  =  currentOption.getOption(tokenLength);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
67	[BUG]  [BUGGY]  options  =  currentOption.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options  =  currentOption.getOption(tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options  =  currentOption.getOption(tokenLength);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
68	[BUG]  [BUGGY]  options  =  options.getOption(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options  =  options.getOption(tokenLength  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options  =  options.getOption(tokenLength  +  1);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
69	[BUG]  [BUGGY]  Option  options  =  currentOption.get(tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  currentOption.get(tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  currentOption.get(tokenLength);	  Option    options    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
70	[BUG]  [BUGGY]  Option  options  =  options.get(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.get(tokenLength  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.get(tokenLength  +  1);	  Option    options    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
71	[BUG]  [BUGGY]  Option  options  =  options.get(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.get(0);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.get(0);	  Option    options    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
72	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
73	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
74	[BUG]  [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength,  arguments.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength,  arguments.length);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(token);  currentOption  =  options.getOption(tokenLength,  arguments.length);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
75	[BUG]  [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1,  stopAtNonOption);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
76	[BUG]  [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength,  iter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(token);  currentOption  =  options.getOption(tokenLength,  iter);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(token);  currentOption  =  options.getOption(tokenLength,  iter);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
77	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)/  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)/  1;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength)/  1;	  Option    currentOption    =    options.getOption(tokenLength)+    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
78	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)+  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)+  2;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength)+  2;	  Option    currentOption    =    options.getOption(tokenLength)+    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
79	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)-  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)-  1;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength)-  1;	  Option    currentOption    =    options.getOption(tokenLength)+    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
80	[BUG]  [BUGGY]  options.add(arguments[0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options.add(arguments[0]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options.add(arguments[0]);	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    else    {    tokens.add(arguments[0]);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
81	[BUG]  [BUGGY]  tokens.add(arguments[1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[1]);	  tokens.add(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
82	[BUG]  [BUGGY]  tokens.add(arguments[0],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0],  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0],  stopAtNonOption);	  tokens.add(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
83	[BUG]  [BUGGY]  options.add(arguments);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options.add(arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options.add(arguments);	  options.add(token);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
84	[BUG]  [BUGGY]  options.add(arguments[0],  arguments[1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options.add(arguments[0],  arguments[1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options.add(arguments[0],  arguments[1]);	  options.add(token);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
85	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): ", ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): ", ";  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(tokenLength  -  1): ", ";	  return(tokenLength    >    0)?    options.get(tokenLength    -    1):   ",   ";    	non-compiled	[CE]  <identifier>  expected	43	None	replace
86	[BUG]  [BUGGY]  tokens.add(arguments[tokenLength  -  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[tokenLength  -  1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[tokenLength  -  1]);	  tokens.add(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
87	[BUG]  [BUGGY]  tokens.add(arguments[tokenLength  +  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[tokenLength  +  1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[tokenLength  +  1]);	  tokens.add(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
88	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }	  return    options.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
89	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add(arguments[0]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add(arguments[0]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add(arguments[0]);  }	  return    options.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
90	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add( "n ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add( "n ");  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add( "n ");  }	  return    options.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
91	[BUG]  [BUGGY]  return(tokenLength  >  0)?  options.get(tokenLength  -  1): "  <   ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  0)?  options.get(tokenLength  -  1): "  <   ";  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  0)?  options.get(tokenLength  -  1): "  <   ";	  return(tokenLength    >    0)?    options.get(tokenLength    -    1):   "n   ";    	non-compiled	[CE]  <identifier>  expected	66	None	replace
92	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): "none ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): "none ";  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(tokenLength  -  1): "none ";	  return(tokenLength    >    0)?    options.get(tokenLength    -    1):   "n   ";    	non-compiled	[CE]  <identifier>  expected	66	None	replace
93	[BUG]  [BUGGY]  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  Option    currentOption    =    options.getOption(tokenLength);    tokens    =    new    String[currentOption.length];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
94	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength);  tokens  =  new  String[currentOption.length  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength);  tokens  =  new  String[currentOption.length  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength);  tokens  =  new  String[currentOption.length  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  Option    currentOption    =    options.getOption(tokenLength);    tokens    =    new    String[currentOption.length];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
95	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1);  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1);  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  1);  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  Option    currentOption    =    options.getOption(tokenLength);    tokens    =    new    String[currentOption.length];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
96	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): " ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): " ",  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(tokenLength  -  1): " ",  stopAtNonOption);	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):   "       ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
97	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  currentOption.getOptions();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  currentOption.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
98	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptions();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Options  options  =  currentOption.getOptions();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Options  options  =  currentOption.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
99	[BUG]  [BUGGY]  Option  options  =(Option)iter.next();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =(Option)iter.next();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =(Option)iter.next();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
100	[BUG]  [BUGGY]  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options  =  options.getOptions();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options  =  options.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
101	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  iter  =  arguments.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
102	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  iter  =  tokens.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
103	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  iter  =  currentOption.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  iter  =  currentOption.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
104	[BUG]  [BUGGY]  return(tokenLength  ==  1)?  options.get(tokenLength  -  1):  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  ==  1)?  options.get(tokenLength  -  1):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  ==  1)?  options.get(tokenLength  -  1):  null;	  return(tokenLength    ==    0)?    options.get(tokenLength    -    1):    null;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
105	[BUG]  [BUGGY]  return(tokenLength  ==  2)?  options.get(tokenLength  -  1):  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  ==  2)?  options.get(tokenLength  -  1):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  ==  2)?  options.get(tokenLength  -  1):  null;	  return(tokenLength    ==    0)?    options.get(tokenLength    -    1):    null;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
106	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.get(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.get(tokenLength  -  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.get(tokenLength  -  1);	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);	  System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  tokens,  1,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  System.arraycopy(arguments,  0,  tokens,  1,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	System.arraycopy(arguments,  0,  tokens,  1,  stopAtNonOption);	  System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  tokens,  0,  currentOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  System.arraycopy(arguments,  0,  tokens,  0,  currentOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	System.arraycopy(arguments,  0,  tokens,  0,  currentOption);	  System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption,  options.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption,  options.length);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption,  options.length);	  System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
111	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.getOption(tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.getOption(tokenLength);	  Option    <?>    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
112	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.getOption(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.getOption(token,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.getOption(token,  stopAtNonOption);	  Option    <?>    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
113	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.getOption(arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.getOption(arguments);	  Option    <?>    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
114	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.get(tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.get(tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.get(tokenLength);	  Option    <?>    currentOption    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
115	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.get(arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.get(arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.get(arguments);	  Option    <?>    currentOption    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
116	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.get(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.get(0);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.get(0);	  Option    <?>    currentOption    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
117	[BUG]  [BUGGY]  Option  options  =  options.get(tokenLength  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.get(tokenLength  -  2);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.get(tokenLength  -  2);	  Option    options    =    options.get(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
118	[BUG]  [BUGGY]  Option  options  =  options.get(tokenLength  -  1  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.get(tokenLength  -  1  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.get(tokenLength  -  1  +  1);	  Option    options    =    options.get(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
119	[BUG]  [BUGGY]  Options  options  =  options.get(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Options  options  =  options.get(tokenLength  -  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Options  options  =  options.get(tokenLength  -  1);	  Option    options    =    options.get(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
120	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    argument.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
121	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    argument.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
122	[BUG]  [BUGGY]  return  options.toArray(stopAtNonOption):  arguments;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(stopAtNonOption):  arguments;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(stopAtNonOption):  arguments;	  return    stopAtNonOption?    options.toArray(arguments):    arguments;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
123	[BUG]  [BUGGY]  return  options.toArray(arguments):  stopAtNonOption;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments):  stopAtNonOption;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments):  stopAtNonOption;	  return    stopAtNonOption?    options.toArray(arguments):    arguments;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
124	[BUG]  [BUGGY]  return  arguments.toArray(stopAtNonOption):  stopAtNonOption;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  arguments.toArray(stopAtNonOption):  stopAtNonOption;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  arguments.toArray(stopAtNonOption):  stopAtNonOption;	  return    stopAtNonOption?    options.toArray(arguments):    arguments;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
125	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(tokenLength  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(tokenLength  +  1);	  Option    option    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
126	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(tokenLength  -  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(tokenLength  -  1);	  Option    option    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
127	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(stopAtNonOption):  null;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(stopAtNonOption):  null;  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(stopAtNonOption):  null;  }	  return    options.toArray(stopAtNonOption):    null;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
128	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(stopAtNonOption):  null;  }  else  {  tokens.add(arguments[0]);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(stopAtNonOption):  null;  }  else  {  tokens.add(arguments[0]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(stopAtNonOption):  null;  }  else  {  tokens.add(arguments[0]);  }	  return    options.toArray(stopAtNonOption):    null;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
129	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  *  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  *  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  *  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength    -    1];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
130	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  2];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  2];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  2];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength    -    1];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
131	[BUG]  [BUGGY]  Option  currentOption  =  options.get(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.get(0);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.get(0);	  Option    currentOption    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
132	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  options.get(tokenLength);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  options.get(tokenLength);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  Option  currentOption  =  options.get(tokenLength);  }	  Option    currentOption    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.toArray(new  Option(tokenLength,  stopAtNonOption));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.toArray(new  Option(tokenLength,  stopAtNonOption));  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.toArray(new  Option(tokenLength,  stopAtNonOption));	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.toArray(new  Option(tokenLength));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.toArray(new  Option(tokenLength));  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.toArray(new  Option(tokenLength));	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
135	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(stopAtNonOption,  arguments);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
136	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(currentOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(currentOption);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
137	[BUG]  [BUGGY]  iter.write(arguments[1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.write(arguments[1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.write(arguments[1]);	  iter.write(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
138	[BUG]  [BUGGY]  iter.write(arguments[0].toLowerCase());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.write(arguments[0].toLowerCase());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.write(arguments[0].toLowerCase());	  iter.write(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
139	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(arguments);  }	  return    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
140	[BUG]  [BUGGY]  return  options.toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments,  stopAtNonOption);	  return    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
141	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
142	[BUG]  [BUGGY]  iter.remove();  tokens.add(arguments[1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.remove();  tokens.add(arguments[1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.remove();  tokens.add(arguments[1]);	  iter.remove();    tokens.add(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
143	[BUG]  [BUGGY]  return  options.toArray(arguments[tokenLength  -  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments[tokenLength  -  1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments[tokenLength  -  1]);	  return    options.toArray(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
144	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }	  return    options.toArray(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
145	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[0];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[0];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[0];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    options[0];    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
146	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[1];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[1];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    options[0];    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
147	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[0];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[0];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[0];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    options[0];    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
148	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  1,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  1,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  1,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    1,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
149	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  1,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  1,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  1,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    1,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
150	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  <  String>  iter  =  arguments.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
151	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  currentOption.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  <  String>  iter  =  currentOption.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
152	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  <  String>  iter  =  tokens.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
153	[BUG]  [BUGGY]  tokens.add(new  String[tokenLength]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(new  String[tokenLength]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(new  String[tokenLength]);	  if(tokenLength    ==    2)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
154	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
155	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  null;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  null;  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    null;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
156	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    options.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
157	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    options.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
158	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  1);	  Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
159	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  1);	  Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
160	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    argument.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
161	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  argument.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    argument.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
162	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    options.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
163	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  for(int  i  =  0,  len  =  options.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength];    for(int    i    =    0,    len    =    options.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
164	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
165	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  -  1];  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  -  1];  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  -  1];  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
166	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  tokens,  0,  stopAtNonOption);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
167	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  1];  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
168	[BUG]  [BUGGY]  tokens.add(arguments[1].toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[1].toString());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[1].toString());	  tokens.add(arguments[0].toString());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
169	[BUG]  [BUGGY]  tokens.add(arguments[0].toString(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0].toString(),  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0].toString(),  stopAtNonOption);	  tokens.add(arguments[0].toString());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
170	[BUG]  [BUGGY]  tokens.add(arguments[0].toString()  + ", ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0].toString()  + ", ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0].toString()  + ", ");	  tokens.add(arguments[0].toString());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
171	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength);  }	  tokens.add(tokenLength);    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
172	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(tokenLength,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(tokenLength,  stopAtNonOption);	  Option    option    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
173	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): "n ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  1): "n ";  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(tokenLength  -  1): "n ";	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):   "       ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
174	[BUG]  [BUGGY]  return  options.toArray(arguments[0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments[0]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments[0]);	  return    options.toArray(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
175	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }  else  {  tokens.add(arguments[tokenLength]);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }  else  {  tokens.add(arguments[tokenLength]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }  else  {  tokens.add(arguments[tokenLength]);  }	  return    options.toArray(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
176	[BUG]  [BUGGY]  return(tokenLength  >  2)?  options.get(tokenLength  -  1):  arguments[0];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  2)?  options.get(tokenLength  -  1):  arguments[0];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  2)?  options.get(tokenLength  -  1):  arguments[0];	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    arguments[1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
177	[BUG]  [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption "  +  tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption "  +  tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption( "stopAtNonOption "  +  tokenLength);	  Option    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
178	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(token)+  1;	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
179	[BUG]  [BUGGY]  iter.add( "n ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.add( "n ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.add( "n ");	  iter.clear();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
180	[BUG]  [BUGGY]  return(tokenLength  >  2)?  options.get(tokenLength  -  1):  arguments[1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  2)?  options.get(tokenLength  -  1):  arguments[1];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  2)?  options.get(tokenLength  -  1):  arguments[1];	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    arguments[0];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
181	[BUG]  [BUGGY]  return  options.toArray(arguments,  stopAtNonOption):  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments,  stopAtNonOption):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments,  stopAtNonOption):  null;	  return    options.toArray(stopAtNonOption):    null;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
182	[BUG]  [BUGGY]  return  options.toArray(stopAtNonOption):  new  String[tokenLength];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(stopAtNonOption):  new  String[tokenLength];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(stopAtNonOption):  new  String[tokenLength];	  return    options.toArray(stopAtNonOption):    null;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
183	[BUG]  [BUGGY]  return  stopAtNonOption?  options.toArray(arguments):  options.toArray(arguments);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  stopAtNonOption?  options.toArray(arguments):  options.toArray(arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  stopAtNonOption?  options.toArray(arguments):  options.toArray(arguments);	  return    stopAtNonOption?    options.toArray(arguments):    arguments;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
184	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength];  System.arraycopy(arguments,  0,  tokens,  0,  tokenLength  +  1);	  tokens    =    new    String[tokenLength];    System.arraycopy(arguments,    0,    tokens,    0,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption,  tokenLength);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption,  tokenLength);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	System.arraycopy(arguments,  0,  arguments,  0,  stopAtNonOption,  tokenLength);	  System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
186	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);	  Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
187	[BUG]  [BUGGY]  Option  options  =  options.toArray(new  Option(tokenLength));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.toArray(new  Option(tokenLength));  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.toArray(new  Option(tokenLength));	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
188	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  2):  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(tokenLength  -  2):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(tokenLength  -  2):  null;	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    null;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
189	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  iter  =  currentOption.options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
190	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  iter  =  options.values().iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
191	[BUG]  [BUGGY]  return(tokenLength  >  1)?  options.get(1):  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  1)?  options.get(1):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  1)?  options.get(1):  null;	  return(tokenLength    >    0)?    options.get(0):    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
192	[BUG]  [BUGGY]  tokens.add(arguments[0].toString()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0].toString()  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0].toString()  +  1);	  tokens.add(arguments[0].toString());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
193	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  tokens.add(token);  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  }	  tokens.add(token);    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
194	[BUG]  [BUGGY]  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(tokenLength);  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
195	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(stopAtNonOption)  {  tokens.add(token);  currentOption  =  options.getOption(tokenLength  -  1);  }	  tokens.add(token);    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
196	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.get(arguments[0]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.get(arguments[0]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.get(arguments[0]);	  Option    <?>    currentOption    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
197	[BUG]  [BUGGY]  tokens.add(arguments[0],  arguments[1]  +  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0],  arguments[1]  +  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0],  arguments[1]  +  stopAtNonOption);	  tokens.add(arguments[0],    arguments[1]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
198	[BUG]  [BUGGY]  return(tokenLength  >=  1)?  options.get(tokenLength  -  1):  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >=  1)?  options.get(tokenLength  -  1):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >=  1)?  options.get(tokenLength  -  1):  null;	  return(tokenLength    <    1)?    options.get(tokenLength    -    1):    null;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
199	[BUG]  [BUGGY]  return(tokenLength  >  0)?  options.get(tokenLength  -  1): "[ ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >  0)?  options.get(tokenLength  -  1): "[ ";  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >  0)?  options.get(tokenLength  -  1): "[ ";	  return(tokenLength    >    0)?    options.get(tokenLength    -    1):   "n   ";    	non-compiled	[CE]  <identifier>  expected	66	None	replace
200	[BUG]  [BUGGY]  return  options.toString(arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toString(arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toString(arguments);	  return    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
201	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  tokenLength);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  tokenLength);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(stopAtNonOption,  tokenLength);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
202	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  currentOption.options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  <  String>  iter  =  currentOption.options.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
203	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
204	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength);  tokens  =  new  String[currentOption.length];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength);  tokens  =  new  String[currentOption.length];  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength);  tokens  =  new  String[currentOption.length];	  Option    currentOption    =    options.getOption(tokenLength);    tokens    =    new    String[currentOption.length];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
205	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  1);  tokens  =  new  String[currentOption.length];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  tokens[i]  =  options[i];  }	  Option    currentOption    =    options.getOption(tokenLength);    tokens    =    new    String[currentOption.length];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    tokens[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
206	[BUG]  [BUGGY]  tokens  =  new  String[tokenLength  +  3];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens  =  new  String[tokenLength  +  3];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens  =  new  String[tokenLength  +  3];  for(int  i  =  0,  len  =  arguments.length;  i  <  len;  i++)  {  options[i]  =  options[i];  }	  tokens    =    new    String[tokenLength    +    1];    for(int    i    =    0,    len    =    arguments.length;    i    <    len;    i++)    {    options[i]    =    options[i];    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
207	[BUG]  [BUGGY]  Option  options  =  options.getOption(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(tokenLength  -  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption(tokenLength  -  1);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
208	[BUG]  [BUGGY]  Option  options  =  options.getOption(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(tokenLength  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption(tokenLength  +  1);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
209	[BUG]  [BUGGY]  Option  options  =  options.getOption(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(tokenLength,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption(tokenLength,  stopAtNonOption);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
210	[BUG]  [BUGGY]  tokens.add(iter.next(),  stopAtNonOption);  continue;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(iter.next(),  stopAtNonOption);  continue;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(iter.next(),  stopAtNonOption);  continue;	  tokens.add(iter.next());    continue;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
211	[BUG]  [BUGGY]  tokens.add(iter.next(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(iter.next(),  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(iter.next(),  stopAtNonOption);	  tokens.add(iter.next());    continue;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
212	[BUG]  [BUGGY]  tryFallThrough(stopAtNonOption)  {  return  options.toArray(new  String[tokenLength]);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tryFallThrough(stopAtNonOption)  {  return  options.toArray(new  String[tokenLength]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tryFallThrough(stopAtNonOption)  {  return  options.toArray(new  String[tokenLength]);  }	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
213	[BUG]  [BUGGY]  tryFallThrough(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tryFallThrough(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tryFallThrough(stopAtNonOption)  {  return  options.toArray(arguments[tokenLength]);  }	  if(stopAtNonOption)    {    return    options.toArray(new    String[tokenLength]);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
214	[BUG]  [BUGGY]  return(tokenLength  >=  1)?  options.get(tokenLength  -  1):  arguments[0];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  >=  1)?  options.get(tokenLength  -  1):  arguments[0];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  >=  1)?  options.get(tokenLength  -  1):  arguments[0];	  return(tokenLength    >    1)?    options.get(tokenLength    -    1):    arguments[0];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
215	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments[0]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(arguments[0]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption(arguments[0]);	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
216	[BUG]  [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ").toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ").toLowerCase();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption( "stopAtNonOption ").toLowerCase();	  Option    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
217	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(arguments[0]);	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
218	[BUG]  [BUGGY]  tokens.add(arguments[0].trim()).toLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0].trim()).toLowerCase();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0].trim()).toLowerCase();	  tokens.add(arguments[0].trim());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
219	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  iter  =  this.options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
220	[BUG]  [BUGGY]  return  options.toArray(arguments[stopAtNonOption]):  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments[stopAtNonOption]):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments[stopAtNonOption]):  null;	  return    options.toArray(stopAtNonOption):    null;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
221	[BUG]  [BUGGY]  return  options.toArray(arguments[0]):  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments[0]):  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments[0]):  null;	  return    options.toArray(stopAtNonOption):    null;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
222	[BUG]  [BUGGY]  iter.close();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  iter.close();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	iter.close();	  iter.clear();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
223	[BUG]  [BUGGY]  return  stopAtNonOption?  options.toString(arguments):  arguments;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  stopAtNonOption?  options.toString(arguments):  arguments;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  stopAtNonOption?  options.toString(arguments):  arguments;	  return    stopAtNonOption?    options.toArray(arguments):    arguments;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
224	[BUG]  [BUGGY]  return  stopAtNonOption?  options.toArray(arguments):  arguments[0];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  stopAtNonOption?  options.toArray(arguments):  arguments[0];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  stopAtNonOption?  options.toArray(arguments):  arguments[0];	  return    stopAtNonOption?    options.toArray(arguments):    arguments;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
225	[BUG]  [BUGGY]  tokens.add(arguments[0],  arguments[1]).toLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0],  arguments[1]).toLowerCase();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0],  arguments[1]).toLowerCase();	  tokens.add(arguments[0],    arguments[1]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
226	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(!stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(!stopAtNonOption)  {  return  options.toArray(new  String[0]);  }	  return    options.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
227	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add(arguments[0]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  if(!stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add(arguments[0]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	if(!stopAtNonOption)  {  return  options.toArray(new  String[0]);  }  else  {  tokens.add(arguments[0]);  }	  return    options.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
228	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  iter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  iter);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength,  iter);	  Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
229	[BUG]  [BUGGY]  Option  options  =  options.getOption(tokenLength,  iter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(tokenLength,  iter);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  options.getOption(tokenLength,  iter);	  Option    options    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
230	[BUG]  [BUGGY]  tokens.add(tokenLength  -  1);  currentOption  =  options.getOption(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(tokenLength  -  1);  currentOption  =  options.getOption(tokenLength  -  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(tokenLength  -  1);  currentOption  =  options.getOption(tokenLength  -  1);	  tokens.add(token);    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
231	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenLength,  iter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(tokenLength,  iter);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(tokenLength,  iter);	  Option    option    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
232	[BUG]  [BUGGY]  Option  options  =  iter.getOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  options  =  iter.getOptions();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  options  =  iter.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  tokens,  2,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  System.arraycopy(arguments,  0,  tokens,  2,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	System.arraycopy(arguments,  0,  tokens,  2,  stopAtNonOption);	  System.arraycopy(arguments,    0,    tokens,    0,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
234	[BUG]  [BUGGY]  return  options.toArray(arguments[tokenLength  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments[tokenLength  +  1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments[tokenLength  +  1]);	  return    options.toArray(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
235	[BUG]  [BUGGY]  tokens.add(arguments[0].getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  tokens.add(arguments[0].getName());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	tokens.add(arguments[0].getName());	  tokens.add(arguments[0].toString());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
236	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)/  2  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength)/  2  +  1;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  currentOption  =  options.getOption(tokenLength)/  2  +  1;	  Option    currentOption    =    options.getOption(tokenLength)+    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
237	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Iterator  <  String>  iter  =  this.options.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
238	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  option  =  options.getOption(arguments);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
239	[BUG]  [BUGGY]  return(tokenLength  ==  0)?  options.get(tokenLength  -  1):  arguments[1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return(tokenLength  ==  0)?  options.get(tokenLength  -  1):  arguments[1];  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return(tokenLength  ==  0)?  options.get(tokenLength  -  1):  arguments[1];	  return(tokenLength    >    0)?    options.get(tokenLength    -    1):    arguments[1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
240	[BUG]  [BUGGY]  options.add(arguments[0].toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  options.add(arguments[0].toString());  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	options.add(arguments[0].toString());	  options.add(token);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
241	[BUG]  [BUGGY]  return  options.toArray(arguments)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  return  options.toArray(arguments)+  1;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	return  options.toArray(arguments)+  1;	  return    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
242	[BUG]  [BUGGY]  Option  <?>  currentOption  =  options.getOption(arguments[0]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  process(token);  }  else  {  tokens.add(token);  }  }  gobble(iter);      [BUGGY]  Option  <?>  currentOption  =  options.getOption(arguments[0]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	161	161	1	replace	Option  <?>  currentOption  =  options.getOption(arguments[0]);	  Option    <?>    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
