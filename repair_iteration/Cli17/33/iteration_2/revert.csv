projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160gobble(iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest(iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.remove();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160gobble(tokens,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160gobble(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<Option>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens,iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens,iter);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens,iter);}else{tokens.add(item);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens,iter);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=currentOption.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<Option>iter=currentOption.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<Option>iter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<Option>iter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(iter);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(iter);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(iter);}else{tokens.add("n");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=currentOption.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ileratoriter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(tokens);}else{tokens.clear();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=options.keySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter=currentOption.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter);}else{tokens.add(item);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])tokens.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])options.toArray(newString[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])options.toArray(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(iter);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(iter);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(iter);}else{tokens.add("n");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(iter);}else{tokens.add(tokenLength);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest=process(iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.get(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.remove(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.remove(arguments[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.remove(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=currentOption.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ilerator<String>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=options.keySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<Option>iter=currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<Option>iter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=arguments.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){iter=arguments.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest(tokens,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(tokens,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160gobble(iter,tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength>0)?options.get(tokenLength-1):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength>0)?options.get(tokenLength-1):arguments[0];
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=currentOption.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(iter,tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(iter);}else{tokens.add(arguments[0]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?Boolean.TRUE:Boolean.FALSE;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[tokenLength]));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[]{});
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0].toString());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.clear();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[0].toString());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokenLength,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=this.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=this.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(stopAtNonOption){process(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.getOption(stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.getOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.get(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160OptioncurrentOption=options.getOption(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160options.add(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160OptioncurrentOption=options.getOption(stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160OptioncurrentOption=options.getOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<Option>iter=options.keySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Option<Option>iter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160List<String>iter=currentOption.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160try==stopAtNonOption&&iter.hasNext();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160try==stopAtNonOption&&iter<arguments.length);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.get(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){stopAtNonOption=tokens.get(tokenLength);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){stopAtNonOption=tokens.get(tokenLength);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(token,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160finalIlerator<String>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ilerator<String>iter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(item);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(item);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(tokens,iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(tokens,iter);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160List<Option>iter=currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ilerator<Option>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(stopAtNonOption)?options.cloneTree():null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(stopAtNonOption)?options.get(options.size()-1):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(stopAtNonOption)?options.get(option):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){returnoptions.toArray(newString[tokenLength]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(newString[tokenLength-1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(newString[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.isEmpty()?null:options.toArray(newString[]{});
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(arguments,newString[]{});
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(tokens,stopAtNonOption){gobble(tokens,iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(tokens,stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(tokens,stopAtNonOption){skip(tokens,iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(tokens,stopAtNonOption){eatTheRest(tokens,iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0],stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0].toLowerCase());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=this.tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens,iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens,iter);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens,iter);}else{tokens.add(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens,iter);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(stopAtNonOption)?options.get(token):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[1].toString());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[0].toString(),stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[0].toString()+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ileratoriter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.isEmpty()?Boolean.TRUE:Boolean.FALSE;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=arguments.isEmpty()?Boolean.TRUE:Boolean.FALSE;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=iter.isEmpty()?Boolean.TRUE:Boolean.FALSE;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(iter,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(iter,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160continue(iter,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(tokenLength,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Option<Option>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160List<String>iter=options.keySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=options.iterator().next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160List<Option>iter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest=stopAtNonOption(iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest=process(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest=stopAtNonOption?process(iter):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest=process(iter);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(token);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(token);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(token);}else{System.arraycopy(arguments,0,tokens,0,arguments.length);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(tokenLength);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(tokenLength);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(tokenLength);}else{System.arraycopy(arguments,0,tokens,0,arguments.length);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(tokenLength);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(stopAtNonOption){proceed(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(tokens,stopAtNonOption){proceed(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tryFallThrough(tokenLength){stopAtNonOption(iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[1].toString());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0].toString(),stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0].toString()+",");
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.remove(arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.getOption(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add("n");
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toString(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(arguments)+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[tokenLength+1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160StopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength>1)?options.get(tokenLength-1):arguments[0];
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength>1)?options.get(tokenLength-1):arguments[1];
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength>0)?options.get(tokenLength-1):arguments[1];
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.isEmpty();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=arguments.isEmpty();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=iter.isEmpty();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,stopAtNonOption,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,currentOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,stopAtNonOption,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(options,arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(iter,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,iter,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,iter,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[0]));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160StopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[tokenLength]));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[tokenLength+1]));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.get(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){stopAtNonOption=tokens.remove(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.remove(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.remove(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])options.toArray(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(options!=null){return(String[])options.toArray(arguments);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160ters.add(arguments[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ileratoriter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])tokens.toArray(newString[tokenLength-1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])tokens.toArray(newString[tokenLength+1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])arguments.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])options.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength>1)?options.get(tokenLength-1):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength<0)?options.get(tokenLength-1):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength>0)?options.get(tokenLength-1):arguments;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[0],stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[0].toLowerCase());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(iter,tokens);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(iter,tokens);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(tokens!=null){gobble(iter,tokens);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(iter,tokens);}else{options.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(options!=null){return(String[])options.toArray(newString[0]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])options.toArray(newString[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter,tokens);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter,tokens);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter,tokens);}else{System.arraycopy(arguments,0,tokens,0,tokenLength);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160List<String>iter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.getOption(item);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.get(item);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=(this.options!=null)?options.iterator():null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(stopAtNonOption)&&gobble(tokens,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ilerator<String>iter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=currentOption.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=currentOption.iterator();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){iter=currentOption.iterator();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(arguments[tokenLength]));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=tokens.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=tokens.iterator();}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=tokens.iterator();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iterator<Option>iter=currentOption.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iterator<Option>iter=currentOption.iterator();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.isEmpty()?null:tokens.toArray(newString[]{});
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=tokens.isEmpty()?null:tokens.toArray(newString[]{},options);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(iter,tokens);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){gobble(iter,tokens);}else{thrownewIllegalStateException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoptions=options.getOption(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(tokens,iter);}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokenLength+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160OptioncurrentOption=options.getOption(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(tokenLength,iter);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(tokenLength,iter);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){proceed(tokenLength,iter);}else{tokens.add(arguments[0]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])this.options.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0],arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.getOption(options.getValue(item));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens,iter);}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,stopAtNonOption,options);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokens.toArray(newString[tokenLength]));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokens,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(token,StopAtNonOption.stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ileratoriter=options.keySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=this.tokens.isEmpty()?Boolean.TRUE:Boolean.FALSE;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ileratoriter=currentOption.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(arguments[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){returnoptions.toArray(newString[tokenLength]);}else{tokens.add(arguments[tokenLength]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(tokens,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(options.getOption(options.getOption(options)));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(options.getOption(options));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160returnoptions.toArray(newString[]{});
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest=stopAtNonOption?process(iter):iter;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoption=options.getOption(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optionoptions=options.getOption(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iterator<Option>iter=options.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iterator<Option>iter=arguments.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ilerator<Option>iter=options.values().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iterator<String>iter=currentOption.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iterator<String>iter=currentOption.iterator();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(tokenLength==0)?options.get(tokenLength-1):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0].toString()+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=currentOption.options.iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){Iteratoriter=currentOption.options.iterator();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){iter=currentOption.options.iterator();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.getOption(options.getValue(token));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.add(arguments[0]).toLowerCase();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=options.isEmpty()?null:tokens.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ilerator<String>iter=options.keySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Ilerator<String>iter=(options==null)?options.iterator():null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=this.tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=options.entrySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest=process(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest=stopAtNonOption?process(iter):arguments;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160IllegalArgumentIteratoriter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(tokens,iter);}else{thrownewIllegalStateException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(iter,tokens);}else{thrownewIllegalStateException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160parent!=null&&stopAtNonOption){gobble(tokens);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160parent==null&&stopAtNonOption){gobble(tokens);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160parent!=null&&stopAtNonOption){gobble(tokens);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160parent==null&&stopAtNonOption){gobble(tokens);}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=iter.isEmpty()?null:tokens.toArray(newString[tokenLength]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(!stopAtNonOption){returnoptions.toArray(newString[tokenLength]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens,iter);}else{thrownewIllegalStateException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){eatTheRest(tokens);}else{tokens=newArrayList<String>();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160proceed(tokenLength-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=(this.options!=null?this.options.iterator():null);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=(this.options!=null)?this.options.iterator():null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160OptioncurrentOption=options.getOption(tokenLength)+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160OptioncurrentOption=options.getOption(tokenLength-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=iter.isEmpty()?null:tokens.toArray(newString[]{});
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter=(tokens.size()>0)?tokens.iterator():null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iteratoriter=options.entrySet().iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(arguments,options);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=iter.remove(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=(this.options!=null)?this.options.iterator():null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Iterator<String>iter=(this.options!=null?this.options.iterator():null);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160eatTheRest(iter,tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=iter.hasNext()?tokens.get(tokenLength):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160stopAtNonOption=iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetielseif(stopAtNonOption();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetielseif(stopAtNonOption=it
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])options.toArray(arguments).toArray(newString[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.close();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Opcodes.Iterator<Option>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160Optioniter=options.getOption(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter.remove(arguments[0].toLowerCase());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160process(token,iter);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0].getName());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160tokens.add(arguments[0].trim());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160if(stopAtNonOption){process(token);}else{thrownewIllegalStateException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])options.toArray(arguments,newString[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160return(String[])this.options.toArray(newString[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java160iter=stopAtNonOption?getTheRest(iter):null;
