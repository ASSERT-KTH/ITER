bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption);	      Integer    tokenLength    =    options.getOptionLength(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  tokens.add(token,  stopAtNonOption);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(token,  stopAtNonOption);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  tokens.add(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  tokens.add(tokenLength,  stopAtNonOption);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength,  stopAtNonOption);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  tokens.add(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  tokens.add(tokenLength  +  1);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength  +  1);	      tokens.add(tokenLength);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  tokens.add(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  tokens.add(tokenLength  -  1);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength  -  1);	      tokens.add(tokenLength);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  tokens.add(tokenLength  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  tokens.add(tokenLength  +  2);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength  +  2);	      tokens.add(tokenLength);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  arguments.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  options.values().iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  tokens.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  options.values().iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  <  String>  iter  =  currentOption.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  currentOption.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.getOptionLength()  +  1;  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength()  +  1;	      Integer    tokenLength    =    options.getOptionLength();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getIntValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.getIntValue();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getIntValue();	      Integer    tokenLength    =    options.getOptionLength();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  tokens.iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  this.arguments.iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(token.length());  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token.length());	      Integer    tokenLength    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(token)+  1;  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token)+  1;	      Integer    tokenLength    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  +  1);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  +  1);	      Integer    tokenLength    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
19	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  1);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  -  1);	      Integer    tokenLength    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(0);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(0);	      Integer    tokenLength    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  +  2);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  +  2);	      Integer    tokenLength    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
22	[BUG]  [BUGGY]  int  tokenLength  =  arguments.length();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  int  tokenLength  =  arguments.length();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  arguments.length();	      int    tokenLength    =    token.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  int  tokenLength  =  token.length()  -  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  int  tokenLength  =  token.length()  -  1;  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  token.length()  -  1;	      int    tokenLength    =    token.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  int  tokenLength  =  token.length()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  int  tokenLength  =  token.length()  +  1;  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  token.length()  +  1;	      int    tokenLength    =    token.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  int  tokenLength  =  token.length()  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  int  tokenLength  =  token.length()  -  2;  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  token.length()  -  2;	      int    tokenLength    =    token.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  options.keySet().iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
27	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  <  String>  iter  =  currentOption.options.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  currentOption.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)+  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)+  1;  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token)+  1;	      Integer    tokenLength    =    options.getOptionLength(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(tokenLength);	      Integer    tokenLength    =    options.getOptionLength(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  options.keySet().iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
31	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  currentOption.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
32	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token,  stopAtNonOption);	      Integer    tokenLength    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getValueLength();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.getValueLength();  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getValueLength();	      Integer    tokenLength    =    options.getOptionLength();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  tokens.add( "- ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  tokens.add( "- ");  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add( "- ");	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  2);  [BUGGY]    if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  -  2);	      Integer    tokenLength    =    options.get(tokenLength);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  if(tokenLength  >  1)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    else  if  (token.startsWith(   "-   "))  {  int  tokenLength  =  token.length();    [BUGGY]  if(tokenLength  >  1)  {  [BUGGY]    {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	if(tokenLength  >  1)  {	  if    (tokenLength    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
