bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  this.arguments.iterator();	  Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  tokens.add(token,  stopAtNonOption  +  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(token,  stopAtNonOption  +  1);	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  tokens.add(token,  stopAtNonOption)+  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(token,  stopAtNonOption)+  1;	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption,  arguments);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption,  arguments);	  Integer    tokenLength    =    options.getOptionLength(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
5	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  eatTheRest);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  eatTheRest);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token,  eatTheRest);	  Integer    tokenLength    =    options.getOptionLength(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  int  tokenLength  =  options.getOptionLength(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  options.getOptionLength(token,  stopAtNonOption);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  options.getOptionLength(token,  stopAtNonOption);	  Integer    tokenLength    =    options.getOptionLength(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  tokens.add( "- "  +  tokenLength);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  tokens.add( "- "  +  tokenLength);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add( "- "  +  tokenLength);	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
8	[BUG]  [BUGGY]  Integer  tokenLength  =  token.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  token.length();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  token.length();	  int    tokenLength    =    token.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
9	[BUG]  [BUGGY]  if(tokenLength  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  if(tokenLength  >  0)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	if(tokenLength  >  0)  {	  if(tokenLength    >    1)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
10	[BUG]  [BUGGY]  if(tokenLength  >=  1)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  if(tokenLength  >=  1)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	if(tokenLength  >=  1)  {	  if(tokenLength    >    1)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
11	[BUG]  [BUGGY]  if(tokenLength  <  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  if(tokenLength  <  1)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	if(tokenLength  <  1)  {	  if(tokenLength    >    1)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
12	[BUG]  [BUGGY]  tokens.add(tokenLength  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  tokens.add(tokenLength  -  2);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength  -  2);	  tokens.add(tokenLength    +    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
13	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength()  -  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength()  -  1;	  Integer    tokenLength    =    options.getOptionLength()    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token.length()  -  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token.length()  -  1);	  Integer    tokenLength    =    options.get(token.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
15	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token.length()  +  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token.length()  +  1);	  Integer    tokenLength    =    options.get(token.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
16	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token.length()  -  2);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token.length()  -  2);	  Integer    tokenLength    =    options.get(token.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
17	[BUG]  [BUGGY]  int  tokenLength  =  options.get(token.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  options.get(token.length()  -  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  options.get(token.length()  -  1);	  Integer    tokenLength    =    options.get(token.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(0).intValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(0).intValue();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(0).intValue();	  Integer    tokenLength    =    options.get(0);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
19	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  options.entrySet().iterator();	  Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
20	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  1  +  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  -  1  +  1);	  Integer    tokenLength    =    options.get(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
21	[BUG]  [BUGGY]  tokens.add(tokenLength  -  1,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  tokens.add(tokenLength  -  1,  stopAtNonOption);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength  -  1,  stopAtNonOption);	  tokens.add(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  2  +  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  -  2  +  1);	  Integer    tokenLength    =    options.get(tokenLength    -    2);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
23	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token)/  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token)/  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token)/  1;	  Integer    tokenLength    =    options.get(token)+    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
24	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token)+  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token)+  2;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token)+  2;	  Integer    tokenLength    =    options.get(token)+    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
25	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token)-  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token)-  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token)-  1;	  Integer    tokenLength    =    options.get(token)+    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
26	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  this.tokens.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  int  tokenLength  =  arguments.length()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  arguments.length()  -  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  arguments.length()  -  1;	  int    tokenLength    =    arguments.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
28	[BUG]  [BUGGY]  int  tokenLength  =  arguments.length()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  arguments.length()  +  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  arguments.length()  +  1;	  int    tokenLength    =    arguments.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
29	[BUG]  [BUGGY]  int  tokenLength  =  arguments.length()  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  arguments.length()  -  2;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  arguments.length()  -  2;	  int    tokenLength    =    arguments.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
30	[BUG]  [BUGGY]  int  tokenLength  =  arguments.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  arguments.length  -  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  arguments.length  -  1;	  int    tokenLength    =    arguments.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
31	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getValueLength()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getValueLength()  +  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getValueLength()  +  1;	  Integer    tokenLength    =    options.getValueLength();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
32	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getIntValueLength();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getIntValueLength();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getIntValueLength();	  Integer    tokenLength    =    options.getValueLength();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
33	[BUG]  [BUGGY]  Integer  tokenLength  =  arguments.getValueLength();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  arguments.getValueLength();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  arguments.getValueLength();	  Integer    tokenLength    =    options.getValueLength();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
34	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getLongValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getLongValue();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getLongValue();	  Integer    tokenLength    =    options.getIntValue();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getIntValue()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getIntValue()  +  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getIntValue()  +  1;	  Integer    tokenLength    =    options.getIntValue();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
36	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getIntValue(token);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getIntValue(token);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getIntValue(token);	  Integer    tokenLength    =    options.getIntValue();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  Integer  tokenLength  =  arguments.getIntValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  arguments.getIntValue();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  arguments.getIntValue();	  Integer    tokenLength    =    options.getIntValue();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  +  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  +  3);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  +  3);	  Integer    tokenLength    =    options.get(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
39	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  this.tokens.iterator();	  Iterator    <    String>    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  iter  =  options.entrySet().iterator();	  Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
41	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength  +  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(tokenLength  +  1);	  Integer    tokenLength    =    options.getOptionLength(tokenLength);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
42	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength  -  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(tokenLength  -  1);	  Integer    tokenLength    =    options.getOptionLength(tokenLength);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
43	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(0);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(0);	  Integer    tokenLength    =    options.getOptionLength(tokenLength);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
44	[BUG]  [BUGGY]  tokens.add(tokenLength,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  tokens.add(tokenLength,  2);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength,  2);	  tokens.add(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  tokens.add(tokenLength,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  tokens.add(tokenLength,  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	tokens.add(tokenLength,  1);	  tokens.add(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
46	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)/  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)/  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token)/  1;	  Integer    tokenLength    =    options.getOptionLength(token)+    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
47	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)+  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)+  2;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token)+  2;	  Integer    tokenLength    =    options.getOptionLength(token)+    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
48	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)-  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token)-  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token)-  1;	  Integer    tokenLength    =    options.getOptionLength(token)+    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
49	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token,  eatTheRest);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token,  eatTheRest);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token,  eatTheRest);	  Integer    tokenLength    =    options.get(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
50	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption  +  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token,  stopAtNonOption  +  1);	  Integer    tokenLength    =    options.get(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
51	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token,  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token,  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token,  1);	  Integer    tokenLength    =    options.get(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
52	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength,  stopAtNonOption);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(tokenLength,  stopAtNonOption);	  Integer    tokenLength    =    options.getOptionLength(tokenLength);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
53	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token.length()  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token.length()  +  2);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token.length()  +  2);	  Integer    tokenLength    =    options.get(token.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getValueLength()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getValueLength()  -  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getValueLength()  -  1;	  Integer    tokenLength    =    options.getValueLength();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
55	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Ilerator  <  String>  iter  =  options.keySet().iterator();	  Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
56	[BUG]  [BUGGY]  Int  tokenLength  =  token.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Int  tokenLength  =  token.length();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Int  tokenLength  =  token.length();	  int    tokenLength    =    token.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
57	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Ilerator  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption  +  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption  +  1);	  Integer    tokenLength    =    options.getOptionLength(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption)+  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(token,  stopAtNonOption)+  1;	  Integer    tokenLength    =    options.getOptionLength(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
60	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Ilerator  <  String>  iter  =  options.iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Ilerator  <  String>  iter  =  options.iterator();	  Iterator    <    String>    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
61	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Ilerator  iter  =  options.iterator();	  Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  /  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  /  2);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  /  2);	  Integer    tokenLength    =    options.get(tokenLength    +    2);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
63	[BUG]  [BUGGY]  Ilerator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Ilerator  iter  =  options.values().iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Ilerator  iter  =  options.values().iterator();	  Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption  -  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token,  stopAtNonOption  -  1);	  Integer    tokenLength    =    options.get(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
65	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption)+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(token,  stopAtNonOption)+  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(token,  stopAtNonOption)+  1;	  Integer    tokenLength    =    options.get(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
66	[BUG]  [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Ilerator  iter  =  options.keySet().iterator();	  Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
67	[BUG]  [BUGGY]  char  tokenLength  =  token.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  char  tokenLength  =  token.length();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	char  tokenLength  =  token.length();	  int    tokenLength    =    token.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
68	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  2  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  2  -  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  -  2  -  1);	  Integer    tokenLength    =    options.get(tokenLength    -    2);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
69	[BUG]  [BUGGY]  if(tokenLength!=  1)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  if(tokenLength!=  1)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	if(tokenLength!=  1)  {	  if(tokenLength    >    1)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
70	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.arguments.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Iterator  <  String>  iter  =  currentOption.arguments.iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =  currentOption.arguments.iterator();	  Iterator    <    String>    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
71	[BUG]  [BUGGY]  int  tokenLength  =  arguments.length  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  arguments.length  -  2;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  arguments.length  -  2;	  int    tokenLength    =    arguments.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
72	[BUG]  [BUGGY]  int  tokenLength  =  arguments.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  arguments.length;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  arguments.length;	  int    tokenLength    =    arguments.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
73	[BUG]  [BUGGY]  int  tokenLength  =  options.getOptionLength();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  int  tokenLength  =  options.getOptionLength();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	int  tokenLength  =  options.getOptionLength();	  Integer    tokenLength    =    options.getOptionLength()    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
74	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getValueLength(token);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getValueLength(token);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getValueLength(token);	  Integer    tokenLength    =    options.getValueLength();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
75	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  /  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  /  1);  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  /  1);	  Integer    tokenLength    =    options.get(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
76	[BUG]  [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  1)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.get(tokenLength  -  1)+  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.get(tokenLength  -  1)+  1;	  Integer    tokenLength    =    options.get(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
77	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getOptionLength(tokenLength)+  1;  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getOptionLength(tokenLength)+  1;	  Integer    tokenLength    =    options.getOptionLength(tokenLength);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
78	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Iterator  <  String>  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Iterator  <  String>  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();	  Iterator    <    String>    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
79	[BUG]  [BUGGY]  Integer  tokenLength  =  options.getColumnLength();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (token.startsWith(     "-     "))  {  int  tokenLength  =  token.length();      [BUGGY]  Integer  tokenLength  =  options.getColumnLength();  [BUGGY]      if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	Integer  tokenLength  =  options.getColumnLength();	  Integer    tokenLength    =    options.getIntValue();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
