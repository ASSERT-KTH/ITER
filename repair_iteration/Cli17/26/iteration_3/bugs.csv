bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  1);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  2);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
4	[BUG]  [BUGGY]  Arrays.sort(arguments,  currentOption,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  currentOption,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  currentOption,  stopAtNonOption);	  Arrays.sort(arguments,    currentOption);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
5	[BUG]  [BUGGY]  Arrays.sort(arguments,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  null);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  null);	  Arrays.sort(arguments,    currentOption);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
6	[BUG]  [BUGGY]  Option  options  =  this.currentOption.getOption(arguments);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  this.currentOption.getOption(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  this.currentOption.getOption(arguments);	  Option    options    =    this.currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments);	  Option    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
8	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments[0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments[0]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments[0]);	  Option    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
9	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments,  stopAtNonOption);	  Option    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
10	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments[0],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments[0],  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments[0],  stopAtNonOption);	  Option    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
11	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.length  -  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[arguments.length  -  1];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.length  -  1];	  this.options    =    new    Option[arguments.length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.length  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[arguments.length  +  1];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.length  +  1];	  this.options    =    new    Option[arguments.length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.length  *  2];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[arguments.length  *  2];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.length  *  2];	  this.options    =    new    Option[arguments.length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
15	[BUG]  [BUGGY]  Option  currentOption  =  this.options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  this.options.getOption(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  this.options.getOption(arguments);	  Option    currentOption    =    this.options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
16	[BUG]  [BUGGY]  Option  currentOption  =  this.options.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  this.options.getOption(tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  this.options.getOption(tokenLength);	  Option    currentOption    =    this.options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
17	[BUG]  [BUGGY]  Option  currentOption  =  this.options.getOption(arguments[tokenLength]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  this.options.getOption(arguments[tokenLength]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  this.options.getOption(arguments[tokenLength]);	  Option    currentOption    =    this.options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
18	[BUG]  [BUGGY]  Arrays.asList(this.options).addAll(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(this.options).addAll(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(this.options).addAll(arguments);	  Arrays.asList(arguments).addAll(this.options);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
19	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this.options);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this.options);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this.options);  }	  Arrays.asList(arguments).addAll(this.options);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
20	[BUG]  [BUGGY]  Arrays.asList(options).addAll(this.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(options).addAll(this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(options).addAll(this.options);	  Arrays.asList(arguments).addAll(this.options);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
21	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  this.arguments.iterator();	  Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  Arrays.asList(this.options).iterator();	  Iterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
23	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  Arrays.asList(options).iterator();	  Iterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
24	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.stopAtNonOption,  tokenLength);	  Arrays.sort(arguments,    this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
25	[BUG]  [BUGGY]  Arrays.sort(this.options,  arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(this.options,  arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(this.options,  arguments);	  Arrays.sort(arguments,    this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
26	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  currentOption);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  currentOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.stopAtNonOption,  currentOption);	  Arrays.sort(arguments,    this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
27	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  stopAtNonOption,  tokenLength);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments,  stopAtNonOption,  tokenLength);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  stopAtNonOption,  tokenLength);	  this.options    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
28	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  eatTheRest);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments,  eatTheRest);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  eatTheRest);	  this.options    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
29	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(arguments,  tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOptions(arguments,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(arguments,  tokenLength);	  Option    options    =    currentOption.getOptions(tokenLength);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
30	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOptions(tokenLength  -  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(tokenLength  -  1);	  Option    options    =    currentOption.getOptions(tokenLength);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
31	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOptions(tokenLength  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(tokenLength  +  1);	  Option    options    =    currentOption.getOptions(tokenLength);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
32	[BUG]  [BUGGY]  Arrays.asList(this.options).clear();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(this.options).clear();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(this.options).clear();	  Arrays.asList(arguments).clear();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
33	[BUG]  [BUGGY]  Arrays.asList(arguments).remove(argumentLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).remove(argumentLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).remove(argumentLength);	  Arrays.asList(arguments).clear();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
34	[BUG]  [BUGGY]  Arrays.sort(this.arguments,  tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(this.arguments,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(this.arguments,  tokenLength);	  Arrays.sort(this.arguments);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
35	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(1);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(1);	  this.options    =    new    ArrayList    <    Option>(8);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
36	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(4);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(4);	  this.options    =    new    ArrayList    <    Option>(8);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
37	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(2);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(2);	  this.options    =    new    ArrayList    <    Option>(8);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
38	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments,  true);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  true);	  this.options    =    options.toArray(arguments,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
39	[BUG]  [BUGGY]  this.options  =  new  Option[2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[2];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[2];	  this.options    =    new    Option[1];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
40	[BUG]  [BUGGY]  this.options  =  new  Option[3];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[3];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[3];	  this.options    =    new    Option[1];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
41	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments.length  +  1);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(arguments.length  +  1);	  this.options    =    new    ArrayList    <    Option>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>(arguments.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  LinkedList  <  Option>(arguments.length);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  LinkedList  <  Option>(arguments.length);	  this.options    =    new    ArrayList    <    Option>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments.length,  arguments.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments.length,  arguments.length);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(arguments.length,  arguments.length);	  this.options    =    new    ArrayList    <    Option>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
45	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  iter  =  arguments.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
46	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arrays.iterator();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  iter  =  arrays.iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  iter  =  arrays.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
47	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  -  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[arguments.size()  -  1];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.size()  -  1];	  this.options    =    new    Option[arguments.size()    ];    	non-compiled	[CE]  <identifier>  expected	32	None	replace
48	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  +  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[arguments.size()  +  1];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.size()  +  1];	  this.options    =    new    Option[arguments.size()    ];    	non-compiled	[CE]  <identifier>  expected	32	None	replace
49	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  this.tokens.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  2);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  2);	  Option    currentOption    =    options.getOption(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
51	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  /  1);	  Option    currentOption    =    options.getOption(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
52	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOption(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOption(arguments,  stopAtNonOption);	  Option    options    =    currentOption.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(this.options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOption(this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOption(this.options);	  Option    options    =    currentOption.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOption(tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOption(tokenLength);	  Option    options    =    currentOption.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
55	[BUG]  [BUGGY]  Option  options  =  currentOption.stopAtNonOption(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.stopAtNonOption(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.stopAtNonOption(arguments);	  Option    options    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
56	[BUG]  [BUGGY]  Option  options  =  currentOption.stopAtNonOption(tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.stopAtNonOption(tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.stopAtNonOption(tokenLength);	  Option    options    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
57	[BUG]  [BUGGY]  Option  options  =  currentOption.stopAtNonOption(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.stopAtNonOption(this);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.stopAtNonOption(this);	  Option    options    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
58	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(this.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(this.options);	  Option    currentOption    =    options.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
59	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(arguments,  stopAtNonOption);	  Option    currentOption    =    options.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
60	[BUG]  [BUGGY]  Arrays.asList(options).addAll(this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(options).addAll(this);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(options).addAll(this);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
61	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).addAll(this,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).addAll(this,  stopAtNonOption);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
62	[BUG]  [BUGGY]  Arrays.asList(arguments).removeAll(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).removeAll(this);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).removeAll(this);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
63	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1,  tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1,  tokenLength  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  1,  tokenLength  +  1);	  Option    currentOption    =    options.getOption(tokenLength    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  Arrays.asList(arguments).add(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(tokenLength  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(tokenLength  +  1);	  Arrays.asList(arguments).add(tokenLength);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  Arrays.asList(arguments).add(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(tokenLength,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(tokenLength,  stopAtNonOption);	  Arrays.asList(arguments).add(tokenLength);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption,  arguments);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
67	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  argumentLength);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(token,  argumentLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(token,  argumentLength);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
68	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  eatTheRest);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(token,  eatTheRest);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(token,  eatTheRest);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
69	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  arguments);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(token,  arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(token,  arguments);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
70	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.options);	  Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
71	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.sort(arguments);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(this.options!=  null)  {  Arrays.sort(arguments);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(this.options!=  null)  {  Arrays.sort(arguments);  }	  Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
72	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.sort(this.options);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.sort(this.options);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.sort(this.options);  }	  Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
73	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  OptionOption>();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  LinkedList  <  OptionOption>();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  LinkedList  <  OptionOption>();	  this.options    =    new    ArrayList    <    OptionOption>();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
74	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(arguments);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  OptionOption>(arguments);	  this.options    =    new    ArrayList    <    OptionOption>();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
75	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(arguments.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(arguments.length);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  OptionOption>(arguments.length);	  this.options    =    new    ArrayList    <    OptionOption>();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
76	[BUG]  [BUGGY]  Arrays.asList(arguments).add(token,  currentOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(token,  currentOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(token,  currentOption);	  Arrays.asList(arguments).add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).add(token,  stopAtNonOption);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).add(token,  stopAtNonOption);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.asList(arguments).add(token,  stopAtNonOption);  }	  Arrays.asList(arguments).add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  Arrays.asList(arguments).add(token,  stopAtNonOption,  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(token,  stopAtNonOption,  options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(token,  stopAtNonOption,  options);	  Arrays.asList(arguments).add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
79	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
80	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  tokens  =  new  ArrayList  <  String>();  }	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
81	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>(arguments);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  LinkedList  <  Option>(arguments);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  LinkedList  <  Option>(arguments);	  this.options    =    new    ArrayList    <    Option>(arguments);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
82	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments,  stopAtNonOption);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(arguments,  stopAtNonOption);	  this.options    =    new    ArrayList    <    Option>(arguments);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
83	[BUG]  [BUGGY]  this.options  =  options.asList(arguments).toArray(this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.asList(arguments).toArray(this);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.asList(arguments).toArray(this);	  this.options    =    options.toArray(arguments).toArray(this);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
84	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(this,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments).toArray(this,  stopAtNonOption);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(this,  stopAtNonOption);	  this.options    =    options.toArray(arguments).toArray(this);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
85	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(this,  currentOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments).toArray(this,  currentOption);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(this,  currentOption);	  this.options    =    options.toArray(arguments).toArray(this);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
86	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOptions(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(arguments,  stopAtNonOption);	  Option    options    =    currentOption.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(this.options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOptions(this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(this.options);	  Option    options    =    currentOption.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  this.options  =  options.asList(arguments).toArray(arguments);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.asList(arguments).toArray(arguments);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.asList(arguments).toArray(arguments);	  this.options    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
89	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments).toArray(arguments,  stopAtNonOption);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(arguments,  stopAtNonOption);	  this.options    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
90	[BUG]  [BUGGY]  this.options  =  arguments.toArray(options).toArray(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  arguments.toArray(options).toArray(arguments);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  arguments.toArray(options).toArray(arguments);	  this.options    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
91	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  -  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments.length  -  1);	  Option    currentOption    =    options.getOption(tokenLength,    arguments.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
92	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments.length  +  1);	  Option    currentOption    =    options.getOption(tokenLength,    arguments.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
93	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments.length,  tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(arguments.length,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(arguments.length,  tokenLength);	  Option    currentOption    =    options.getOption(tokenLength,    arguments.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
94	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  tokenLength);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  stopAtNonOption,  tokenLength);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
95	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  currentOption);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  stopAtNonOption,  currentOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  stopAtNonOption,  currentOption);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
96	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments)/  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments)/  1;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments)/  1;	  this.options    =    options.toArray(arguments)+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
97	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments)+  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments)+  2;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments)+  2;	  this.options    =    options.toArray(arguments)+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
98	[BUG]  [BUGGY]  this.options  =  arguments.toArray(arguments)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  arguments.toArray(arguments)+  1;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  arguments.toArray(arguments)+  1;	  this.options    =    options.toArray(arguments)+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
99	[BUG]  [BUGGY]  this.options  =  Option.EMPTY_ARRAY;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  Option.EMPTY_ARRAY;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  Option.EMPTY_ARRAY;	  this.options    =    Options.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
100	[BUG]  [BUGGY]  this.options  =  Option.EMPTY_ARGUMENTS;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  Option.EMPTY_ARGUMENTS;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  Option.EMPTY_ARGUMENTS;	  this.options    =    Options.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
101	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add( "   ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add( "   ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	49	None	replace
102	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "- ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add( "- ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add( "- ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	49	None	replace
103	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "[ ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add( "[ ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add( "[ ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	49	None	replace
104	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments);	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
105	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	ArrayList  <  String>  tokens  =  Lists.newArrayList();	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
106	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newLinkedList();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  tokens  =  Lists.newLinkedList();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  tokens  =  Lists.newLinkedList();	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
107	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.tokenLength);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.tokenLength);	  Arrays.asList(arguments).add(this.token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
108	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.token,  tokenLength);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.token,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.token,  tokenLength);	  Arrays.asList(arguments).add(this.token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
109	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.token,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.token,  stopAtNonOption);	  Arrays.asList(arguments).add(this.token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
110	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  arguments);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  arguments);	  Option    currentOption    =    options.getOption(Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
111	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  tokenLength);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  tokenLength);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  tokenLength);	  Option    currentOption    =    options.getOption(Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
112	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  argumentLength);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  argumentLength);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  argumentLength);	  Option    currentOption    =    options.getOption(Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
113	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  tokens  =  currentOption.iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  currentOption.iterator();	  Iterator    <    String>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
114	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  tokens  =  Arrays.asList(arguments).iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
115	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  tokens  =  this.options.iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  this.options.iterator();	  Iterator    <    String>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
116	[BUG]  [BUGGY]  this.options  =  OptionOptions.EMPTY_ARGUMENTS;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  OptionOptions.EMPTY_ARGUMENTS;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  OptionOptions.EMPTY_ARGUMENTS;	  this.options    =    OptionOptions.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
117	[BUG]  [BUGGY]  this.options  =  OptionOptions.EMPTY_ARRAY  +  arguments.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  OptionOptions.EMPTY_ARRAY  +  arguments.length;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  OptionOptions.EMPTY_ARRAY  +  arguments.length;	  this.options    =    OptionOptions.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
118	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  +  3];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[tokenLength  +  3];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  +  3];	  this.options    =    new    Option[tokenLength    +    2];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
119	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  *  2];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[tokenLength  *  2];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  *  2];	  this.options    =    new    Option[tokenLength    +    2];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
120	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  this.options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.stopAtNonOption,  this.options);	  Arrays.asList(arguments).add(this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
121	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  tokenLength);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.stopAtNonOption,  tokenLength);	  Arrays.asList(arguments).add(this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
122	[BUG]  [BUGGY]  Arrays.asList(options).add(this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(options).add(this.stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(options).add(this.stopAtNonOption);	  Arrays.asList(arguments).add(this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
123	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments,  null);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  null);	  this.options    =    options.toArray(arguments,    currentOption);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
124	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  *  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[tokenLength  *  1];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  *  1];	  this.options    =    new    Option[tokenLength    +    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
125	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
126	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
127	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
128	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[1]);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(new  Option[1]);	  this.options    =    options.toArray(arguments).toArray(new    Option[0]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
129	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[2]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[2]);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(new  Option[2]);	  this.options    =    options.toArray(arguments).toArray(new    Option[0]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
130	[BUG]  [BUGGY]  this.options  =  options.asList(arguments).toArray(new  Option[0]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.asList(arguments).toArray(new  Option[0]);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.asList(arguments).toArray(new  Option[0]);	  this.options    =    options.toArray(arguments).toArray(new    Option[0]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
131	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  -  2];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[tokenLength  -  2];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  -  2];	  this.options    =    new    Option[tokenLength    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
132	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  /  1];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[tokenLength  /  1];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  /  1];	  this.options    =    new    Option[tokenLength    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
133	[BUG]  [BUGGY]  Arrays.sort(arguments,  0,  tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  0,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  0,  tokenLength);	  Arrays.sort(arguments,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
134	[BUG]  [BUGGY]  Arrays.sort(arguments,  tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  tokenLength,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  tokenLength,  stopAtNonOption);	  Arrays.sort(arguments,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
135	[BUG]  [BUGGY]  Arrays.sort(arguments,  tokenLength  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  tokenLength  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  tokenLength  +  1);	  Arrays.sort(arguments,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
136	[BUG]  [BUGGY]  Arrays.sort(arguments,  tokenLength,  currentOption);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  tokenLength,  currentOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  tokenLength,  currentOption);	  Arrays.sort(arguments,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
137	[BUG]  [BUGGY]  Arrays.asList(tokens).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(tokens).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(tokens).iterator();	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
138	[BUG]  [BUGGY]  Arrays.asList(this.arguments).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(this.arguments).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(this.arguments).iterator();	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
139	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  StopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments,  StopAtNonOption);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  StopAtNonOption);	  this.options    =    options.toArray(arguments,    currentOption);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
140	[BUG]  [BUGGY]  Arrays.sort(arguments,  0,  currentOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  0,  currentOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  0,  currentOption);	  Arrays.sort(arguments,    currentOption);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
141	[BUG]  [BUGGY]  this.options  =  OptionsOptions.EMPTY_ARRAY;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  OptionsOptions.EMPTY_ARRAY;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  OptionsOptions.EMPTY_ARRAY;	  this.options    =    OptionOptions.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
142	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_ARGUMENTS  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  Options.EMPTY_ARGUMENTS  +  1;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  Options.EMPTY_ARGUMENTS  +  1;	  this.options    =    Options.EMPTY_ARGUMENTS;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
143	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(7);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(7);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(7);	  this.options    =    new    ArrayList    <    Option>(8);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
144	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(6);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(6);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(6);	  this.options    =    new    ArrayList    <    Option>(8);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
145	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(tokens);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(tokens);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  OptionOption>(tokens);	  this.options    =    new    ArrayList    <    OptionOption>();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
146	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).addAll(this.stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).addAll(this.stopAtNonOption);	  Arrays.asList(arguments).clear();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
147	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).add(this.token);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).add(this.token);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.asList(arguments).add(this.token);  }	  Arrays.asList(arguments).add(this.token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
148	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[0],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[0],  stopAtNonOption);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(new  Option[0],  stopAtNonOption);	  this.options    =    options.toArray(arguments).toArray(new    Option[0]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
149	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(this.tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOption(this.tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOption(this.tokenLength);	  Option    options    =    currentOption.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
150	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
151	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  iter  =  Arrays.asList(options).iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
152	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments)+  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments)+  0;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments)+  0;	  this.options    =    options.toArray(arguments)+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
153	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  currentOption.tokens.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  tokens  =  currentOption.tokens.iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  currentOption.tokens.iterator();	  Iterator    <    String>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
154	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  currentOption.keySet().iterator();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  tokens  =  currentOption.keySet().iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  currentOption.keySet().iterator();	  Iterator    <    String>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
155	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this);  }	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
156	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(tokens).iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  iter  =  Arrays.asList(tokens).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  Arrays.asList(tokens).iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
157	[BUG]  [BUGGY]  Option  options  =  this.currentOption.getOptions(arguments);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  this.currentOption.getOptions(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  this.currentOption.getOptions(arguments);	  Option    options    =    this.currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
158	[BUG]  [BUGGY]  Option  options  =(Option)this.currentOption.getOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =(Option)this.currentOption.getOptions();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =(Option)this.currentOption.getOptions();	  Option    options    =    this.currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
159	[BUG]  [BUGGY]  if(this.arguments!=  null)  {  Arrays.sort(arguments);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(this.arguments!=  null)  {  Arrays.sort(arguments);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(this.arguments!=  null)  {  Arrays.sort(arguments);  }	  Arrays.sort(this.arguments);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
160	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
161	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  *  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  *  1  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  *  1  +  1);	  Option    currentOption    =    options.getOption(tokenLength    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
162	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(arguments[0]);	  Option    currentOption    =    options.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
163	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  2);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  /  2);	  Option    currentOption    =    options.getOption(tokenLength    -    2);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
164	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  *  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  *  2);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  *  2);	  Option    currentOption    =    options.getOption(tokenLength    -    2);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
165	[BUG]  [BUGGY]  Arrays.sort(arguments,  0,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  0,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  0,  stopAtNonOption);	  Arrays.sort(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
166	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  -  1  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[tokenLength  -  1  +  1];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  -  1  +  1];	  this.options    =    new    Option[tokenLength    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
167	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "-- ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add( "-- ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add( "-- ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	49	None	replace
168	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "  stopAtNonOption ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add( "  stopAtNonOption ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add( "  stopAtNonOption ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	49	None	replace
169	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.eatTheRest);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  this.eatTheRest);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.eatTheRest);	  Arrays.sort(arguments,    this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
170	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  this.eatTheRest);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  this.eatTheRest);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.stopAtNonOption,  this.eatTheRest);	  Arrays.sort(arguments,    this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
171	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.eatTheRest);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.eatTheRest);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.eatTheRest);	  Arrays.asList(arguments).add(this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
172	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  this.eatTheRest);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  this.eatTheRest);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.stopAtNonOption,  this.eatTheRest);	  Arrays.asList(arguments).add(this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
173	[BUG]  [BUGGY]  Option  options  =  currentOption.stopAtNonOption(true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.stopAtNonOption(true);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.stopAtNonOption(true);	  Option    options    =    currentOption.stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
174	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  Arrays.asList(arguments).iterator();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  Arrays.asList(arguments).iterator();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Iterator  iter  =  Arrays.asList(arguments).iterator();  }	  Iterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
175	[BUG]  [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Ilerator  iter  =  Arrays.asList(arguments).iterator();	  Iterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
176	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments).iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments).iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(arguments).iterator();	  this.options    =    new    ArrayList    <    Option>(arguments);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
177	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  argumentLength);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  argumentLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption,  argumentLength);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
178	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(this.options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments).toArray(this.options);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(this.options);	  this.options    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
179	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  this.stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  this.stopAtNonOption);	  Option    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
180	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption,  arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption,  arguments);	  Option    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
181	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_ARRAY  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  Options.EMPTY_ARRAY  +  1;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  Options.EMPTY_ARRAY  +  1;	  this.options    =    Options.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
182	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).add(tokenLength);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).add(tokenLength);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.asList(arguments).add(tokenLength);  }	  Arrays.asList(arguments).add(tokenLength);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
183	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.sort(this.options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.sort(this.options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.sort(this.options);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
184	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.sort(this.options);  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  if(stopAtNonOption)  {  Arrays.sort(this.options);  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	if(stopAtNonOption)  {  Arrays.sort(this.options);  }  else  {  tokens  =  new  ArrayList  <  String>();  }	  Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
185	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  this.currentOption.options.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
186	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.length);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.length);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
187	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>(8);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  LinkedList  <  Option>(8);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  LinkedList  <  Option>(8);	  this.options    =    new    LinkedList    <    Option>();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
188	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  /  1  +  1);	  Option    currentOption    =    options.getOption(tokenLength    -    1    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
189	[BUG]  [BUGGY]  this.options  =  options.options;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.options;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.options;	  this.options    =    Options.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
190	[BUG]  [BUGGY]  this.options  =  Options.emptyList();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  Options.emptyList();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  Options.emptyList();	  this.options    =    Options.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
191	[BUG]  [BUGGY]  Arrays.asList(this.tokenLength).add(arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(this.tokenLength).add(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(this.tokenLength).add(arguments);	  Arrays.asList(arguments).add(this.token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
192	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments[stopAtNonOption]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments[stopAtNonOption]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments[stopAtNonOption]);	  Option    currentOption    =    options.getOption(tokenLength,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
193	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).addAll(options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).addAll(options);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
194	[BUG]  [BUGGY]  Option  options  =  this.currentOption.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  this.currentOption.getOption(tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  this.currentOption.getOption(tokenLength);	  Option    options    =    this.currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
195	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayListWithCapacity(arguments);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayListWithCapacity(arguments);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  tokens  =  Lists.newArrayListWithCapacity(arguments);	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
196	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments)-  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  options.toArray(arguments)-  1;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments)-  1;	  this.options    =    options.toArray(arguments)+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
197	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOptions(this);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(this);	  Option    options    =    currentOption.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
198	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  tokens  =  options.values().iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  options.values().iterator();	  Iterator    <    String>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
199	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  <  String>  tokens  =  arguments.iterator();  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  arguments.iterator();	  Iterator    <    String>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
200	[BUG]  [BUGGY]  Arrays.sort(arguments,  1,  tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  1,  tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  1,  tokenLength);	  Arrays.sort(arguments,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
201	[BUG]  [BUGGY]  Arrays.sort(arguments,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  1);	  Arrays.sort(arguments,    tokenLength);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
202	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  this.tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption,  this.tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.stopAtNonOption,  this.tokenLength);	  Arrays.asList(arguments).add(this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
203	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  options  =  currentOption.getOption(this);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOption(this);	  Option    options    =    currentOption.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
204	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this.options,  options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).addAll(this.options,  options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).addAll(this.options,  options);	  Arrays.asList(arguments).addAll(this.options);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
205	[BUG]  [BUGGY]  Arrays.sort(this.arguments,  this.tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(this.arguments,  this.tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(this.arguments,  this.tokenLength);	  Arrays.sort(this.arguments);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
206	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  this.options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.stopAtNonOption,  this.options);	  Arrays.sort(arguments,    this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
207	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  this.tokenLength);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption,  this.tokenLength);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.stopAtNonOption,  this.tokenLength);	  Arrays.sort(arguments,    this.stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
208	[BUG]  [BUGGY]  Arrays.asList(this.tags).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(this.tags).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(this.tags).iterator();	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
209	[BUG]  [BUGGY]  this.options  =  OptionOptions.OPTIONAL_ARRAY;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  OptionOptions.OPTIONAL_ARRAY;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  OptionOptions.OPTIONAL_ARRAY;	  this.options    =    OptionOptions.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
210	[BUG]  [BUGGY]  this.options  =  OptionOptions.EMPTY_ARRAY  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  OptionOptions.EMPTY_ARRAY  +  1;  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  OptionOptions.EMPTY_ARRAY  +  1;	  this.options    =    OptionOptions.EMPTY_ARRAY;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
211	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  *  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[arguments.size()  *  2];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.size()  *  2];	  this.options    =    new    Option[arguments.size()    ];    	non-compiled	[CE]  <identifier>  expected	32	None	replace
212	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  null);  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(Token.EXPR_RESULT,  null);	  Option    currentOption    =    options.getOption(Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
213	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  /  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  this.options  =  new  Option[tokenLength  /  2];  [BUGGY]        Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  /  2];	  this.options    =    new    Option[tokenLength    +    2];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
214	[BUG]  [BUGGY]  Arrays.asList(arguments).add(token,  this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Arrays.asList(arguments).add(token,  this.stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(token,  this.stopAtNonOption);	  Arrays.asList(arguments).add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
215	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(this.arguments).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();      [BUGGY]  Iterator  iter  =  Arrays.asList(this.arguments).iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  Arrays.asList(this.arguments).iterator();	  Iterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
