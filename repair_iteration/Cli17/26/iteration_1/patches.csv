bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Arrays.asList(arguments).add(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).add(token,  stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(token,  stopAtNonOption);	      Arrays.asList(arguments).add(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.token);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).add(this.token);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.token);	      Arrays.asList(arguments).add(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  Arrays.asList(arguments).add(tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).add(tokenLength);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(tokenLength);	      Arrays.asList(arguments).add(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.length];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  Option[arguments.length];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.length];	  this.options    =    new    Option[tokenLength];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  +  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  Option[tokenLength  +  1];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  +  1];	  this.options    =    new    Option[tokenLength];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  -  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  Option[tokenLength  -  1];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  -  1];	  this.options    =    new    Option[tokenLength];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  this.options  =  new  Option[0];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  Option[0];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[0];	  this.options    =    new    Option[tokenLength];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  LinkedList  <  Option>();	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(arguments);	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  ArrayList  <  Option>(arguments.length);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(arguments.length);	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(arguments);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  options  =  currentOption.getOption(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOption(arguments);	      Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  Option  options  =  this.currentOption.getOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  options  =  this.currentOption.getOptions();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  this.currentOption.getOptions();	      Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  options  =  currentOption.getOptions(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(arguments);	      Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  2);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  2);	      Option    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);	      Option    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  1);	      Option    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);	      List    <    String>    arguments    =    new    ArrayList    <    String>();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
18	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>();	      List    <    String>    arguments    =    new    ArrayList    <    String>();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
19	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());	      List    <    String>    arguments    =    new    ArrayList    <    String>();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  Arrays.sort(arguments,  tokenLength);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.sort(arguments,  tokenLength);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  tokenLength);	      Arrays.sort(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  Arrays.sort(this.options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.sort(this.options);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(this.options);	      Arrays.sort(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.sort(arguments,  stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  stopAtNonOption);	      Arrays.sort(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  options.toArray(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  stopAtNonOption);	  this.options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  currentOption);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  options.toArray(arguments,  currentOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  currentOption);	  this.options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  options.toArray(arguments,  false);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments,  false);	  this.options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(this.options).iterator();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(this.options).iterator();	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  Arrays.asList(arguments).clear();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).clear();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).clear();	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this.options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).addAll(this.options);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).addAll(this.options);	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
30	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  arguments.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
31	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  tokens.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
32	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  ];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  Option[arguments.size()  ];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[arguments.size()  ];	  this.options    =    arguments;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(arguments);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  iter  =  options.iterator();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  options.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Iterator  <  String>  tokens  =  options.iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  <  String>  tokens  =  options.iterator();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  tokens  =  Lists.newArrayList();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(tokenLength);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  options  =  currentOption.getOptions(tokenLength);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.getOptions(tokenLength);	      Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments)+  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  options.toArray(arguments)+  1;  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments)+  1;	  this.options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[0]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  options.toArray(arguments).toArray(new  Option[0]);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(new  Option[0]);	  this.options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  Arrays.asList(arguments).iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Iterator  iter  =  currentOption.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).add(this.stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add(this.stopAtNonOption);	      Arrays.asList(arguments).add(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
45	[BUG]  [BUGGY]  this.options  =  new  Option[1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  Option[1];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[1];	  this.options    =    new    Option[tokenLength];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_ARRAY;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  Options.EMPTY_ARRAY;  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  Options.EMPTY_ARRAY;	  this.options    =    arguments;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_ARGUMENTS;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  Options.EMPTY_ARGUMENTS;  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  Options.EMPTY_ARGUMENTS;	  this.options    =    arguments;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  this.options  =  OptionOptions.EMPTY_ARRAY;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  OptionOptions.EMPTY_ARRAY;  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  OptionOptions.EMPTY_ARRAY;	  this.options    =    arguments;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "n ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).add( "n ");  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).add( "n ");	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(8);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  ArrayList  <  Option>(8);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>(8);	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
51	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments);	      List    <    String>    arguments    =    new    ArrayList    <    String>();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  Arrays.sort(arguments,  currentOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.sort(arguments,  currentOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  currentOption);	      Arrays.sort(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength  +  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  Option[tokenLength  +  2];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength  +  2];	  this.options    =    new    Option[tokenLength];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(Token.EXPR_RESULT);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(Token.EXPR_RESULT);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
55	[BUG]  [BUGGY]  Option  currentOption  =  this.options.getOption(token);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  this.options.getOption(token);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  this.options.getOption(token);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
56	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.asList(arguments).addAll(this);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.asList(arguments).addAll(this);	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments.length);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  Option  options  =  currentOption.stopAtNonOption();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Option  options  =  currentOption.stopAtNonOption();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Option  options  =  currentOption.stopAtNonOption();	      Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
59	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  OptionOption>();	  this.options    =    arguments;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  Arrays.sort(this.arguments);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.sort(this.arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(this.arguments);	      Arrays.sort(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
61	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  Arrays.sort(arguments,  this.stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	Arrays.sort(arguments,  this.stopAtNonOption);	      Arrays.sort(arguments);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
62	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(arguments);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  options.toArray(arguments).toArray(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(arguments);	  this.options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
63	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments).toArray(this);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();    [BUGGY]  this.options  =  options.toArray(arguments).toArray(this);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments).toArray(this);	  this.options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
