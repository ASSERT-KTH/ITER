bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.options  =  options.toArray(arguments);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]  this.options  =  options.toArray(arguments);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  options.toArray(arguments);	this.options  =  options;  	non-compiled	[CE]  <identifier>  expected	53	None	replace
2	[BUG]  [BUGGY]  this.options  =  arguments;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]  this.options  =  arguments;  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  arguments;	this.options  =  options;  	non-compiled	[CE]  <identifier>  expected	53	None	replace
3	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  ArrayList  <  Option>();	this.options  =  options;  	non-compiled	[CE]  <identifier>  expected	53	None	replace
4	[BUG]  [BUGGY]  this.options  =  new  Option[tokenLength];  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]  this.options  =  new  Option[tokenLength];  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	this.options  =  new  Option[tokenLength];	this.options  =  options;  	non-compiled	[CE]  <identifier>  expected	53	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	  	this.options  =  options;  	non-compiled	[CE]  <identifier>  expected	53	None	replace
6	[BUG]  [BUGGY]    Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Arrays.asList(arguments).iterator();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Arrays.asList(arguments).iterator();		non-compiled	[CE]  <identifier>  expected	54	None	add
7	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Option  currentOption  =  options.getOption(tokenLength);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Option  currentOption  =  options.getOption(tokenLength);		non-compiled	[CE]  <identifier>  expected	54	None	add
8	[BUG]  [BUGGY]    Option  options  =  currentOption.getOptions();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Option  options  =  currentOption.getOptions();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Option  options  =  currentOption.getOptions();		non-compiled	[CE]  <identifier>  expected	54	None	add
9	[BUG]  [BUGGY]    Arrays.asList(arguments).add(token);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Arrays.asList(arguments).add(token);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Arrays.asList(arguments).add(token);		non-compiled	[CE]  <identifier>  expected	54	None	add
10	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Option  currentOption  =  options.getOption(token);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Option  currentOption  =  options.getOption(token);		non-compiled	[CE]  <identifier>  expected	54	None	add
11	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	54	None	add
12	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Option  currentOption  =  options.getOption(tokenLength  -  1);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Option  currentOption  =  options.getOption(tokenLength  -  1);		non-compiled	[CE]  <identifier>  expected	54	None	add
13	[BUG]  [BUGGY]    Arrays.sort(arguments);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    Arrays.sort(arguments);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    Arrays.sort(arguments);		non-compiled	[CE]  <identifier>  expected	54	None	add
14	[BUG]  [BUGGY]    List  <  String>  arguments  =  new  ArrayList  <  String>();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  [BUGGY]    List  <  String>  arguments  =  new  ArrayList  <  String>();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	100	100	1	replace	    List  <  String>  arguments  =  new  ArrayList  <  String>();		non-compiled	[CE]  <identifier>  expected	54	None	add
