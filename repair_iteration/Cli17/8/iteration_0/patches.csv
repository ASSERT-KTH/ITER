bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  	15	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	}  	non-compiled	[CE]  	15	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	if(stopAtNonOption)  {  tokens.add( "-- ");  }	}  	non-compiled	[CE]  	15	None	replace
4	[BUG]  [BUGGY]  tokens.add( "-- ");  [CE]  [FE]          AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  tokens.add( "-- ");  [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	tokens.add( "-- ");	}  	non-compiled	[CE]  	15	None	replace
5	[BUG]  [BUGGY]    [CE]  [FE]            AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	  	}  	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]    if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	    if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  	16	None	add
7	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  	16	None	add
8	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(getValue());  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(getValue());  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(getValue());  }		non-compiled	[CE]  	16	None	add
9	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  	16	None	add
10	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	this.stopAtNonOption  =  stopAtNonOption;	}  	non-compiled	[CE]  	15	None	replace
11	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  stopAtNonOption  :  null;  [CE]  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  stopAtNonOption  :  null;  [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	this.stopAtNonOption  =  stopAtNonOption?  stopAtNonOption  :  null;	}  	non-compiled	[CE]  	15	None	replace
12	[BUG]  [BUGGY]  if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  	15	None	replace
13	[BUG]  [BUGGY]    if(eatTheRest)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    if(eatTheRest)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	    if(eatTheRest)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  	16	None	add
14	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	217	217	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }		non-compiled	[CE]  	16	None	add
