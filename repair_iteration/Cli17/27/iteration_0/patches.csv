bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  options.iterator();  [BUGGY]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  options.iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
2	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  Arrays.asList(this.options).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
3	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [BUGGY]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  Arrays.asList(options).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    [BUGGY]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	  	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
5	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Option  currentOption  =  options.getOption( "stopAtNonOption ");  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	    Option  currentOption  =  options.getOption( "stopAtNonOption ");		non-compiled	[CE]  <identifier>  expected	56	None	add
6	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
7	[BUG]  [BUGGY]    Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Arrays.asList(arguments).iterator();  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	    Arrays.asList(arguments).iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
8	[BUG]  [BUGGY]    List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	    List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());		non-compiled	[CE]  <identifier>  expected	56	None	add
9	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Option  currentOption  =  options.getOption(token);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	    Option  currentOption  =  options.getOption(token);		non-compiled	[CE]  <identifier>  expected	56	None	add
10	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(tokenLength);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Option  currentOption  =  options.getOption(tokenLength);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	    Option  currentOption  =  options.getOption(tokenLength);		non-compiled	[CE]  <identifier>  expected	56	None	add
11	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption( "stopAtNonOption ");  tokens.add(currentOption);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Option  currentOption  =  options.getOption( "stopAtNonOption ");  tokens.add(currentOption);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	    Option  currentOption  =  options.getOption( "stopAtNonOption ");  tokens.add(currentOption);		non-compiled	[CE]  <identifier>  expected	56	None	add
12	[BUG]  [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Ilerator  iter  =  Arrays.asList(arguments).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
13	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(this.arguments).iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  Arrays.asList(this.arguments).iterator();  [BUGGY]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  Arrays.asList(this.arguments).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
