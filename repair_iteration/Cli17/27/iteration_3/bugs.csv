bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  Arrays.asList(this.options).iterator();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(!stopAtNonOption)  {  Arrays.asList(this.options).iterator();  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(!stopAtNonOption)  {  Arrays.asList(this.options).iterator();  }	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  2);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  2);	  Option    currentOption    =    options.getOption(tokenLength    +    2);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
4	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  2);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength  /  2);	  Option    currentOption    =    options.getOption(tokenLength    +    2);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
5	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  currentOption.arguments.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  currentOption.arguments.iterator();	  Iterator    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
6	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  -  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments.length  -  1);	  Option    currentOption    =    options.getOption(tokenLength,    arguments.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
7	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments.length,  tokenLength);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments.length,  tokenLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments.length,  tokenLength);	  Option    currentOption    =    options.getOption(tokenLength,    arguments.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
8	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length  +  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments.length  +  1);	  Option    currentOption    =    options.getOption(tokenLength,    arguments.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
9	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	IllegalArgumentIterator  iter  =  options.iterator();	  IllegalArgumentIterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
10	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  new  ArrayList(arguments).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  IllegalArgumentIterator  iter  =  new  ArrayList(arguments).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	IllegalArgumentIterator  iter  =  new  ArrayList(arguments).iterator();	  IllegalArgumentIterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
11	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  IllegalArgumentIterator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	IllegalArgumentIterator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();	  IllegalArgumentIterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
12	[BUG]  [BUGGY]  Arrays.asList(arguments).remove( "-- ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).remove( "-- ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).remove( "-- ");	  Arrays.asList(arguments).add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "-- "  +  tokenLength);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add( "-- "  +  tokenLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( "-- "  +  tokenLength);	  Arrays.asList(arguments).add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
14	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "-- "  +  token);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add( "-- "  +  token);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( "-- "  +  token);	  Arrays.asList(arguments).add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  Iterator  iter  =(options  ==  null)?  options.iterator()  :  Arrays.asList(arguments).iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(options  ==  null)?  options.iterator()  :  Arrays.asList(arguments).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(options  ==  null)?  options.iterator()  :  Arrays.asList(arguments).iterator();	  Iterator    iter    =(options!=    null)?    options.iterator()    :    Arrays.asList(options).iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  Iterator  iter  =(options!=  null)?  options.iterator()  :  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(options!=  null)?  options.iterator()  :  Arrays.asList(arguments).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(options!=  null)?  options.iterator()  :  Arrays.asList(arguments).iterator();	  Iterator    iter    =(options!=    null)?    options.iterator()    :    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
17	[BUG]  [BUGGY]  Iterator  iter  =(options  ==  null)?  options.iterator()  :  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(options  ==  null)?  options.iterator()  :  Arrays.asList(options).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(options  ==  null)?  options.iterator()  :  Arrays.asList(options).iterator();	  Iterator    iter    =(options!=    null)?    options.iterator()    :    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);	  ArrayList    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
19	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);	  ArrayList    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
20	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Ilerator  iter  =  options.iterator();	  Ilerator    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(stopAtNonOption)  {  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  }	  Option    currentOption    =    options.getOption(   "eatTheRest   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
22	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(stopAtNonOption)  {  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(stopAtNonOption)  {  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Option    currentOption    =    options.getOption(   "eatTheRest   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
23	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments,  stopAtNonOption);	  Option    currentOption    =    options.getOption(arguments);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
24	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.size());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.size());	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
25	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments[1]);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[1]);	  Option    currentOption    =    options.getOption(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
26	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[0],  arguments[1]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments[0],  arguments[1]);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[0],  arguments[1]);	  Option    currentOption    =    options.getOption(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
27	[BUG]  [BUGGY]  Arrays.asList(arguments).add(argumentLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add(argumentLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add(argumentLength);	  Arrays.asList(arguments).reset();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
28	[BUG]  [BUGGY]  Arrays.asList(arguments).add(arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add(arguments);	  Arrays.asList(arguments).reset();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  Arrays.sort(arguments).clear();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.sort(arguments).clear();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.sort(arguments).clear();	  Arrays.sort(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
30	[BUG]  [BUGGY]  Arrays.sort(arguments).add( "-- ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.sort(arguments).add( "-- ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.sort(arguments).add( "-- ");	  Arrays.sort(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
31	[BUG]  [BUGGY]  Arrays.sort(arguments).addAll(this.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.sort(arguments).addAll(this.options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.sort(arguments).addAll(this.options);	  Arrays.sort(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
32	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength  /  1);	  Option    currentOption    =    options.getOption(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
33	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);	  Option    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  Iterator  iter  =  this.arrays.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  this.arrays.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  this.arrays.iterator();	  Iterator    iter    =    arrays.iterator();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
35	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[tokenLength  -  1]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments[tokenLength  -  1]);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[tokenLength  -  1]);	  Option    currentOption    =    options.getOption(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[tokenLength  +  1]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments[tokenLength  +  1]);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[tokenLength  +  1]);	  Option    currentOption    =    options.getOption(arguments[tokenLength]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption,  arguments);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
38	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  arguments);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(token,  arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(token,  arguments);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
39	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  argumentLength);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(token,  argumentLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(token,  argumentLength);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
40	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  eatTheRest);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(token,  eatTheRest);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(token,  eatTheRest);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
41	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.currentOptions.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  String>  iter  =  this.currentOptions.iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  this.currentOptions.iterator();	  Iterator    <    String>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
42	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  Arrays.asList(options).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  List  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  iter  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption. ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption. ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOptions( "stopAtNonOption. ");	  List    <    String>    arguments    =    options.getOptions(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
46	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption ",  tokenLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption ",  tokenLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOptions( "stopAtNonOption ",  tokenLength);	  List    <    String>    arguments    =    options.getOptions(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
47	[BUG]  [BUGGY]  tokens.add(options.getOption( "stop "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  tokens.add(options.getOption( "stop "));  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add(options.getOption( "stop "));	  tokens.add(options.getOption(   "stopAtNonOption   "));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  tokens.add(options.getString( "stopAtNonOption "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  tokens.add(options.getString( "stopAtNonOption "));  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add(options.getString( "stopAtNonOption "));	  tokens.add(options.getOption(   "stopAtNonOption   "));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  Options  options  =  currentOption.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Options  options  =  currentOption.getOption( "stopAtNonOption ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Options  options  =  currentOption.getOption( "stopAtNonOption ");	  Options    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
50	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  options  =  currentOption.getOption( "stopAtNonOption ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  options  =  currentOption.getOption( "stopAtNonOption ");	  Options    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
51	[BUG]  [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  options  =  options.getOption( "stopAtNonOption ");	  Options    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
52	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  this.currentOptions.iterator();	  Iterator    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  Option>  iter  =  this.options.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
54	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  Option>  iter  =  currentOptions.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
55	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  Option>  iter  =  arguments.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  Option>  iter  =  arguments.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
56	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).addAll(this,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).addAll(this,  stopAtNonOption);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
57	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).addAll(options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).addAll(options);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
58	[BUG]  [BUGGY]  Arrays.asList(options).addAll(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(options).addAll(this);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(options).addAll(this);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
59	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "- ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add( "- ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( "- ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
60	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add( "   ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( "   ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
61	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  this.tokens.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  Arrays.asList(arguments).remove(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).remove(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).remove(arguments);	  Arrays.asList(arguments).clear();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
63	[BUG]  [BUGGY]  Arrays.asList(arguments).remove(argumentLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).remove(argumentLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).remove(argumentLength);	  Arrays.asList(arguments).clear();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
64	[BUG]  [BUGGY]  tokens.add( "stopAtNonOption ",  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  tokens.add( "stopAtNonOption ",  arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add( "stopAtNonOption ",  arguments);	  tokens.add(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  tokens.add( "stopAtNonOption  - ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  tokens.add( "stopAtNonOption  - ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add( "stopAtNonOption  - ");	  tokens.add(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ".toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ".toString());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption( "stopAtNonOption ".toString());	  Option    currentOption    =    options.getOption(   "stopAtNonOption.   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
67	[BUG]  [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments,  currentOption).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments,  currentOption).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Ilerator  iter  =  Arrays.asList(arguments,  currentOption).iterator();	  Ilerator    iter    =    Arrays.asList(arguments,    stopAtNonOption).iterator();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
68	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();	  Ilerator    iter    =    Arrays.asList(arguments,    stopAtNonOption).iterator();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
69	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments,  currentOption).iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  Arrays.asList(arguments,  currentOption).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  Arrays.asList(arguments,  currentOption).iterator();	  Ilerator    iter    =    Arrays.asList(arguments,    stopAtNonOption).iterator();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
70	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  this.arguments.iterator();	  Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  List  <  String>  arguments  =  currentOption.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  currentOption.getOption( "stopAtNonOption ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  currentOption.getOption( "stopAtNonOption ");	  List    <    String>    arguments    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
72	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption ",  tokenLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption ",  tokenLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOption( "stopAtNonOption ",  tokenLength);	  List    <    String>    arguments    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
73	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  arguments;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  arguments;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  arguments;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    this.options;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
74	[BUG]  [BUGGY]  Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  this.options;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  this.options;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  this.options;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    this.options;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
75	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  this.options;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  this.options;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  this.options;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    this.options;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
76	[BUG]  [BUGGY]  Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  null;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  null;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
77	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  null;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  null;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
78	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arrays.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  String>  iter  =  arrays.iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  arrays.iterator();	  Iterator    <    String>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
79	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ".clone());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ".clone());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption( "stopAtNonOption ".clone());	  Option    currentOption    =    options.getOption(   "stopAtNonOption.   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
80	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ".cloneTree());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ".cloneTree());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption( "stopAtNonOption ".cloneTree());	  Option    currentOption    =    options.getOption(   "stopAtNonOption.   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
81	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[0],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments[0],  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[0],  stopAtNonOption);	  Option    currentOption    =    options.getOption(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
82	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]  -  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[0]  -  1);	  Option    currentOption    =    options.getOption(arguments[0]);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
83	[BUG]  [BUGGY]  tokens.add(options.getOption( "stopAtNonOption "),  arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  tokens.add(options.getOption( "stopAtNonOption "),  arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add(options.getOption( "stopAtNonOption "),  arguments);	  tokens.add(options.getOption(   "stopAtNonOption   "));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  options;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  options;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  options;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
85	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments,  tokenLength);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(arguments,  tokenLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments,  tokenLength);	  Option    currentOption    =    options.getOption(tokenLength,    arguments.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
86	[BUG]  [BUGGY]  Arrays.asList(arguments).add( ";n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add( ";n ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( ";n ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
87	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  Arrays.asList(arguments).iterator(0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  IllegalArgumentIterator  iter  =  Arrays.asList(arguments).iterator(0);  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	IllegalArgumentIterator  iter  =  Arrays.asList(arguments).iterator(0);	  IllegalArgumentIterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
88	[BUG]  [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  options.keySet().iterator();	  iter.remove();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
89	[BUG]  [BUGGY]  Arrays.sort(arguments).add( "-- ").iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.sort(arguments).add( "-- ").iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.sort(arguments).add( "-- ").iterator();	  Arrays.sort(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
90	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
91	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  argumentLength);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption,  argumentLength);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption,  argumentLength);	  Option    currentOption    =    options.getOption(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
92	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption   ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption   ",  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOptions( "stopAtNonOption   ",  stopAtNonOption);	  List    <    String>    arguments    =    options.getOptions(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
93	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption. ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption. ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOption( "stopAtNonOption. ");	  List    <    String>    arguments    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
94	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption ",  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOption( "stopAtNonOption ",  stopAtNonOption);	  List    <    String>    arguments    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
95	[BUG]  [BUGGY]  tokens.add( "stopAtNonOption  eatTheRest ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  tokens.add( "stopAtNonOption  eatTheRest ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add( "stopAtNonOption  eatTheRest ");	  tokens.add(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
96	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  currentOption.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  currentOption.iterator();	  Iterator    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
97	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
98	[BUG]  [BUGGY]  Arrays.asList(arguments).put( "-- ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).put( "-- ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).put( "-- ");	  Arrays.asList(arguments).add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
99	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this);  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(stopAtNonOption)  {  Arrays.asList(arguments).addAll(this);  }	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
100	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Set  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
101	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(this.options).iterator();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(stopAtNonOption)  {  Arrays.asList(this.options).iterator();  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(stopAtNonOption)  {  Arrays.asList(this.options).iterator();  }	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
102	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ");  if(currentOption!=  null)  {  tokens.add(currentOption);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ");  if(currentOption!=  null)  {  tokens.add(currentOption);  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption( "stopAtNonOption ");  if(currentOption!=  null)  {  tokens.add(currentOption);  }	  Option    currentOption    =    options.getOption(   "eatTheRest   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
103	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
104	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
105	[BUG]  [BUGGY]  Arrays.asList(arguments).add( ": ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add( ": ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( ": ");	  Arrays.asList(arguments).add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
106	[BUG]  [BUGGY]  Iterator  iter  =(options!=  null)?  options.iterator()  :  Lists.asList(options).iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(options!=  null)?  options.iterator()  :  Lists.asList(options).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(options!=  null)?  options.iterator()  :  Lists.asList(options).iterator();	  Iterator    iter    =(options!=    null)?    options.iterator()    :    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
107	[BUG]  [BUGGY]  options  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  options  =  options.getOption( "stopAtNonOption ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	options  =  options.getOption( "stopAtNonOption ");	  Options    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
108	[BUG]  [BUGGY]  Options  options  =  options.getOption( "stopAtNonOption ",  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Options  options  =  options.getOption( "stopAtNonOption ",  arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Options  options  =  options.getOption( "stopAtNonOption ",  arguments);	  Options    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
109	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  Option>  iter  =  tokens.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  Option>  iter  =  tokens.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
110	[BUG]  [BUGGY]  tokens.add( "stopAtNonOption:  eatTheRest ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  tokens.add( "stopAtNonOption:  eatTheRest ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add( "stopAtNonOption:  eatTheRest ");	  tokens.add(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
111	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption).iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.sort(arguments,  stopAtNonOption).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.sort(arguments,  stopAtNonOption).iterator();	  Arrays.sort(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
112	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.arguments).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.arguments).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  Arrays.asList(this.arguments).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
113	[BUG]  [BUGGY]  Set  <  String>  arguments  =  options.getOptions( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  options.getOptions( "stopAtNonOption ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Set  <  String>  arguments  =  options.getOptions( "stopAtNonOption ");	  List    <    String>    arguments    =    options.getOptions(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
114	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
115	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	if(this.options!=  null)  {  Arrays.asList(this.options).iterator();  }  else  {  tokens  =  new  ArrayList  <  String>();  }	  Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
116	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  this.currentOption.options.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
117	[BUG]  [BUGGY]  iter.clear();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  iter.clear();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	iter.clear();	  iter.remove();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
118	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "-- ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add( "-- ",  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( "-- ",  stopAtNonOption);	  Arrays.asList(arguments).add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
119	[BUG]  [BUGGY]  Arrays.asList(arguments).add(token);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).add(token);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add(token);	  Arrays.asList(arguments).add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
120	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(token);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).addAll(token);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).addAll(token);	  Arrays.asList(arguments).addAll(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
121	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
122	[BUG]  [BUGGY]  Set  <  String>  arguments  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  options.getOption( "stopAtNonOption ");  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Set  <  String>  arguments  =  options.getOption( "stopAtNonOption ");	  List    <    String>    arguments    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
