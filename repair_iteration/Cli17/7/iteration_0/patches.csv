bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens.add( "-- ");  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]  tokens.add( "-- ");  [BUGGY]  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	tokens.add( "-- ");	tokens.add(value);  	non-compiled	[CE]  	13	None	replace
2	[BUG]  [BUGGY]  tokens.add( "- ");  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]  tokens.add( "- ");  [BUGGY]  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	tokens.add( "- ");	tokens.add(value);  	non-compiled	[CE]  	13	None	replace
3	[BUG]  [BUGGY]  tokens.add(currentOption.getValue());  [CE]  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]  tokens.add(currentOption.getValue());  [BUGGY]  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	tokens.add(currentOption.getValue());	tokens.add(value);  	non-compiled	[CE]  	13	None	replace
4	[BUG]  [BUGGY]  tokens.add(currentOption);  [CE]  [FE]          AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]  tokens.add(currentOption);  [BUGGY]  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	tokens.add(currentOption);	tokens.add(value);  	non-compiled	[CE]  	13	None	replace
5	[BUG]  [BUGGY]    [CE]  [FE]            AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]    [BUGGY]  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	  	tokens.add(value);  	non-compiled	[CE]  	13	None	replace
6	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  }		non-compiled	[CE]  	14	None	add
7	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  	14	None	add
8	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  stopAtNonOption  =  false;  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  stopAtNonOption  =  false;  }		non-compiled	[CE]  	14	None	add
9	[BUG]  [BUGGY]    tokens.add(currentOption.toString());  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]    tokens.add(currentOption.toString());  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	    tokens.add(currentOption.toString());		non-compiled	[CE]  	14	None	add
10	[BUG]  [BUGGY]    tokens.add(currentOption.getArg());  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]    tokens.add(currentOption.getArg());  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	    tokens.add(currentOption.getArg());		non-compiled	[CE]  	14	None	add
11	[BUG]  [BUGGY]  tokens.add(this.stopAtNonOption);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]  tokens.add(this.stopAtNonOption);  [BUGGY]  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	tokens.add(this.stopAtNonOption);	tokens.add(value);  	non-compiled	[CE]  	13	None	replace
12	[BUG]  [BUGGY]  tokens.add('-');  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  tokens.add( "-- ");  [BUGGY]  tokens.add('-');  [BUGGY]  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	215	215	1	replace	tokens.add('-');	tokens.add(value);  	non-compiled	[CE]  	13	None	replace
