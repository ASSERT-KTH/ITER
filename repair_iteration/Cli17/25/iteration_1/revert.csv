projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.getValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,argumentLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopsAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=this.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.cloneTree();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength+2);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(true);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(false);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.getValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.getValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next(),tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=eatTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength-1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength-=tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-2);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-1+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength+3);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength);}else{tokens=newArrayList<String>();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.eatTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.getAsString();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)options.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,null);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.get();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next()-1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||eatTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{tokens=newArrayList<String>();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments.length);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.getKey();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=token.length;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.remove();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.previous();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&arguments.length>0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EATTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,this.stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength/1);
