bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  tokenLength);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  tokenLength);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(Token.NAME,  tokenLength);	      Option    currentOption    =    options.getOption(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
2	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  arguments);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(Token.NAME,  arguments);	      Option    currentOption    =    options.getOption(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
3	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  argumentLength);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  argumentLength);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(Token.NAME,  argumentLength);	      Option    currentOption    =    options.getOption(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  stopAtNonOption  =  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  stopAtNonOption  =  true;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	stopAtNonOption  =  true;	  stopAtNonOption    =    false;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  StopAtNonOption  =  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  StopAtNonOption  =  true;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	StopAtNonOption  =  true;	  stopAtNonOption    =    false;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  stopsAtNonOption  =  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  stopsAtNonOption  =  true;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	stopsAtNonOption  =  true;	  stopAtNonOption    =    false;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  <  String>  iter  =  this.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
8	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
9	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  <  String>  iter  =  arguments.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
10	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption;  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption;	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.cloneTree();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.cloneTree();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.cloneTree();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }	  eatTheRest    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  eatTheRest    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens.add(arguments[0],  arguments[1]);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens.add(arguments[0],  arguments[1]);  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens.add(arguments[0],  arguments[1]);  }	  eatTheRest    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  2);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  2);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  stopAtNonOption(true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  stopAtNonOption(true);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	stopAtNonOption(true);	  stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
17	[BUG]  [BUGGY]  stopAtNonOption(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  stopAtNonOption(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	stopAtNonOption(arguments);	  stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  stopAtNonOption(false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {    [BUGGY]  stopAtNonOption(false);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	stopAtNonOption(false);	  stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
19	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption.getValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption.getValue();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption.getValue();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.getValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options.getValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options.getValue();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options.getValue();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.getValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest();  }	  eatTheRest();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  eatTheRest();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  eatTheRest();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  else  {  tokens.add(token);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  else  {  tokens.add(token);  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest();  }  else  {  tokens.add(token);  }	  eatTheRest();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest  =  false;  }	  eatTheRest    =    false;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  eatTheRest    =    false;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  tokens.add(arguments[0],  arguments[1]);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  tokens.add(arguments[0],  arguments[1]);  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  tokens.add(arguments[0],  arguments[1]);  }	  eatTheRest    =    false;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  Object>)iter.next();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  Object>)iter.next();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  Object>)iter.next();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)iter.next();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.next(),  tokenLength;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.next(),  tokenLength;  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.next(),  tokenLength;	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)iter.next();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  this.stopAtNonOption  =  eatTheRest;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  eatTheRest;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  eatTheRest;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
31	[BUG]  [BUGGY]  this.stopAtNonOption  =  false;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  false;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  false;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
32	[BUG]  [BUGGY]  this.stopAtNonOption  =  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  true;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  true;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
33	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(arguments);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
36	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  iter  =  arguments.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
37	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  iter  =  tokens.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
38	[BUG]  [BUGGY]  this.tokenLength  =  tokenLength  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.tokenLength  =  tokenLength  +  1;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.tokenLength  =  tokenLength  +  1;	  this.tokenLength    =    tokenLength;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  this.tokenLength  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.tokenLength  =  0;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.tokenLength  =  0;	  this.tokenLength    =    tokenLength;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  this.tokenLength  =  tokenLength  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.tokenLength  =  tokenLength  -  1;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.tokenLength  =  tokenLength  -  1;	  this.tokenLength    =    tokenLength;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  this.tokenLength  -=  tokenLength;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.tokenLength  -=  tokenLength;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.tokenLength  -=  tokenLength;	  this.tokenLength    =    tokenLength;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  2);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  2);	      Option    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  1  +  1);	      Option    currentOption    =    options.getOption(tokenLength    -    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  3);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  3);	      Option    currentOption    =    options.getOption(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init(tokenLength);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  init(tokenLength);  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  init(tokenLength);  }	  init(tokenLength);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init(tokenLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  init(tokenLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  init(tokenLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  init(tokenLength);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init(tokenLength);  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  init(tokenLength);  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  init(tokenLength);  }  else  {  tokens  =  new  ArrayList  <  String>();  }	  init(tokenLength);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  init(arguments);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {    [BUGGY]  init(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	init(arguments);	  init(tokenLength);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption.clone();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.currentOption.clone();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.clone();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)arguments.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)arguments.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)arguments.clone();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.clone();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options.clone();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.clone();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
52	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.eatTheRest;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.eatTheRest;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  StopAtNonOption.eatTheRest;	  this.stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
53	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.stopAtNonOption();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.stopAtNonOption();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  StopAtNonOption.stopAtNonOption();	  this.stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
54	[BUG]  [BUGGY]  init(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  init(tokenLength,  stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	init(tokenLength,  stopAtNonOption);	  init(tokenLength);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.getAsString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.getAsString();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.getAsString();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.getValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
56	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens  =  new  String[tokenLength];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens  =  new  String[tokenLength];  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens  =  new  String[tokenLength];  }	  eatTheRest    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  iter  =  currentOptions.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  this.tokenLength  =  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.tokenLength  =  1;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.tokenLength  =  1;	  this.tokenLength    =    tokenLength;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(tokenLength,  stopAtNonOption);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
60	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)options.clone();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)options.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)options.clone();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.clone();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(Token.NAME,  null);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(Token.NAME,  null);	      Option    currentOption    =    options.getOption(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
62	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.get();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.get();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.get();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)iter.next();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
63	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.next()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.next()  -  1;  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.next()  -  1;	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)iter.next();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
64	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  eatTheRest;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  eatTheRest;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  eatTheRest;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
65	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  +  1;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  stopAtNonOption  +  1;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
66	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  currentOptions.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  <  String>  iter  =  currentOptions.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  StopAtNonOption.ERROR;	  this.stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
68	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.EXPR_RESULT;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  StopAtNonOption.EXPR_RESULT;	  this.stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
69	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption  +  1;  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption  +  1;	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  stopAtNonOption(tokenLength);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  stopAtNonOption(tokenLength);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	stopAtNonOption(tokenLength);	  stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest();  }  else  {  tokens  =  new  ArrayList  <  String>();  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	if(stopAtNonOption)  {  eatTheRest();  }  else  {  tokens  =  new  ArrayList  <  String>();  }	  eatTheRest();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
72	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments.length);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.getKey();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.getKey();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)currentOption.getKey();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.getValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
74	[BUG]  [BUGGY]  this.tokenLength  =  token.length;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.tokenLength  =  token.length;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.tokenLength  =  token.length;	  this.tokenLength    =    tokenLength;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
75	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.remove();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.remove();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.remove();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)iter.next();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
76	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.previous();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.previous();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)iter.previous();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)iter.next();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
77	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  arguments.length  >  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  arguments.length  >  0;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  arguments.length  >  0;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
78	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options;  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.options;	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.arguments.clone();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.arguments.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	PosixParser  <  String>  currentOption  =(PosixParser  <  String>)this.arguments.clone();	      PosixParser    <    String>    currentOption    =(PosixParser    <    String>)currentOption.clone();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
80	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.EATTheRest;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.EATTheRest;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.stopAtNonOption  =  StopAtNonOption.EATTheRest;	  this.stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
81	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  eatTheRest  =  stopAtNonOption;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	eatTheRest  =  stopAtNonOption;	  eatTheRest    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
82	[BUG]  [BUGGY]  stopAtNonOption(this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  stopAtNonOption(this);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	stopAtNonOption(this);	  stopAtNonOption();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
83	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Iterator  iter  =  Arrays.asList(arguments).iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
84	[BUG]  [BUGGY]  this.eatTheRest  =  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  this.eatTheRest  =  false;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	this.eatTheRest  =  false;	  eatTheRest    =    false;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
85	[BUG]  [BUGGY]  eatTheRest  =  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  eatTheRest  =  null;  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	eatTheRest  =  null;	  eatTheRest    =    false;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
86	[BUG]  [BUGGY]  init(tokenLength,  this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  init(tokenLength,  this.stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	init(tokenLength,  this.stopAtNonOption);	  init(tokenLength);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
87	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  /  1);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	99	99	1	replace	Option  currentOption  =  options.getOption(tokenLength  /  1);	      Option    currentOption    =    options.getOption(tokenLength    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
