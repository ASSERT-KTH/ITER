bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    tokens.add(token);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    tokens.add(token);  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    tokens.add(token);		non-compiled	[CE]  <identifier>  expected	66	None	add
2	[BUG]  [BUGGY]    tokens.add( "- ");  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    tokens.add( "- ");  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    tokens.add( "- ");		non-compiled	[CE]  <identifier>  expected	66	None	add
3	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	66	None	add
4	[BUG]  [BUGGY]    int  tokenLength  =  token.length();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    int  tokenLength  =  token.length();  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    int  tokenLength  =  token.length();		non-compiled	[CE]  <identifier>  expected	66	None	add
5	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    Iterator  <  String>  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	66	None	add
6	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  [BUGGY]  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {	else  if  (token.startsWith( "- "))  {  	non-compiled	[CE]  <identifier>  expected	65	None	replace
7	[BUG]  [BUGGY]  else  if  (options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]  else  if  (options.hasOption(token))  {  [BUGGY]  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	else  if  (options.hasOption(token))  {	else  if  (token.startsWith( "- "))  {  	non-compiled	[CE]  <identifier>  expected	65	None	replace
8	[BUG]  [BUGGY]  else  if  (token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]  else  if  (token.startsWith( "-- "))  {  [BUGGY]  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	else  if  (token.startsWith( "-- "))  {	else  if  (token.startsWith( "- "))  {  	non-compiled	[CE]  <identifier>  expected	65	None	replace
9	[BUG]  [BUGGY]    token  =  stopAtNonOption?  stopAtNonOption  :  null;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    token  =  stopAtNonOption?  stopAtNonOption  :  null;  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    token  =  stopAtNonOption?  stopAtNonOption  :  null;		non-compiled	[CE]  <identifier>  expected	66	None	add
10	[BUG]  [BUGGY]    token  =  stopAtNonOption?  stopAtNonOption  :  token;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    token  =  stopAtNonOption?  stopAtNonOption  :  token;  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    token  =  stopAtNonOption?  stopAtNonOption  :  token;		non-compiled	[CE]  <identifier>  expected	66	None	add
11	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	66	None	add
12	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.entities().iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]    Iterator  <  String>  iter  =  options.entities().iterator();  [BUGGY]  else  if  (token.startsWith( "- "))    {  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	    Iterator  <  String>  iter  =  options.entities().iterator();		non-compiled	[CE]  <identifier>  expected	66	None	add
13	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  {  tokens.add(token);  }  }  else  if  ( "- ".equals(token))  {  processSingleHyphen(token);  }  [BUGGY]  else  if(!stopAtNonOption  &&  token.startsWith( "- "))  {  [BUGGY]  {  int  tokenLength  =  token.length();  if  (tokenLength  ==  2)  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	130	131	1	replace	else  if(!stopAtNonOption  &&  token.startsWith( "- "))  {	else  if  (token.startsWith( "- "))  {  	non-compiled	[CE]  <identifier>  expected	65	None	replace
