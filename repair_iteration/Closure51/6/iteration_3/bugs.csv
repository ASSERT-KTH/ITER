bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  value  =  (int)x  &  0xFFFF;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  &  0xFFFF;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  &  0xFFFF;	  long    value    =    (long)x    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
2	[BUG]  [BUGGY]  long  value  =  (long)x  -  0xFFFF;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  -  0xFFFF;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  -  0xFFFF;	  long    value    =    (long)x    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
3	[BUG]  [BUGGY]  long  value  =  (long)x  &  0xFFFFL;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  &  0xFFFFL;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  &  0xFFFFL;	  long    value    =    (long)x    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
4	[BUG]  [BUGGY]  Integer  value  =  getLastInt();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Integer  value  =  getLastInt();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Integer  value  =  getLastInt();	  Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
5	[BUG]  [BUGGY]  Integer  value  =  getLastChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Integer  value  =  getLastChar()  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Integer  value  =  getLastChar()  +  1;	  Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
6	[BUG]  [BUGGY]  Integer  value  =  getLastChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Integer  value  =  getLastChar()  -  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Integer  value  =  getLastChar()  -  1;	  Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
7	[BUG]  [BUGGY]  Integer  value  =  getLastIntChar();  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Integer  value  =  getLastIntChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Integer  value  =  getLastIntChar();	  Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
8	[BUG]  [BUGGY]  Integer  value  =  getLastChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Integer  value  =  getLastChar().doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Integer  value  =  getLastChar().doubleValue();	  Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
9	[BUG]  [BUGGY]  Integer  value  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Integer  value  =  getFirstChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Integer  value  =  getFirstChar();	  Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
10	[BUG]  [BUGGY]  int  value  =  (int)x  +  3;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  +  3;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  +  3;	  long    value    =    (long)x    +    3;    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
11	[BUG]  [BUGGY]  long  value  =  (long)x  /  3;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  /  3;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  /  3;	  long    value    =    (long)x    +    3;    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
12	[BUG]  [BUGGY]  int  value  =  (int)x  -  0xff;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  -  0xff;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  -  0xff;	  long    value    =    (long)x    -    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
13	[BUG]  [BUGGY]  long  value  =  (long)x  -  100.0;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  -  100.0;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  -  100.0;	  long    value    =    (long)x    -    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
14	[BUG]  [BUGGY]  long  value  =  (long)x  -  2;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  -  2;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  -  2;	  long    value    =    (long)x    -    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
15	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  x));  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  x));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  Math.pow(10,  x));	  int    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
16	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev  +  1));  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev  +  1));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  Math.pow(10,  prev  +  1));	  int    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
17	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev  -  1));  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev  -  1));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  Math.pow(10,  prev  -  1));	  int    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
18	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev),  x);  [CE]  cannot  find  symbol  iop  [FE]                                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev),  x);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  Math.pow(10,  prev),  x);	  int    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
19	[BUG]  [BUGGY]  char  value  =  Math.pow(10,  Math.pow(10,  prev));  [CE]  cannot  find  symbol  iop  [FE]                                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =  Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =  Math.pow(10,  Math.pow(10,  prev));	  int    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
20	[BUG]  [BUGGY]  double  value  =  (double)x  &  0xff;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  (double)x  &  0xff;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  (double)x  &  0xff;	  int    value    =    (int)x    &    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
21	[BUG]  [BUGGY]  char  value  =  (int)x  &  0xff;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =  (int)x  &  0xff;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =  (int)x  &  0xff;	  int    value    =    (int)x    &    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
22	[BUG]  [BUGGY]  int  value  =  (int)x  &  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  &  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  &  1;	  int    value    =    (int)x    &    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
23	[BUG]  [BUGGY]  double  value  =  getLastChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getLastChar()  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getLastChar()  +  1;	  double    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
24	[BUG]  [BUGGY]  double  value  =  getLastChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getLastChar()  -  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getLastChar()  -  1;	  double    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
25	[BUG]  [BUGGY]  double  value  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getFirstChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getFirstChar();	  double    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	4	None	replace
26	[BUG]  [BUGGY]  long  value  =  (long)x  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  /  100.0;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  /  100.0;	  long    value    =    (long)x    /    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
27	[BUG]  [BUGGY]  long  value  =  (long)x  /  2;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  /  2;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  /  2;	  long    value    =    (long)x    /    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
28	[BUG]  [BUGGY]  long  value  =  (long)x  /  1024;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  /  1024;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  /  1024;	  long    value    =    (long)x    /    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
29	[BUG]  [BUGGY]  int  value  =  (int)x  /  0xff;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  /  0xff;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  /  0xff;	  long    value    =    (long)x    /    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
30	[BUG]  [BUGGY]  int  value  =  (int)x  /  1;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  /  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  /  1;	  long    value    =    (long)x    /    1;    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
31	[BUG]  [BUGGY]  long  value  =  (long)x  /  10;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  /  10;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  /  10;	  long    value    =    (long)x    /    1;    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
32	[BUG]  [BUGGY]  long  value  =  (long)x  /  4;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  /  4;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  /  4;	  long    value    =    (long)x    /    1;    	non-compiled	[CE]  cannot  find  symbol  iop	11	None	replace
33	[BUG]  [BUGGY]  double  value  =  (double)x  +  1;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  (double)x  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  (double)x  +  1;	  double    value    =    (double)x;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
34	[BUG]  [BUGGY]  double  value  =  (double)x  -  1;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  (double)x  -  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  (double)x  -  1;	  double    value    =    (double)x;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
35	[BUG]  [BUGGY]  double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  prev));  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  prev));	  double    value    =    (double)x;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
36	[BUG]  [BUGGY]  double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  x));  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  x));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  x));	  double    value    =    (double)x;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
37	[BUG]  [BUGGY]  double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  exp));  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  exp));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  (double)x  /(double)Math.pow(10,  Math.pow(10,  exp));	  double    value    =    (double)x;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
38	[BUG]  [BUGGY]  int  value  =  (int)x  +  2;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  +  2;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  +  2;	  long    value    =    (long)x    +    2;    	non-compiled	[CE]  cannot  find  symbol  iop	15	None	replace
39	[BUG]  [BUGGY]  String  value  =  (String)x;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  String  value  =  (String)x;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	String  value  =  (String)x;	  char    value    =    (char)x;    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
40	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  x));  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  x));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(10,  x));	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
41	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev  +  1));  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev  +  1));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(10,  prev  +  1));	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
42	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev  -  1));  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev  -  1));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(10,  prev  -  1));	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
43	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev),  x);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev),  x);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(10,  prev),  x);	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
44	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev).doubleValue());  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev).doubleValue());  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(10,  prev).doubleValue());	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
45	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev),  1);  [CE]  cannot  find  symbol  iop  [FE]                                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev),  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(10,  prev),  1);	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
46	[BUG]  [BUGGY]  String  value  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  String  value  =  getLastChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	String  value  =  getLastChar();	  char    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
47	[BUG]  [BUGGY]  BigInteger  value  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  BigInteger  value  =  getLastChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	BigInteger  value  =  getLastChar();	  char    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
48	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  +  1);  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev  +  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev  +  1);	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
49	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  1);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev  -  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev  -  1);	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
50	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  x);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  x);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  x);	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
51	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  -  10);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev  -  10);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev  -  10);	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
52	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)-  1;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev)-  1;	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
53	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)+  1;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev)+  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev)+  1;	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
54	[BUG]  [BUGGY]  int  value  =  (int)Math.pow(10,  prev);  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.pow(10,  prev);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.pow(10,  prev);	  int    value    =    (int)Math.pow(10,    x);    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
55	[BUG]  [BUGGY]  int  value  =  (int)Math.pow(10,  x  +  1);  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.pow(10,  x  +  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.pow(10,  x  +  1);	  int    value    =    (int)Math.pow(10,    x);    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
56	[BUG]  [BUGGY]  int  value  =  (int)Math.pow(10,  Math.pow(10,  prev));  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.pow(10,  Math.pow(10,  prev));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.pow(10,  Math.pow(10,  prev));	  int    value    =    (int)Math.pow(10,    x);    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
57	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getLastChar().doubleValue()  +  1;	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
58	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getLastChar().doubleValue()  -  1;	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
59	[BUG]  [BUGGY]  long  value  =  getLastChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  getLastChar().doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  getLastChar().doubleValue();	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
60	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0;  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getLastChar().doubleValue()  /  100.0;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getLastChar().doubleValue()  /  100.0;	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
61	[BUG]  [BUGGY]  double  value  =  getLastChar().doubleValue()  /  2;  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getLastChar().doubleValue()  /  2;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getLastChar().doubleValue()  /  2;	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
62	[BUG]  [BUGGY]  int  value  =  getLastChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getLastChar()  -  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getLastChar()  -  1;	  int    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
63	[BUG]  [BUGGY]  int  value  =  getLastChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getLastChar()  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getLastChar()  +  1;	  int    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
64	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getLastChar().doubleValue()  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getLastChar().doubleValue()  +  1;	  int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
65	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getLastChar().doubleValue()  -  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getLastChar().doubleValue()  -  1;	  int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
66	[BUG]  [BUGGY]  char  value  =  getLastChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =  getLastChar().doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =  getLastChar().doubleValue();	  int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
67	[BUG]  [BUGGY]  int  value  =  getLastChar().doubleValue()  /  2;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getLastChar().doubleValue()  /  2;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getLastChar().doubleValue()  /  2;	  int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
68	[BUG]  [BUGGY]  long  value  =  (long)x  /  1L;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  /  1L;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  /  1L;	  long    value    =    (long)x    -    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
69	[BUG]  [BUGGY]  int  value  =  (int)x  -  1L;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  -  1L;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  -  1L;	  long    value    =    (long)x    -    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	13	None	replace
70	[BUG]  [BUGGY]  char  value  =  (int)x  +  1;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =  (int)x  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =  (int)x  +  1;	  int    value    =    (int)x    +    1;    	non-compiled	[CE]  cannot  find  symbol  iop	14	None	replace
71	[BUG]  [BUGGY]  long  value  =  getLastChar()  +  1;  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  getLastChar()  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  getLastChar()  +  1;	  long    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
72	[BUG]  [BUGGY]  long  value  =  getLastChar()  -  1;  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  getLastChar()  -  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  getLastChar()  -  1;	  long    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
73	[BUG]  [BUGGY]  long  value  =  getLastChar().longValue();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  getLastChar().longValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  getLastChar().longValue();	  long    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
74	[BUG]  [BUGGY]  int  value  =  (int)x  +  1L;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)x  +  1L;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)x  +  1L;	  long    value    =    (long)x    +    1L;    	non-compiled	[CE]  cannot  find  symbol  iop	22	None	replace
75	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  +  1);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev  +  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev  +  1);	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
76	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  -  1);  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev  -  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev  -  1);	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
77	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  x);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  x);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  x);	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
78	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  -  10);  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev  -  10);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev  -  10);	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
79	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  +  2);  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev  +  2);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev  +  2);	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
80	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev  *  10);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev  *  10);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev  *  10);	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
81	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)-  1;  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev)-  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev)-  1;	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
82	[BUG]  [BUGGY]  int  value  =  (int)Math.floor(x);  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.floor(x);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.floor(x);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
83	[BUG]  [BUGGY]  double  value  =  (double)Math.floor(prev);  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  (double)Math.floor(prev);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  (double)Math.floor(prev);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
84	[BUG]  [BUGGY]  char  value  =  (char)Math.floor(prev);  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =  (char)Math.floor(prev);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =  (char)Math.floor(prev);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
85	[BUG]  [BUGGY]  int  value  =  (int)Math.ceil(x);  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.ceil(x);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.ceil(x);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
86	[BUG]  [BUGGY]  long  value  =  (long)Math.floor(prev);  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)Math.floor(prev);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)Math.floor(prev);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
87	[BUG]  [BUGGY]  char  value  =  (int)Math.floor(prev);  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =  (int)Math.floor(prev);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =  (int)Math.floor(prev);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
88	[BUG]  [BUGGY]  long  value  =  (long)x  +  4;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  +  4;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  +  4;	  long    value    =    (long)x    +    3;    	non-compiled	[CE]  cannot  find  symbol  iop	16	None	replace
89	[BUG]  [BUGGY]  int  value  =  (int)Math.ceil(prev);  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.ceil(prev);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.ceil(prev);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
90	[BUG]  [BUGGY]  char  value  =(x  ==  '-')?  (int)x  :  prev;  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =(x  ==  '-')?  (int)x  :  prev;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =(x  ==  '-')?  (int)x  :  prev;	  char    value    =    (char)x;    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
91	[BUG]  [BUGGY]  char  value  =(x  ==  '-')?  (char)x  :  prev;  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =(x  ==  '-')?  (char)x  :  prev;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =(x  ==  '-')?  (char)x  :  prev;	  char    value    =    (char)x;    	non-compiled	[CE]  cannot  find  symbol  iop	18	None	replace
92	[BUG]  [BUGGY]  char  value  =(x  ==  '-')?(x  :  prev);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =(x  ==  '-')?(x  :  prev);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =(x  ==  '-')?(x  :  prev);	  char    value    =    (char)x;    	non-compiled	[CE]  ')'  expected	18	None	replace
93	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev)-  1);  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(10,  prev)-  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(10,  prev)-  1);	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
94	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  Math.pow(11,  prev));  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  Math.pow(11,  prev));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  Math.pow(11,  prev));	  double    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	7	None	replace
95	[BUG]  [BUGGY]  long  value  =  (long)x  -  10;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  -  10;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  -  10;	  long    value    =    (long)x    -    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	2	None	replace
96	[BUG]  [BUGGY]  char  value  =  (char)x  &  0xff;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  char  value  =  (char)x  &  0xff;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	char  value  =  (char)x  &  0xff;	  int    value    =    (int)x    &    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
97	[BUG]  [BUGGY]  int  value  =  (int)value  &  0xff;  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)value  &  0xff;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)value  &  0xff;	  int    value    =    (int)x    &    0xff;    	non-compiled	[CE]  cannot  find  symbol  iop	1	None	replace
98	[BUG]  [BUGGY]  int  value  =  (int)Math.pow(10,  Math.pow(10,  x));  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.pow(10,  Math.pow(10,  x));  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.pow(10,  Math.pow(10,  x));	  int    value    =    (int)Math.pow(10,    x);    	non-compiled	[CE]  cannot  find  symbol  iop	19	None	replace
99	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev)-  1);  [CE]  cannot  find  symbol  iop  [FE]                                ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev)-  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  Math.pow(10,  prev)-  1);	  int    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
100	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev)+  1);  [CE]  cannot  find  symbol  iop  [FE]                                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  Math.pow(10,  prev)+  1);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  Math.pow(10,  prev)+  1);	  int    value    =    Math.pow(10,    Math.pow(10,    prev));    	non-compiled	[CE]  cannot  find  symbol  iop	10	None	replace
101	[BUG]  [BUGGY]  double  value  =(double)prev;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =(double)prev;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =(double)prev;	  double    value    =    (double)x;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
102	[BUG]  [BUGGY]  int  value  =  getLastChar().intValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getLastChar().intValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getLastChar().intValue();	  int    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
103	[BUG]  [BUGGY]  int  value  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getFirstChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getFirstChar();	  int    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	5	None	replace
104	[BUG]  [BUGGY]  Integer  value  =  getLastChar().intValue();  [CE]  cannot  find  symbol  iop  [FE]                              ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Integer  value  =  getLastChar().intValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Integer  value  =  getLastChar().intValue();	  Integer    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	9	None	replace
105	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev  /  10);  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev  /  10);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev  /  10);	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
106	[BUG]  [BUGGY]  int  value  =  getFirstChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getFirstChar().doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getFirstChar().doubleValue();	  int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
107	[BUG]  [BUGGY]  int  value  =  getLastChar().longValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  getLastChar().longValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  getLastChar().longValue();	  int    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	24	None	replace
108	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev)+  1;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev)+  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev)+  1;	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
109	[BUG]  [BUGGY]  long  value  =  (long)x  &  0xFFFF  +  1;  [CE]  cannot  find  symbol  iop  [FE]                  ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  (long)x  &  0xFFFF  +  1;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  (long)x  &  0xFFFF  +  1;	  long    value    =    (long)x    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol  iop	26	None	replace
110	[BUG]  [BUGGY]  double  value  =  getFirstChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getFirstChar().doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getFirstChar().doubleValue();	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
111	[BUG]  [BUGGY]  Double  value  =  getLastChar().doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Double  value  =  getLastChar().doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Double  value  =  getLastChar().doubleValue();	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
112	[BUG]  [BUGGY]  Long  value  =  getLastChar();  [CE]  cannot  find  symbol  iop  [FE]                            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  Long  value  =  getLastChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	Long  value  =  getLastChar();	  char    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	8	None	replace
113	[BUG]  [BUGGY]  double  value  =  getLastChar().longValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  getLastChar().longValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  getLastChar().longValue();	  double    value    =    getLastChar().doubleValue();    	non-compiled	[CE]  cannot  find  symbol  iop	25	None	replace
114	[BUG]  [BUGGY]  int  value  =  (int)Math.log(x);  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  (int)Math.log(x);  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  (int)Math.log(x);	  int    value    =    (int)Math.floor(prev);    	non-compiled	[CE]  cannot  find  symbol  iop	23	None	replace
115	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                    ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev).doubleValue();	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
116	[BUG]  [BUGGY]  double  value  =  Math.pow(10,  prev)/  10;  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =  Math.pow(10,  prev)/  10;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =  Math.pow(10,  prev)/  10;	  double    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	20	None	replace
117	[BUG]  [BUGGY]  long  value  =  getFirstChar();  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  long  value  =  getFirstChar();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	long  value  =  getFirstChar();	  long    value    =    getLastChar();    	non-compiled	[CE]  cannot  find  symbol  iop	6	None	replace
118	[BUG]  [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue();  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  int  value  =  Math.pow(10,  prev).doubleValue();  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	int  value  =  Math.pow(10,  prev).doubleValue();	  int    value    =    Math.pow(10,    prev);    	non-compiled	[CE]  cannot  find  symbol  iop	21	None	replace
119	[BUG]  [BUGGY]  double  value  =(double)value;  [CE]  cannot  find  symbol  iop  [FE]            ComparisonFailure      [CONTEXT]      void  addNumber(double  x)  {    char  prev  =  getLastChar();  if  (x  <  0  &&  prev  ==  '-')  {  add(     "       ");  }  if  ((long)  x  ==  x)  {      [BUGGY]  double  value  =(double)value;  [BUGGY]      long  mantissa  =  value;  int  exp  =  0;  if  (Math.abs(x)  >=  100)  {  while  (mantissa  /  10  *  Math.pow(10,  exp  +  1)  ==  value)  {  mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure51/src/com/google/javascript/jscomp/CodeConsumer.java	0.20412414523193154	242	242	1	replace	double  value  =(double)value;	  double    value    =    (double)x;    	non-compiled	[CE]  cannot  find  symbol  iop	17	None	replace
